    1  vi vi ~/.zshrc
    2  vi vi
    3  rm vi
    4  port select python
    5  pip install --user powerline-status
    6  pip3 install --user powerline-status
    7  cd /Users/igor/.oh-my-zsh/themes/
    8  git clone https://github.com/bhilburn/powerlevel9k.git ~/.oh-my-zsh/custom/themes/powerlevel9k
    9  cd /Users/igor/.oh-my-zsh/themes/powerlevel9k
   10  ls -lrt pols
   11  cd ../custom/themes
   12  cd powerlevel9k
   13  sudo apt-get install fonts-powerline
   14  mkdir fonts
   15  cd fonts
   16  # clone\ngit clone https://github.com/powerline/fonts.git --depth=1\n# install\ncd fonts\n./install.sh\n# clean-up a bit\ncd ..\nrm -rf fonts
   17  rm -r fonts
   18  aws help
   19  .venv/bin/activate
   20  python -version
   21  cd dev
   22  vi errror.txt
   23  ls -alf
   24  virtualenv .venv
   25  ls -al ls /usr/bin/python*
   26  virtualenv --python=/usr/bin/python2.7 .venv
   27  vi .gitignore
   28  ls ~/.ssh/id_rsa.pub
   29  cat ~/.ssh/
   30  ssh-keygen -t rsa -b 4096 -C "igor@agilestacks.com"
   31  eval "$(ssh-agent -s)"
   32  ssh-add -K ~/.ssh/id_rsa
   33  cat /Users/igor/.ssh/id_rsa.pub
   34  git push --force
   35  git remote add origin https://github.com/agilestacks/agilestacks-components.git/
   36  ssh-add ~/.ssh/id_rsa
   37  git remote add origin https://github.com/mameshini/agilestacks/agilestacks-components.git/
   38  git remote add origin https://github.com/mameshini/agilestacks/
   39  ssh -T git@github.com
   40  cd /Users/igor/dev/agilestacks-components/asisweeper/
   41  git clone git@github.com:agilestacks/agilestacks-components.git
   42  cd agilestacks-components
   43  git config pull.rebase true
   44  git config rebase.autoStash true
   45  cd !
   46  history >hist3.txt
   47  vi ~/.gitconfig
   48  cd asisweeper
   49  rm asisweeper.zip
   50  pip3 install boto3
   51  rcs
   52  299380738002
   53  ./main.py --help
   54  ls .venv/
   55  pip
   56  pip install --ignore-installed boto3
   57  echo $PATH
   58  which -a python
   59  brew list python | grep pip
   60  brew unlink python && brew link python
   61  pip install boto3
   62  python -m pip install --user boto3
   63  /usr/local/bin/pip --version
   64  /usr/local/bin/pip3 --version
   65  easy_install pip
   66  sudo ls
   67  sudo easy_install pip
   68  sudo pip install â€”ignore-installed six boto3
   69  easy_install boto3
   70  ls -l
   71  cd dev/agilestacks-components
   72  cd /Users/igor/dev/agilestacks\-components/sweeper
   73  cd /Users/igor/dev/jdemo4
   74  cp ~/Downloads/dev1.demo08.superhub.io .
   75  ls -lha components/
   76  kubectl apply -f components/ -R
   77  cd ~/dev/kubeflow
   78  export KUBECONFIG=./dev1.demo08.superhub.io
   79  ls -lha kubeflow/components/
   80  kubectl apply -f kubeflow/components/ -R
   81  kubectl apply -f kubeflow/components/jupyterhub/ -R
   82  kubectl apply -f kubeflow/components/jupyterhub/
   83  cd kubeflow
   84  kubectl create namespace kf-tutorial
   85  ks init kf-tutorial && cd kf-tutorial
   86  ks env add cdk
   87  ks registry add kubeflow github.com/google/kubeflow/tree/master/kubeflow
   88  ks pkg install kubeflow/core
   89  ks pkg install kubeflow/tf-serving
   90  ks pkg install kubeflow/tf-job
   91  mkdir ~/.kube/config
   92  cp ../dev1.demo08.superhub.io ~/.kube/config
   93  ks generate core kubeflow-core --name=kubeflow-core --namespace=kf-tutorial
   94  vi components/kubeflow-core.jsonnet
   95  vi components/params.libsonnet
   96  kubectl create clusterrolebinding default-admin --clusterrole=cluster-admin --user=igor@agilestacks.com
   97  kubectl create clusterrolebinding default-admin --clusterrole=cluster-admin --user=demo08.admin@agilestacks.io
   98  ks apply cdk -c kubeflow-core
   99  ls -laR vendor/
  100  ks env add nocloud
  101  KF_ENV=nocloud
  102  APP_NAME=my-kubeflow
  103  ks registry add kubeflow github.com/kubeflow/kubeflow/tree/master/kubeflow
  104  ks pkg install kubeflow/core\nks pkg install kubeflow/tf-serving\nks pkg install kubeflow/tf-job\n
  105  NAMESPACE=kubeflow
  106  ks generate core kubeflow-core --name=kubeflow-core --namespace=${NAMESPACE}
  107  ks param set kubeflow-core reportUsage true\nks param set kubeflow-core usageId $(uuidgen)
  108  ks apply ${KF_ENV} -c kubeflow-core
  109  ks generate kubeflow-core kubeflow-core\n
  110  NAMESPACE=mykubeflow\nkubectl create ns ${NAMESPACE}\n# set kube context to point to the new namespace\nkubectl config set-context $(kubectl config current-context) --namespace=${NAMESPACE}\n
  111  VERSION=v0.1.2
  112  APP_NAME=my-kubeflow1
  113  ks init ${APP_NAME}\ncd ${APP_NAME}\nks env set default --namespace ${NAMESPACE}
  114  ks registry add kubeflow github.com/kubeflow/kubeflow/tree/${VERSION}/kubeflow\n
  115  ks pkg install kubeflow/core@${VERSION}\nks pkg install kubeflow/tf-serving@${VERSION}\nks pkg install kubeflow/tf-job@${VERSION}\n
  116  ks generate kubeflow-core kubeflow-core
  117  ks env add newenvname --api-spec=version:v1.9.7
  118  ks apply default -c kubeflow-core
  119  history >mykubeflow.txt
  120  vi mykubeflow.txt
  121  vim mykubeflow.txt
  122  cat mykubeflow.txt
  123  kubectl get all
  124  echo ${VERSION}
  125  CNN_JOB_NAME=mycnnjob\n\nks registry add kubeflow-git github.com/kubeflow/kubeflow/tree/${VERSION}/kubeflow\nks pkg install kubeflow-git/examples\n
  126  cat /Users/igor/dev/kubeflow/kf-tutorial/my-kubeflow/my-kubeflow1/components/mycnnjob.jsonnet
  127  kubectl get -o yaml tfjobs default.mycnnjob
  128  kubectl get svc -n=${NAMESPACE}
  129  kubectl get crd -o yaml
  130  kubectl get crd -o yaml >crds.txt
  131  vi crds.txt
  132  kubectl logs $(kubectl get pods -a | grep Completed | tr -s ' ' | cut -d ' ' -f 1)
  133  kubectl get pods -a 
  134  kubectl get TfJob -o yaml
  135  kubectl get tfjob
  136  echo $JOB
  137  kubectl apply -f example.yaml -n ${NAMESPACE}
  138  kubectl logs deploy/tf-job-operator -n default
  139  kubectl logs deploy/tf-job-operator -n mykubeflow
  140  kubectl get services 
  141  kubectl get pods -o wide
  142  kubectl get pods -a | grep Completed
  143  kubectl get job
  144  kubectl get pods -a -n mykubeflow
  145  kubectl logs
  146  kubectl logs deploy/tf-job-operator -n ${NAMESPACE}
  147  kubectl get -o yaml tfjobs mykubeflow
  148  history >kube1.txt
  149  ks delete ${KF_ENV} -c example-job
  150  kubectl get -o yaml tfjobs example-job
  151  kubectl get -o yaml tfjobs myjob
  152  kubectl apply -f example.yaml
  153  k get pods --pervious
  154  kubectl get pods 
  155  kubectl get pods -a
  156  kubectl get crd
  157  kubectl get jobs -a
  158  kubectl get pods --previous
  159  kubectl logs --previous
  160  cat example.yaml
  161  kubectl describe jobs/myjob
  162  kubectl describe jobs/*
  163  kubectl create -f example.yaml
  164  kubectl describe jobs/example-job
  165  kubectl describe jobs
  166  kubectl describe jobs/default.mycnnjob
  167  kubectl describe jobs/mykubeflow.mycnnjob
  168  kubectl describe pods
  169  kubectl get pods --previous=true
  170  export KUBECONFIG=~/dev/kubeflow/dev1.demo08.superhub.io
  171  export GITHUB_TOKEN=75e43dd2d24dd39b6c205a600b47d642daed4d04
  172  kubectl log -f mycnnjob-ps-ahy7-0-me26s
  173  kubectl log -f mycnnjob-worker-ahy7-0-beg1x
  174  kubectl log mycnnjob-worker-ahy7-0-beg1x >cnnbench1.out
  175  kubectl logs mycnnjob-ps-ahy7-0-me26s >cnnbench2.out
  176  ls /opt/tf-benchmarks/scripts/tf_cnn_benchmarks
  177  vi components/mycnnjob.jsonnet
  178  CNN_JOB_NAME=mycnnjob
  179  KF_ENV=default
  180  echo ${KF_ENV}
  181  kubectl describe jobs/mycnnjob
  182  ks show ${KF_ENV} -c ${CNN_JOB_NAME}
  183  kubectl logs mycnnjob-ps-ahy7-0-me26s
  184  ks apply ${KF_ENV} -c ${CNN_JOB_NAME}
  185  cd /Users/igor/dev/reactor
  186  ./toolbox
  187  vi ~/Downloads/error.txt
  188  cd ~/dev/automation-hub
  189  cd toolbox
  190  mkdir mldemo
  191  cd mldemo
  192  mv ~/Downloads/dev3.demo08.superhub.io .
  193  vi ../../demo/his3.txt
  194  export KUBECONFIG=dev3.demo08.superhub.io
  195  brew install argoproj/tap/argo
  196  argo
  197  argo install --namespace kubeflow
  198  ~/dev/automation-hub/toolbox/toolbox-run
  199  export KUBECONFIG=$HOME/dev/mldemo/dev3.demo08.superhub.io\nkubectl cluster-info
  200  export NAMESPACE=kubeflow\nexport DOMAIN_NAME=default\nexport COMPONENT_NAME=kubeflow\nexport kubectl=kubectl --context="$(DOMAIN_NAME)" --namespace="$(NAMESPACE)"\nexport KUBEFLOW_VERSION=v0.2.2\nexport ARGO_VERSION=v2.1.1\nexport K8S_API_SPEC=v1.9.8\nexport K8S_API_SERVER=https://api.dev3.demo08.superhub.io:6443\nexport KF_ENV=cloud\n
  201  export NAMESPACE=kubeflow\n
  202  export DOMAIN_NAME=default\n
  203  export COMPONENT_NAME=kubeflow\n
  204  export kubectl=kubectl --context="$(DOMAIN_NAME)" --namespace="$(NAMESPACE)"\n
  205  export kubectl=kubectl --context="$DOMAIN_NAME" --namespace="$NAMESPACE"\n
  206  export ARGO_VERSION=v2.1.1\n
  207  export K8S_API_SPEC=v1.9.8\n
  208  export K8S_API_SERVER=https://api.dev3.demo08.superhub.io:6443\n
  209  export KF_ENV=cloud\n
  210  ks param set kubeflow-core cloud aws --env="$KF_ENV"\n
  211  ks param set kubeflow-core tfAmbassadorServiceType "LoadBalancer" --env="$KF_ENV"\n
  212  ks apply "$KF_ENV" -c seldon --context="$DOMAIN_NAME"\n
  213  ks apply "$KF_ENV" -c seldon\n
  214  ks apply "$KF_ENV" -c seldon --context=kubeflow\n
  215  aws s3 list
  216  aws s3 --region us-east-1 mb s3://mldemo-im.agilestacks.io
  217  export BUCKET_NAME=s3://mldemo-im.agilestacks.io\n
  218  aws s3 ls s3://files.dev3.demo08.superhub.io --recursive
  219  ks param set --env="$KF_ENV" tfjob-v1alpha2 output_model_gcs_bucket "${BUCKET_NAME}"\n
  220  echo ${PROJECT_ID}
  221  gcloud
  222  vi ~/demo/his3.txt
  223  cp ~/Downloads/dev3.demo08.superhub.io $HOME/dev/mldemo/dev3.demo08.superhub.io
  224  export KUBECONFIG=$HOME/dev/mldemo/dev3.demo08.superhub.io\n
  225  ks env add "$KF_ENV"\n
  226  cd ~/dev/mldemo/examples/github_issue_summarization/ksonnet-kubeflow\n
  227  ks param set --env="$KF_ENV" tfjob-v1alpha2 output_model_gcs_bucket "${BUCKET_NAME}"
  228  ~/dev/automation-hub/toolbox/toolbox-run\n
  229  ks param set kubeflow-core cloud aws --env="$KF_ENV"\nks param set kubeflow-core tfAmbassadorServiceType "LoadBalancer" --env="$KF_ENV"\n
  230  \n$ 
  231  export S3_ENDPOINT=s3.us-east-1.amazonaws.com  \nexport AWS_ENDPOINT_URL=https://${S3_ENDPOINT}\nexport AWS_ACCESS_KEY_ID=AKIAI4PZEGTFZWTKDKBA\nexport AWS_SECRET_ACCESS_KEY=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\nexport AWS_REGION=us-east1-1\nexport BUCKET_NAME=s3://mldemo-im.agilestacks.io\nexport S3_USE_HTTPS=1\nexport S3_VERIFY_SSL=1
  232  ks param set --env="$KF_ENV" tfjob-v1alpha2 image "gcr.io/kubeflow-examples/tf-job-issue-summarization:v20180629-v0.1-2-g98ed4b4-dirty-182929"\nks param set --env="$KF_ENV" tfjob-v1alpha2 output_model_gcs_bucket "$BUCKET_NAME"\n
  233  kubectl get pods --all-namespaces | grep issu
  234  ks apply aws -c tfjob-v1alpha2
  235  kubectl logs -f \\n  $(kubectl get pods -ltf_job_key=tf-job-operator-v1alpha2-75bcb7f5f7-bdb6w -o=jsonpath='{.items[0].metadata.name}')
  236  kubectl logs -f \\n  $(kubectl get pods -ltf_job_key=tf-job-operator-v1alpha2-75bcb7f5f7-bdb6w 
  237  kubectl logs -f \\n  $(kubectl get pods -ltf_job_key=tf-job-operator-v1alpha2-75bcb7f5f7-bdb6w)
  238  kubectl logs -f tf-job-operator-v1alpha2-75bcb7f5f7-bdb6w
  239  kubectl logs -f tf-job-operator-v1alpha2-75bcb7f5f7-bdb6w kubectl logs -f tf-job-operator-v1alpha2-75bcb7f5f7-bdb6w --namespace=kubeflow
  240  ks apply default -c tfjob-v1alpha2
  241  kubectl get pods -l job-name
  242  kubectl get TFJob mycnnjob -o yam
  243  kubectl get TFJob mycnnjob -o yaml
  244  kubectl get TFJob tfjob-v1alpha2 -o yaml
  245  vi environments/cloud/params.libsonnet
  246  ks apply cloud -c tfjob-v1alpha2
  247  cd ~/dev/kubeflow/
  248  cd kf-tutorial
  249  cd my-kubeflow
  250  cd my-kubeflow1
  251  vi kube1.txt
  252  vi example.yaml
  253  cd environments
  254  cd cloud
  255  vi main.jsonnet
  256  vi 02_training_the_model_tfjob.md
  257  ks param set tfjob namespace ${NAMESPACE} --env=${KF_ENV}
  258  ks param set tfjob image "gcr.io/agwl-kubeflow/tf-job-issue-summarization:latest" --env=${KF_ENV}
  259  ks param set tfjob sample_size 100000 --env=${KF_ENV}
  260  ks apply default -c tfjob-v1alpha2 --namespace=kubeflow -v
  261  ks apply cloud -c tfjob-v1alpha2 -v
  262  ks apply cloud -c tfjob-v1alpha2 --namespace=kubeflow -v
  263  kubectl describe pods --namespace=kubeflow\n
  264  kubectl get crd | grep tfjob
  265  mkdir HousePrices
  266  cd HousePrices
  267  mv ~/Downloads/all.zip
  268  mv ~/Downloads/all.zip .
  269  unzip all.zip
  270  rm all.zip
  271  ls ~/dev/sample-notebooks/rht-stock-price.ipynb
  272  kubectl get pods --namespace=kubeflow\n
  273  kubectl logs -f jupyter-demo08-2eadmin-40agilestacks-2eio
  274  kubectl logs "jupyter-demo08-2eadmin-40agilestacks-2eio"
  275  kubectl logs "jupyter-demo08-2eadmin-40agilestacks-2eio" --namespace=kubeflow
  276  mv ~/dev/sample-notebooks/rht-stock-price.ipynb ~/dev/sample-notebooks/rht-stock-price.ipynb.txt
  277  mv ~/dev/sample-notebooks/rht-stock-price.ipynb.txt ~/dev/sample-notebooks/rht-stock-price.ipynb
  278  vi $HOME/dev/mldemo/dev3.demo08.superhub.io
  279  aws ecr
  280  cd ~/dev/mldemo/examples/
  281  ls data
  282  vi https://github.com/tensorflow/tensorflow/blob/9a24e8acfcd8c9046e1abaac9dbf5e146186f4c2/tensorflow/examples/learn/mnist.py
  285  vi mnist_client.py
  287  export KUBECONFIG=$HOME/dev/mldemo/dev3.demo08.superhub.io\nkubectl get nodes\n
  291  rm v0.2.zip
  293  cp ../examples/mnist .
  294  cp -r  ../examples/mnist .
  296  cd mnist
  298  cat model
  299  cat model.py
  300  grep KUBEFLOW_VERSION *
  301  grep -r KUBEFLOW_VERSION *
  302  grep -r kubeflow *
  303  aws ecr create-repository --repository-name mnist
  304  DOCKER_BASE_URL=299380738002.dkr.ecr.us-east-1.amazonaws.com/mnist\n
  305  aws ecr get-login --no-include-email
  306  docker login -u AWS -p eyJwYXlsb2FkIjoicExrTGhraDNrQXQrNDAyVXdGYmFKTW4wZXBDRi9wdExpT3loUVhkemhvdjIwSnJJS1QxK3J6aXh6dERDQkw5aDNoVUZWS0ZyMm1Od2dZVG1wZmkwb3NwU2dVU0hOeGxHQytkS0E3MnI3TEpZSnhtYXdZS3QwV3pzdXVhU3EvVlpEYmx0bG9KalFNQmpmSC8xM0MxQ0s5ZWFKVzVmNWtkWHdDVHV4K0IvTmQrN1VOY0E5NFBvZDJQbnRkQi9kNENLRzIvdVRXN29uWG9uQ2svb0NILzROM3FEMmJWM3lWWVMwZkZDUlJ3RHE5RlFwTlJaQW5rMHV3eXFTUTJ5d0RZVmUveWRJcExSblA1Q21mamZtdkp0UGk4M2RFL3ZoMlk0c0tPcWRjNExYYjRBWXg1MGhDSHhlUmtpNVVsZEZZVDh5YnROVGxwUy9CenJEUGNXWFE5SkVjNDU4ZWc4aEtxYXJuZHFRSm9zNnRmTlFCaExESjF5THVWbTk1VmlLbmRuR2dmQXlJRmdPendyWTc4VzlpMWlKZFFQYldad3RWZkhNUWVLa1dTcUNRcXhBVWtSaXBadDI2a09DUWtkUHNEYTBMR3U0bjBzcU4wc0lMZmZZU0o1aHoxckdYUzdtNG1vc1k5cUhORjJoQ1RteG5ZSkFEdjdldWpRYVZ1cjE2R1U4RmJFK1JidHExSjVMTHZRS1lqdWtsRkYyNEpmcU5PNkFSWkg3bVV5NEJOOHRQYjRZb09INDZMbTZMNng3L2prQlFwNU9NZTVDTWM4clFLZng2bFZ3RjhLalQ1a3daU2NMdGl2bDdWNms5ejF0dERZWVNXQnlWeDBmZG1EUU5hVDVjVG5KeFJMQyt0MzZEU2RwRHJoakdtOWtjZ3BuTUhSc3Zha1k5eHFKeExrQnFZTzRlTThrYkZGV3gyNkRTS3U0aU9EYkN3NWJVVWhCTjVYVlJSd0d1TGZJYmxwazJHdEdzTzJtTk1yYjZEeWtpTHBRMUZQYUlENXNkb3RaaGgzWXNMVGRYcFR6MjNjcTdFbGJ5Y3BOT0Q4N0s0TzRUVTRKYzZtS1M0amE1UmZjWis0U1NoNFlFMEwzSnlYMmJ5L2JBOGRiUHNHamZUOE9uNFBrSVVzU0lpWUUrelNYQ3JmTW1YeDRSbFM1N1VxM0hBVldqbnJES2pvNHFwcitPMlFIb1hORk5xWFU1SzlPRkpzUlNOMXgzeGRHTGtDRHBCUjMvVXRTYkpQalFrNnJmRG1lQVhJRXB3UWE2MzI3Z1NzMUdoRzU0RFg4eVN6blJOcXQ3cnVlQWczcWNaTlVoNHNTY3NGeVZIVzBkbmZxdUpzM2ZYeCt1M2NMcStOWDR5RTREakgyS0x2alNWeEhrQXZ3OElLMlFOZTZsZ1YyT3dyZmJ0Q1o3T0lWUUdMeGpJbXczUjU1Z28zempTM1RheWtpNCt2SzZaZG5QTDlmWGdLa1RnUzV2eW5QdG5xNnlxSlhsdGpoeG53IiwiZGF0YWtleSI6IkFRRUJBSGh3bTBZYUlTSmVSdEptNW4xRzZ1cWVla1h1b1hYUGU1VUZjZTlScTgvMTR3QUFBSDR3ZkFZSktvWklodmNOQVFjR29HOHdiUUlCQURCb0Jna3Foa2lHOXcwQkJ3RXdIZ1lKWUlaSUFXVURCQUV1TUJFRURCUldXb3RtSlBxemMwMWczd0lCRUlBN0FmQWVlaHpqazE5RldkRmFjVlkwTE9jZ2k1WEVzekJ6M1VEOTBzc3Bqb1lZai9ocE1URDQ5RWNLY2V1OVk5UC9iTks2UGVEODN1L3VIaUk9IiwidmVyc2lvbiI6IjIiLCJ0eXBlIjoiREFUQV9LRVkiLCJleHBpcmF0aW9uIjoxNTMzNTMyMDI1fQ== https://299380738002.dkr.ecr.us-east-1.amazonaws.com
  307  docker build . --no-cache  -f Dockerfile.model -t ${DOCKER_BASE_URL}/mytfmodel:1.7\n
  310  aws ecr list-repositories
  311  aws list-repositories
  312  aws ecr delete-repository --repository-name mnist --force\n
  313  aws ecr create-repository --repository-name mnist/mytfmodel
  314  $(aws ecr get-login)
  315  (aws ecr get-login)
  316  DOCKER_BASE_URL=arn:aws:ecr:us-east-1:299380738002:repository/mnist/mytfmodel\n
  318  docker push 299380738002.dkr.ecr.us-east-1.amazonaws.com/mnist/mytfmodel:1.7\n
  319  aws ecr describe-images --repository-name ${DOCKER_BASE_URL}\n
  321  aws ecr describe-images --repository-name arn:aws:ecr:us-east-1:299380738002:repository/mnist/\n
  322  aws ecr describe-images --repository-name arn:aws:ecr:us-east-1:299380738002:repository\n
  323  aws ecr describe-images --repository-name mnist/mytfmodel\n
  324  aws ecr describe-images --repository-name mnist/mytfmodel --query 'sort_by(imageDetails,& imagePushedAt)[*]'
  325  aws ecr describe-repositories
  326  NAMESPACE=kubeflow\nAPP_NAME=mnist\n
  327  echo $NAMESPACE
  328  ks init ${APP_NAME}
  329  cd ${APP_NAME}
  332  ks registry add kubeflow github.com/kubeflow/kubeflow/tree/master/kubeflow\n
  333  ks pkg install kubeflow/core@v0.1.2
  335  ls -lrt vendor
  336  ks pkg install kubeflow/argo
  337  kubectl create namespace ${NAMESPACE}
  338  ks generate core kubeflow-core --name=kubeflow-core --namespace=${NAMESPACE}\n
  339  ks generate argo kubeflow-argo --name=kubeflow-argo --namespace=${NAMESPACE} --imageTag=v2.1.0\n
  341  kubectl config set-context $(kubectl config current-context) --namespace=${NAMESPACE}
  345  kubectl get deployment --namespace=${NAMESPACE}
  347  kubectl apply -f tf-user.yaml
  348  kubectl get crd --namespace=${NAMESPACE}
  350  export S3_ENDPOINT=s3.us-east-1.amazonaws.com  \n
  351  export AWS_ENDPOINT_URL=https://${S3_ENDPOINT}\nexport AWS_ACCESS_KEY_ID=AKIAI4PZEGTFZWTKDKBA\nexport AWS_SECRET_ACCESS_KEY=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\nexport AWS_REGION=us-east1-1\nexport BUCKET_NAME=s3://mldemo-im.agilestacks.io\nexport S3_USE_HTTPS=1\nexport S3_VERIFY_SSL=1\n
  354  DOCKER_BASE_URL=arn:aws:ecr:us-east-1:299380738002:repository/mnist/mytfmodel # Put your docker registry here\n
  355  export S3_DATA_URL=s3://${BUCKET_NAME}/data/mnist/\n
  356  export S3_TRAIN_BASE_URL=s3://${BUCKET_NAME}/models\n
  358  echo $BUCKET_NAME
  359  export S3_DATA_URL=${BUCKET_NAME}/data/mnist/\n
  360  echo $S3_DATA_URL
  361  aws s3 ls $S3_DATA_URL
  362  export S3_TRAIN_BASE_URL=${BUCKET_NAME}/models
  363  echo $S3_TRAIN_BASE_URL
  364  export JOB_NAME=myjob-$(uuidgen  | cut -c -5 | tr '[:upper:]' '[:lower:]')
  365  echo $JOB_NAME
  366  echo $${DOCKER_BASE_URL}
  367  echo ${DOCKER_BASE_URL}
  370  aws ecr list-images --repository-name mnist/mytfmodel
  371  echo $TF_MODEL_IMAGE
  372  DOCKER_BASE_URL=arn:aws:ecr:us-east-1:299380738002:repository/mnist  # Put your docker registry here\n
  373  export TF_MODEL_IMAGE=${DOCKER_BASE_URL}/mytfmodel:1.7\n
  374  echo $TF_MODEL_IMAGE
  375  docker images
  376  docker rmi -f 299380738002.dkr.ecr.us-east-1.amazonaws.com/mnist/mytfmodel
  377  docker rmi -f 299380738002.dkr.ecr.us-east-1.amazonaws.com/mnist/mytfmodel:1.7
  378  echo $TF_MODEL_IMAGE
  379  docker run -p 8000:8000 $TF_MODEL_IMAGE
  380  docker run -p 8000:8000 299380738002.dkr.ecr.us-east-1.amazonaws.com/mnist/mytfmodel:1.7
  381  docker ps -a 
  382  docker rm -f 67e282dd8957
  383  docker ps -a 
  384  docker images
  385  aws ecr list-images --repository-name mnist/mytfmodel
  386  export TF_WORKER=3\n
  387  export MODEL_TRAIN_STEPS=200\n
  388  argo submit model-train.yaml -n ${NAMESPACE} --serviceaccount tf-user \\n    -p aws-endpoint-url=${AWS_ENDPOINT_URL} \\n    -p s3-endpoint=${S3_ENDPOINT} \\n    -p aws-region=${AWS_REGION} \\n    -p tf-model-image=${TF_MODEL_IMAGE} \\n    -p s3-data-url=${S3_DATA_URL} \\n    -p s3-train-base-url=${S3_TRAIN_BASE_URL} \\n    -p job-name=${JOB_NAME} \\n    -p tf-worker=${TF_WORKER} \\n    -p model-train-steps=${MODEL_TRAIN_STEPS} \\n    -p s3-use-https=${S3_USE_HTTPS} \\n    -p s3-verify-ssl=${S3_VERIFY_SSL} \\n    -p namespace=${NAMESPACE}\n
  389  argo list
  390  argo get tf-workflow-cl84d
  391  argo list
  392  echo ${TF_WORKER}
  393  echo ${NAMESPACE}
  394  vi model-train.yaml
  395  ls
  396  cd mnist/components
  397  ls
  398  vi kubeflow-core.jsonnet
  399  ls
  400  vi params.libsonnet
  401  pwd
  402  cd..
  403  cd -
  404  kubectl get pods --namespace=kubeflow
  405  kubectl logs -f "tf-job-operator-v1alpha2-75bcb7f5f7-bdb6w" --namespace=kubeflow\n
  406  kubectl logs -f "tf-job-operator-v1alpha2-75bcb7f5f7-bdb6w" --namespace=kubeflow | more\n
  407  vi model-train.yaml
  408  argo submit model-train.yaml -n ${NAMESPACE} --serviceaccount tf-user \\n    -p aws-endpoint-url=${AWS_ENDPOINT_URL} \\n    -p s3-endpoint=${S3_ENDPOINT} \\n    -p aws-region=${AWS_REGION} \\n    -p tf-model-image=${TF_MODEL_IMAGE} \\n    -p s3-data-url=${S3_DATA_URL} \\n    -p s3-train-base-url=${S3_TRAIN_BASE_URL} \\n    -p job-name=${JOB_NAME} \\n    -p tf-worker=${TF_WORKER} \\n    -p model-train-steps=${MODEL_TRAIN_STEPS} \\n    -p s3-use-https=${S3_USE_HTTPS} \\n    -p s3-verify-ssl=${S3_VERIFY_SSL} \\n    -p namespace=${NAMESPACE}\n
  409  argo list
  410  kubectl logs -f "tf-job-operator-v1alpha2-75bcb7f5f7-bdb6w" --namespace=kubeflow \n
  411  argo list
  412  kubectl get pods --namespace=kubeflow
  413  kubectl logs -f "tf-workflow-cnb8k-4262918026" --namespace=kubeflow
  414  kubectl get pods --namespace=kubeflow
  415  kubectl logs -f "tensorboard-myjob-95b55-648dd9775b-dh5q7" --namespace=kubeflow
  416  export AWS_REGION=us-east-1
  417  argo list
  418  argo delete tf-workflow-cnb8k
  419  kubectl logs -f "tensorboard-myjob-95b55-648dd9775b-dh5q7" --namespace=kubeflow
  420  kubectl get pods --namespace=kubeflow
  421  argo list
  422  kubectl logs -f "tensorboard-myjob-95b55-648dd9775b-dh5q7" --namespace=kubeflow
  423  argo submit model-train.yaml -n ${NAMESPACE} --serviceaccount tf-user \\n    -p aws-endpoint-url=${AWS_ENDPOINT_URL} \\n    -p s3-endpoint=${S3_ENDPOINT} \\n    -p aws-region=${AWS_REGION} \\n    -p tf-model-image=${TF_MODEL_IMAGE} \\n    -p s3-data-url=${S3_DATA_URL} \\n    -p s3-train-base-url=${S3_TRAIN_BASE_URL} \\n    -p job-name=${JOB_NAME} \\n    -p tf-worker=${TF_WORKER} \\n    -p model-train-steps=${MODEL_TRAIN_STEPS} \\n    -p s3-use-https=${S3_USE_HTTPS} \\n    -p s3-verify-ssl=${S3_VERIFY_SSL} \\n    -p namespace=${NAMESPACE}
  424  argo list
  425  kubectl get pods --namespace=kubeflow
  426  kubectl logs -f "tensorboard-myjob-95b55-648dd9775b-dh5q7" --namespace=kubeflow
  427  kubectl logs -f "tensorboard-myjob-95b55-66f6d65764-djl69" --namespace=kubeflow
  428  kubectl get pods --namespace=kubeflow
  429  kubectl logs -f "tf-workflow-gr5tz-2221588464" --namespace=kubeflow
  430  aws s3 ls s3://mldemo-im.agilestacks.io --recursive\n
  431  aws s3 ls s3://mldemo-im.agilestacks.io/models/myjob-95b55/ --recursive\n
  432  argo list
  433  argo get tf-workflow-gr5tz
  434  vi model-train.yaml
  435  kubectl get pods --namespace=kubeflow
  436  kubectl logs -f "tf-workflow-gr5tz-3588214389" --namespace=kubeflow
  437  kubectl logs -f "workflow-controller-bb9cbd9b5-8jdrz" --namespace=kubeflow
  438  kubectl get pods --namespace=kubeflow
  439  kubectl logs -f "tf-hub-0" --namespace=kubeflow
  440  PODNAME=$(kubectl get pod -l app=tensorboard-${JOB_NAME} -o jsonpath='{.items[0].metadata.name}')
  441  echo $PODNAME
  442  kubectl port-forward ${PODNAME} 6006:6006
  443  kubectl get services
  444  history >his5.txt
  445  vi his5.txt
  446  kubectl describe tfjobs.kubeflow.org
  447  kubectl get jobs
  448  kubectl get operators
  449  vi his5.txt
  450  kubectl get TFJob -o yaml
  451  kubectl get pods --namespace=kubeflow
  452  kubectl logs -f "tf-job-operator-v1alpha2-75bcb7f5f7-bdb6w" --namespace=kubeflow
  453  ls -lrt
  454  vi model-train.yaml
  455  pwd
  456  ls
  457  vi hist3.txt
  458  cd /Users/igor/dev/agilestacks-components/asisweeper
  459  cd /Users/igor/dev/agilestacks-components/sweeper
  460  aws configure
  461  ls
  462  cat README.md
  463  make activate
  464  ./main.py sweep --account 976312427958 --region us-east1 --region us-east-2
  465  ls
  466  history >his4.txt
  467  vi his4.txt
  468  make ACCOUNT=976312427958
  469  vi his4.txt
  470  make install
  471  ls -lrt
  472  ls features
  473  make activate
  474  make ACCOUNT=976312427958
  475  vi his4.txt
  476  aws s3 ls
  477  ls
  478  ls -lrt
  479  vi .envrc
  480  direnv allow
  481  make info
  482  976312427958
  483  AWS_PROFILE=demo03
  484  make activate info
  485  make install
  486  vi .venv/bin/activate
  487  make ACCOUNT=976312427958
  488  ls -lrt
  489  ls -alrt
  490  rm -r .venv
  491  vi .envrc
  492  rm .envrc
  493  make install
  494  echo
  495  env
  496  pwd
  497  ls
  498  git status
  499  git pull
  500  ls -lrt
  501  aws configure
  502  aws s3 ls
  503  aws configure
  504  aws s3 ls
  505  ls
  506  vi README.md
  507  vi ~/.aws/credentials
  508  export AWS_PROFILE=demo04
  509  aws s3 ls
  510  vi README.md
  511  make install
  512  vi req
  513  vi requirements.txt
  514  vi README.md
  515  make info
  516  env
  517  ls
  518  vi python.log
  519  vi /Users/igor/dev/agilestacks-components/sweeper/.venv/lib/python3.6/site-packages/botocore/vendored/requests/adapters.py
  520  vi .venv/lib/python3.6/site-packages/botocore/vendored/requests/adapters.py
  521  ls -alrt
  522  rm -r .venv
  523  vi README.md
  524  make install
  525  ping 18.210.135.159
  526  cd ~/demo
  527  ls
  528  mkdir tensorflow
  529  cd tensorflow
  530  mv ~/Downloads/9781119466215_code .
  531  ls
  532  unzip 9781119466215_code
  533  ls
  534  cd 9781119466215_code
  535  ls
  536  cd ..
  537  ls
  538  cp -r 9781119466215_code/* .
  539  ls
  540  kubectl get nodes
  541  cd ~/dev/agilestacks-components/sweeper
  542  ls
  543  ls -lrt
  544  ls -alrt
  545  echo $AWS_PROFILE
  546  make info
  547  aws s3 ls
  548  make clean
  549  make install
  550  python --version
  551  pip --version
  552  pip3 --version
  553  python2
  554  pip2
  555  make clean
  556  ls -lrt
  557  vi main.py
  558  ls
  559  vi Makefile
  560  make install
  561  . .venv/bin/activate
  562  which python
  563  python --version
  564  pip --version
  565  pip3 --version
  566  make install
  567  cat README.md
  568  ls
  569  vi *.log
  570  python --version
  571  ls
  572  vi Makefile
  573  vi .venv/bin/activate;
  574  which pip
  575  pip --version
  576  make install
  577  pip install --upgrade pip
  578  make install
  579  make clean
  580  make install
  581  curl https://bootstrap.pypa.io/get-pip.py | python
  582  make clean
  583  make install
  584  curl https://bootstrap.pypa.io/get-pip.py | python
  585  make install
  586  easy_install -U pip
  587  make install
  588  pip install --upgrade setuptools
  589  make install
  590  cd ..
  591  ls
  592  cd ,,
  593  cd ..
  594  cd automation-hub/toolbox
  595  ls
  596  ./toolbox-run
  597  make clean
  598  apk update\n&& apk add --virtual build-dependencies
  599  apk
  600  make clean
  601  make install
  602  cd ~/dev/agilestacks-components/sweeper
  603  ls
  604  make install
  605  sudo rm -rf /Library/Frameworks/Python.framework/Versions/2.7
  606  rm -rf /Library/Frameworks/Python.framework/Versions/2.7
  607  rm -rf "/Applications/Python 2.7"
  608  ls -l /usr/local/bin | grep '../Library/Frameworks/Python.framework/Versions/2.7'
  609  ls -l /usr/local/bin | grep '../Library/Frameworks/Python.framework/Versions/'
  610  cd /usr/local/bin/
  611  cd ~
  612  brew doctor
  613  cd ~/dev/agilestacks-components/sweeper
  614  ls -a
  615  rm -r .venv
  616  python
  617  python --version
  618  which python
  619  brew uninstall python
  620  brew uninstall python@2
  621  brew uninstall python2
  622  python --version
  623  ls /Library/Frameworks/Python.framework/Versions/2.7
  624  vi ~/.bash_profil
  625  vi ~/.bash_profile
  626  brew install python@2
  627  vi .envrc
  628  ls
  629  direnv allow
  630  vi ~/.bash_profile
  631  echo $SHELL
  632  cd ~
  633  ls
  634  cp .zshrc .zshc.bck
  635  cat  .zshrc
  636  rm .zshrc
  637  vi .zshrc
  638  brew install antigen
  639  brew install direnv
  640  brew upgrade direnv
  641  cd ~
  642  ls
  643  vi .envrc
  644  rm .envrc
  645  kubectl
  646  mkdir .kube
  647  ls
  648  vi .kube
  649  ls
  650  pwd
  651  cd .kube
  652  ls
  653  rm -r config
  654  ls
  655  pwd
  656  ls
  657  rm -rf config
  658  ls
  659  touch config
  660  ls
  661  pwd
  662  cd ~/dev/agilestacks-components/sweeper
  663  ls
  664  vi .envrc
  665  direnv allow
  666  pwd
  667  make install
  668  aws s3 ls
  669  vi .envrc
  670  direnv allow
  671  make info
  672  make sweep
  673  make sweep ACCOUNT=976312427958
  674  make ACCOUNT=976312427958
  675  cat RE
  676  cat README.md
  677  :q
  678  vi .envrc
  679  direnv allow
  680  make ACCOUNT=976312427958
  681  ls
  682  pwd
  683  kubectl get nodes
  684  pwd
  685  cd ~/dev/mldemo
  686  ls
  687  mkdir keras
  688  cd keras
  689  ls
  690  git clone https://github.com/sdcubber/keras-training-serving.git
  691  ls
  692  mv ~/Downloads/kaggle.json .
  693  ls
  694  mv ~/Downloads/train-jpg.tar.7z .
  695  ls
  696  pwd
  697  cd ..
  698  ls
  699  ls mnist
  700  ls
  701  cp ~/Downloads/NaNmnist.ipynb .
  702  cp ~/Downloads/Matplotlib-p2.ipynb .
  703  history | grep git clone
  704  history | grep "git clone"
  705  cd ~dev
  706  cd ~/dev
  707  git clone git@github.com:agilestacks/applications.git
  708  cd applications
  709  cp ~/dev/mldemo/NaNmnist.ipynb tf-mnist.ipynb
  710  pwd
  711  mv tf-mnist.ipynb app-templates/jupyter-notebook
  712  cat $HOME/admin.conf
  713  cat /etc/kubernetes/admin.conf
  714  echo
  715  pwd
  716  cd ~/dev/mldemo
  717  ls
  718  history | grep "git KUBECONFIG"
  719  history | grep "KUBECONFIG"
  720  ls
  721  mv ~/Downloads/dev1.demo08.superhub .
  722  mv ~/Downloads/dev1.demo08.superhub-2.io ./dev1.demo08.superhub.io
  723  ls -lrt
  724  history | grep "KUBECONFIG"
  725  export KUBECONFIG=$HOME/dev/mldemo/dev3.demo08.superhub.io
  726  kubectl get nodes
  727  kubectl run php-apache --image=k8s.gcr.io/hpa-example --requests=cpu=200m --expose --port=80
  728  wget -q -O- http://php-apache.apps.dev1.demo08.superhub.io/
  729  wget http://php-apache.apps.dev1.demo08.superhub.io/
  730  wget http://php-apache.app.dev1.demo08.superhub.io/
  731  kubectl get pods
  732  kubectl get services
  733  cd ~/dev/mldemo/
  734  vi hpa-ingres.yaml
  735  kubectl apply -f hpa-ingres.yaml
  736  vi hpa-ingres.yaml
  737  kubectl get nodes
  738  kubectl apply -f hpa-ingres.yaml
  739  wget http://php-apache.app.dev1.demo08.superhub.io/
  740  wget http://php-apache.apps.dev1.demo08.superhub.io/
  741  wget http://php-apache.app.dev1.demo08.superhub.io/
  742  kubectl get ingress
  743  kubectl get ingress --namespace=all
  744  kubectl get ingress
  745  kubectl get ingress --all-namespaces
  746  wget http://php-apache.app.dev3.demo08.superhub.io/
  747  vi hpa-ingres.yaml
  748  kubectl apply -f hpa-ingres.yaml
  749  kubectl get ingress --all-namespaces
  750  wget http://php-apache.app.dev3.demo08.superhub.io/
  751  wget http://agile-demo.app.dev3.demo08.superhub.io/
  752  wget http://agile-demo.apps.dev3.demo08.superhub.io/
  753  wget http://agile-demo.app.dev3.demo08.superhub.io/
  754  wget http://php-apache.app.dev3.demo08.superhub.io/
  755  kubectl get ingress --all-namespaces
  756  ls
  757  vi dev1.demo08.superhub.io
  758  kubectl get pods
  759  kubectl get no
  760  ls
  761  vi hist
  762  vi hist3.txt
  763  history >hist5.txt
  764  vi hist5.txt
  765  cd /Users/igor/dev/agilestacks-components/asisweeper\n
  766  cd ~/dev/agilestacks-components/asisweeper\n
  767  cd ~/dev/agilestacks-components/sweeper\n
  768  ls
  769  vi his4.txt
  770  ls
  771  cat RE
  772  cat README.md
  773  export AWS_PROFILE=demo08
  774  vi ~/.aws/credentials
  775  vi ~/.aws/config
  776  export AWS_PROFILE=demo08
  777  vi ~/.aws/config
  778  export AWS_PROFILE=demo08
  779  cat README.md
  780  vi his4.txt
  781  aws s3 ls
  782  ./main.py sweep --account 299380738002 --region us-east1 --region us-east-2
  783  make activate
  784  make activate info
  785  ./main.py sweep --account 299380738002 --region us-east1 --region us-east-2
  786  make ACCOUNT=299380738002
  787  aws s3 ls
  788  vi his4.txt
  789  cd ~/dev/mldemo
  790  ls
  791  rm dev*.d
  792  rm dev*
  793  cp ~/Downloads/dev01.demo10.superhub.io .
  794  ls
  795  pwd
  796  ls
  797  ls -lrt
  798  cd examples
  799  ls
  800  ls -lrt
  801  cd github_issue_summarization
  802  ls
  803  ls -lrt
  804  export KUBECONFIG=$HOME/dev/mldemo/dev01.demo10.superhub.io
  805  kubectl get nodes
  806  pwd
  807  kubectl get pods --namespace=kubeflow
  808  export \\n  GITHUB_TOKEN=e7a1220da208c677cda9310fa162710bcc340fea\n
  809  ls
  810  mv ks-kubeflow ks-kubeflow.old
  811  mv ksonnet-kubeflow ksonnet-kubeflow.old
  812  ls
  813  ks init ksonnet-kubeflow
  814  ls -lrt
  815  cd ksonnet-kubeflow
  816  export KUBEFLOW_VERSION=v0.2.2\n
  817  ks registry add kubeflow github.com/kubeflow/kubeflow/tree/${KUBEFLOW_VERSION}/kubeflow
  818  kubectl cluster-info\n
  819  export NAMESPACE=kubeflow\nexport DOMAIN_NAME=default\nexport COMPONENT_NAME=kubeflow\nexport KUBEFLOW_VERSION=v0.2.2\nexport ARGO_VERSION=v2.1.1\nexport K8S_API_SPEC=v1.9.8\nexport K8S_API_SERVER=https://api.dev3.demo08.superhub.io:6443\nexport KF_ENV=cloud\n
  820  cd ~/dev/mldemo/examples/github_issue_summarization/ksonnet-kubeflow
  821  ks env add "$KF_ENV"
  822  ks env set ${KF_ENV} --namespace ${NAMESPACE}
  823  ks param set kubeflow-core cloud aws --env="$KF_ENV"
  824  ks param set kubeflow-core tfAmbassadorServiceType "LoadBalancer" --env="$KF_ENV"
  825  kubectl get pods -l name=tf-job-operator --namespace=kubeflow
  826  kubectl get pods -l app=workflow-controller --namespace=kubeflow
  827  kubectl get crd --namespace=kubeflow
  828  argo list
  829  export S3_ENDPOINT=s3.us-west-2.amazonaws.com
  830  export AWS_ENDPOINT_URL=https://${S3_ENDPOINT}
  831  export AWS_ACCESS_KEY_ID=AKIAI4PZEGTFZWTKDKBA
  832  export AWS_SECRET_ACCESS_KEY=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
  833  export AWS_REGION=us-west-2
  834  export BUCKET_NAME=mybucket
  835  export S3_USE_HTTPS=1
  836  export S3_VERIFY_SSL=1
  837  export S3_ENDPOINT=s3.us-east-1.amazonaws.com  \nexport AWS_ENDPOINT_URL=https://${S3_ENDPOINT}\n
  838  export AWS_REGION=us-east1-1\nexport BUCKET_NAME=s3://mldemo-im.agilestacks.io\nexport S3_USE_HTTPS=1\nexport S3_VERIFY_SSL=1\n
  839  aws s3 --region us-east-1 mb s3://mldemo-im.agilestacks.io\naws s3 ls s3://mldemo-im.agilestacks.io --recursive\n\n
  840  kubectl create secret generic aws-creds --from-literal=awsAccessKeyID=${AWS_ACCESS_KEY_ID} \\n --from-literal=awsSecretAccessKey=${AWS_SECRET_ACCESS_KEY}\n
  841  ks param set --env="$KF_ENV" tfjob-v1alpha2 image "gcr.io/kubeflow-examples/tf-job-issue-summarization:v20180629-v0.1-2-g98ed4b4-dirty-182929"\n
  842  ks param set --env="$KF_ENV" tfjob-v1alpha2 output_model_gcs_bucket "$BUCKET_NAME"\n
  843  cd ~/dev/mldemo/examples/github_issue_summarization/notebooks
  844  export PROJECT_ID=299380738002
  845  make PROJECT=${PROJECT_ID} push
  846  kubectl get tfjobs --namespace=kf-tutorial
  847  kubectl get tfjobs --namespace=kubeflow
  848  ls
  849  pwd
  850  cd ..
  851  ls
  852  ks generate tf-cnn cnn --name=cnn
  853  cd ksonnet-kubeflow
  854  ls
  855  ks generate tf-cnn cnn --name=cnn
  856  pwd
  857  ls
  858  ks pkg install kubeflow/examples
  859  ls
  860  ks generate tf-cnn kubeflow-test --name=aws-tf-cnn --namespace=kubeflow
  861  export CNN_JOB_NAME=mycnnjob
  862  export VERSION=v0.2.2
  863  ks registry add kubeflow-git github.com/kubeflow/kubeflow/tree/${VERSION}/kubeflow
  864  ks pkg install kubeflow-git/examples
  865  ls
  866  ks generate tf-job-simple ${CNN_JOB_NAME} --name=${CNN_JOB_NAME}
  867  ks apply ${KF_ENV} -c ${CNN_JOB_NAME} --namespace=kubeflow -v
  868  kubectl get -o yaml tfjobs ${CNN_JOB_NAME}
  869  kubectl get -o yaml tfjobs ${CNN_JOB_NAME} --namespace=kubeflow
  870  kubectl describe tfjobs ${CNN_JOB_NAME} --namespace=kubeflow
  871  kubectl -n ${NAMESPACE} get tfjobs -o yaml ${CNN_JOB_NAME} 
  872  kubectl -n ${NAMESPACE} logs `kubectl get pods --selector=name=tf-job-operator -o jsonpath='{.items[0].metadata.name}'` 
  873  kubectl -n ${NAMESPACE} logs `kubectl get pods --selector=name=tf-job-operator -o jsonpath='{.items[0].metadata.name}' --namespace=kubeflow`
  874  kubectl describe tfjobs ${CNN_JOB_NAME} --namespace=kubeflow
  875  kubectl -n ${NAMESPACE} logs `kubectl get pods --selector=name=tf-job-operator -o jsonpath='{.items[0].metadata.name}' --namespace=kubeflow`
  876  ks apply ${KF_ENV} -c ${CNN_JOB_NAME} --namespace=kubeflow -v
  877  kubectl describe tfjobs ${CNN_JOB_NAME} --namespace=kubeflow
  878  kubectl logs -f \\n  $(kubectl get pods -ltf_job_key=tfjob-issue-summarization -o=jsonpath='{.items[0].metadata.name}')\n
  879  kubectl -n ${NAMESPACE} logs `kubectl get pods --selector=name=tf-job-operator -o jsonpath='{.items[0].metadata.name}' --namespace=kubeflow` \n
  880  kubectl -n ${NAMESPACE} logs -f `kubectl get pods --selector=name=tf-job-operator -o jsonpath='{.items[0].metadata.name}' --namespace=kubeflow` \n
  881  pwd
  882  cd ~/dev/mldemo/examples/github_issue_summarization/ksonnet-kubeflow
  883  ls -lrt
  884  vi app.yaml
  885  ks delete ${KF_ENV} -c ${CNN_JOB_NAME}
  886  kubectl -n ${NAMESPACE} get tfjobs -o yaml ${CNN_JOB_NAME} \n
  887  kubectl get -o yaml tfjobs ${CNN_JOB_NAME} --namespace=kubeflow\n
  888  kubectl get pods --namespace=kubeflow
  889  ks apply ${KF_ENV} -c ${CNN_JOB_NAME} --namespace=kubeflow -v
  890  kubectl -n ${NAMESPACE} logs -f `kubectl get pods --selector=name=tf-job-operator -o jsonpath='{.items[0].metadata.name}' --namespace=kubeflow` \n
  891  kubectl get -o yaml tfjobs ${CNN_JOB_NAME} --namespace=kubeflow
  892  kubectl get fjobs ${CNN_JOB_NAME} --namespace=kubeflow
  893  kubectl get tfjobs ${CNN_JOB_NAME} --namespace=kubeflow
  894  kubectl get pods --namespace=kubeflow
  895  kubectl -n ${NAMESPACE} logs -f mycnnjob-worker-0\n
  896  kubectl describe tfjobs ${CNN_JOB_NAME} --namespace=kubeflow
  897  kubectl -n ${NAMESPACE} logs -f mycnnjob-worker-0\n
  898  ks show ${KF_ENV} -c ${CNN_JOB_NAME}\n
  899  kubectl -n ${NAMESPACE} logs -f mycnnjob-worker-0
  900  kubectl get pods --selector=name=tf-job-operator -o jsonpath='{.items[0].metadata.name}' --namespace=kubeflow
  901  kubectl get pods --selector=name=mycnnjob-worker -o jsonpath='{.items[0].metadata.name}' --namespace=kubeflow
  902  kubectl get pods --selector=name=mycnnjob-worker-0 -o jsonpath='{.items[0].metadata.name}' --namespace=kubeflow
  903  kubectl get pods --namespace=kubeflow
  904  kubectl get pods --selector=name=mycnnjob --namespace=kubeflow
  905  kubectl get pods --selector=name=tf-job-operator --namespace=kubeflow
  906  kubectl get pods --selector=name=tf --namespace=kubeflow
  907  kubectl get pods --selector=name=tf-job --namespace=kubeflow
  908  kubectl -n ${NAMESPACE} logs -f mycnnjob-worker-0
  909  kubectl -n ${NAMESPACE} describe pods mycnnjob-worker-0\n
  910  kubectl -n ${NAMESPACE} logs -f mycnnjob-worker-0
  911  ks delete ${KF_ENV} -c ${CNN_JOB_NAME}
  912  kubectl -n ${NAMESPACE} logs -f mycnnjob-worker-0
  913  pwd
  914  ls -lrt
  915  ls -lrt components
  916  pwd
  917  cd ../..
  918  ls
  919  tar cvf github_issue_summarization .
  920  tar czf github_issue_summarization.tar.gz github_issue_summarization
  921  ls
  922  ls -lrt
  923  pwd
  924  cd /Users/igor/dev/mldemo/examples/github_issue_summarization/ksonnet-kubeflow
  925  pwd
  926  ls
  927  ks param set --env="$KF_ENV" tfjob-v1alpha2 image "gcr.io/kubeflow-examples/tf-job-issue-summarization:v20180629-v0.1-2-g98ed4b4-dirty-182929"
  928  ks param set --env="$KF_ENV" tfjob-v1alpha2 output_model_gcs_bucket "$BUCKET_NAME"
  929  ks env add "$KF_ENV"
  930  ks env set ${KF_ENV} --namespace ${NAMESPACE}
  931  ks apply ${KF_ENV} -c tfjob-v1alpha2 --namespace=kubeflow -v
  932  kubectl get pods --namespace=kubeflow
  933  kubectl logs -f "tf-job-operator-v1alpha2-75bcb7f5f7-pqxtm" --namespace=kubeflow
  934  ls
  935  vi a
  936  vi app.yaml
  937  pwd
  938  ks delete ${KF_ENV} -c ${CNN_JOB_NAME}
  939  kubectl get pods --namespace=kubeflow
  940  pwd
  941  ls
  942  ls environments
  943  ls components
  944  cd ..
  945  ls
  946  mv ksonnet-kubeflow ksonnet-kubeflow.mycnnjob
  947  ls
  948  ks init ksonnet-kubeflow
  949  cd ksonnet-kubeflow
  950  ls
  951  ls ../ks-kubeflow/components/kubeflow-core.jsonnet
  952  export KUBEFLOW_VERSION=v0.2.2
  953  export ARGO_VERSION=v2.1.1
  954  export KF_ENV=cloud
  955  ks env add "$KF_ENV"
  956  ks env set ${KF_ENV} --namespace ${NAMESPACE}
  957  ks param set kubeflow-core cloud aws --env="$KF_ENV"
  958  ks param set kubeflow-core tfAmbassadorServiceType "LoadBalancer" --env="$KF_ENV"
  959  kubectl get pods -l name=tf-job-operator --namespace=kubeflow
  960  kubectl get crd --namespace=kubeflow
  961  aws s3 ls s3://mldemo-im.agilestacks.io --recursive
  962  pwd
  963  cd ../..
  964  ls
  965  pwd
  966  ls
  967  cd ..
  968  ls
  969  pwd
  970  mv examples examples.cnnjon
  971  mv examples.cnnjon examples.cnnjob
  972  ls
  973  git clone https://github.com/kubeflow/examples.git
  974  ls -lrt
  975  cd examples
  976  ls -lrt
  977  cd github_issue_summarization
  978  ls
  979  ls -lrt
  980  ls notebooks
  981  pwd
  982  ls
  983  pwd
  984  cd notebooks
  985  pwd
  986  kubectl get pods --namespace=${NAMESPACE} --selector="app=jupyterhub" --output=template --template="{{with index .items 0}}{{.metadata.name}}{{end}}"
  987  PODNAME=`kubectl get pods --namespace=${NAMESPACE} --selector="app=jupyterhub" --output=template --template="{{with index .items 0}}{{.metadata.name}}{{end}}"`\n
  988  kubectl --namespace=${NAMESPACE} cp ${PODNAME}:/home/jovyan/examples/github_issue_summarization/notebooks/seq2seq_model_tutorial.h5 .
  989  kubectl --namespace=${NAMESPACE} cp ${PODNAME}:/home/jovyan/work/github_issue_summarization/notebooks/seq2seq_model_tutorial.h5 .
  990  kubectl --namespace=${NAMESPACE} cp ${PODNAME}:/home/jovyan/work/seq2seq_model_tutorial.h5 .
  991  ls -lrt
  992  kubectl --namespace=${NAMESPACE} cp ${PODNAME}:/home/jovyan/work/body_pp.dpkl .
  993  kubectl --namespace=${NAMESPACE} cp ${PODNAME}:/home/jovyan/work/title_pp.dpkl .
  994  ls -lrt
  995  ls
  996  pwd
  997  cd ..
  998  ls
  999  cd notebooks
 1000  ls
 1001  pwd
 1002  cd ..
 1003  find . -name "build_image.sh" -print
 1004  find . -name "*.sh" -print
 1005  pwd
 1006  cd scripts
 1007  ls
 1008  pwd
 1009  cd ..
 1010  ls
 1011  cd ks-kubeflow
 1012  kubectl create clusterrolebinding seldon-admin --clusterrole=cluster-admin --serviceaccount=${NAMESPACE}:default
 1013  ks pkg install kubeflow/seldon
 1014  ks generate seldon seldon --name=seldon --namespace=${NAMESPACE}
 1015  ls
 1016  ls -lrt
 1017  vi app.yaml
 1018  ks apply ${KF_ENV} -c seldon  --namespace=kubeflow -v
 1019  find ~/dev/mldemo -name "app.yaml" -print
 1020  vi /Users/igor/dev/mldemo/examples.cnnjob/github_issue_summarization/ksonnet-kubeflow.old/app.yaml
 1021  vi /Users/igor/dev/mldemo/examples.cnnjob/github_issue_summarization/ksonnet-kubeflow/app.yam
 1022  vi /Users/igor/dev/mldemo/examples.cnnjob/github_issue_summarization/ksonnet-kubeflow/app.yaml
 1023  vi /Users/igor/dev/mldemo/examples.cnnjob/github_issue_summarization/ksonnet-kubeflow.old/app.yaml
 1024  vi /Users/igor/dev/mldemo/examples.cnnjob/github_issue_summarization/ksonnet-kubeflow.mycnnjob/app.yaml
 1025  ks apply ${KF_ENV} -c seldon  --namespace=kubeflow -v
 1026  ks apply ${KF_ENV} -c ambassador --namespace=kubeflow -v
 1027  ks apply ${KF_ENV} -c seldon  --namespace=kubeflow -v
 1028  kubectl get pods --namespace=${NAMESPACE} 
 1029  ks generate seldon-serve-simple issue-summarization-model-serving \\n  --name=issue-summarization \\n  --image=gcr.io/gcr-repository-name/issue-summarization:0.1 \\n  --namespace=${NAMESPACE} \\n  --replicas=2\n
 1030  ks prototype list
 1031  ks pkg install kubeflow/seldon-serve-simple\n
 1032  ks registry add kubeflow github.com/kubeflow/kubeflow/
 1033  ks pkg install kubeflow/seldon-serve-simple
 1034  ks registry update kubeflow github.com/kubeflow/kubeflow/
 1035  ks registry list
 1036  ks registry add kubeflow2 github.com/kubeflow/kubeflow/
 1037  ks registry list
 1038  ks pkg install kubeflow2/seldon-serve-simple
 1039  ks pkg install kubeflow-git/seldon-serve-simple
 1040  pwd
 1041  vi app.yaml
 1042  ks prototype list
 1043  ks pkg install kubeflow/seldon-serve-simple
 1044  ks generate seldon-serve-simple issue-summarization-model-serving \\n  --name=issue-summarization \\n  --image=gcr.io/gcr-repository-name/issue-summarization:0.1 \\n  --namespace=${NAMESPACE} \\n  --replicas=2\n
 1045  ls com
 1046  ls components
 1047  rm components/issue-summarization-model-serving.jsonnet
 1048  ks generate seldon-serve-simple issue-summarization-model-serving \\n  --name=issue-summarization \\n  --image=gcr.io/gcr-repository-name/issue-summarization:0.1 \\n  --namespace=${NAMESPACE} \\n  --replicas=2\n
 1049  ls components
 1050  ks apply ${KF_ENV} -c issue-summarization-model-serving --namespace=kubeflow -v
 1051  kubectl get pvc --namespace=kubeflow -v
 1052  kubectl get pvc --namespace=kubeflow
 1053  kubectl get pv --namespace=kubeflow
 1054  vi /Users/igor/dev/mldemo/examples/github_issue_summarization/ks-kubeflow/environments/cloud/params.libsonnet
 1055  kubectl get pvc --namespace=kubeflow
 1056  kubectl get pv --namespace=kubeflow
 1057  export MODEL_STORAGE_TYPE=kubeflow-ebs-gp2
 1058  export PVC_NAME=kubeflow/claim-demo10-2esupport-40agilestacks-2eio
 1059  ks param set issue-summarization-model-serving modelStorageType ${MODEL_STORAGE_TYPE}
 1060  ks param set issue-summarization-model-serving pvcName ${PVC_NAME}
 1061  ks param set --env="$KF_ENV" issue-summarization-model-serving modelStorageType ${MODEL_STORAGE_TYPE}
 1062  ks param set --env="$KF_ENV" issue-summarization-model-serving pvcName ${PVC_NAME}
 1063  ks apply ${KF_ENV} -c issue-summarization-model-serving --namespace=kubeflow -v
 1064  export PVC_NAME=claim-demo10-2esupport-40agilestacks-2eio
 1065  ks param set --env="$KF_ENV" issue-summarization-model-serving modelStorageType ${MODEL_STORAGE_TYPE}
 1066  ks param set --env="$KF_ENV" issue-summarization-model-serving pvcName ${PVC_NAME}
 1067  ks apply ${KF_ENV} -c issue-summarization-model-serving --namespace=kubeflow -v
 1068  kubectl get pods -n ${NAMESPACE} -l service=ambassador -o jsonpath='{.items[0].metadata.name}'
 1069  kubectl port-forward $(kubectl get pods -n ${NAMESPACE} -l service=ambassador -o jsonpath='{.items[0].metadata.name}') -n ${NAMESPACE} 8080:80
 1070  curl -X POST -H 'Content-Type: application/json' -d '{"data":{"ndarray":[["issue overview add a new property to disable detection of image stream files those ended with -is.yml from target directory. expected behaviour by default cube should not process image stream files if user does not set it. current behaviour cube always try to execute -is.yml files which can cause some problems in most of cases, for example if you are using kuberentes instead of openshift or if you use together fabric8 maven plugin with cube"]]}}' http://localhost:8080/seldon/issue-summarization/api/v0.1/predictions\n
 1071  ks delete ${KF_ENV} -c issue-summarization-model-serving
 1072  kubectl get pvc --namespace=kubeflow
 1073  kubectl get pv --namespace=kubeflow
 1074  export MODEL_STORAGE_TYPE=kubeflow-ebs-gp2
 1075  export PVC_NAME=data-pvc
 1076  ks param set --env="$KF_ENV" issue-summarization-model-serving modelStorageType ${MODEL_STORAGE_TYPE}
 1077  ks param set --env="$KF_ENV" issue-summarization-model-serving pvcName ${PVC_NAME}
 1078  ks apply ${KF_ENV} -c issue-summarization-model-serving --namespace=kubeflow -v
 1079  kubectl get pvc --namespace=kubeflow
 1080  export MODEL_STORAGE_TYPE=aws-storage
 1081  ks delete ${KF_ENV} -c issue-summarization-model-serving
 1082  export MODEL_STORAGE_TYPE=aws-storage
 1083  export PVC_NAME=data-pvc
 1084  ks param set --env="$KF_ENV" issue-summarization-model-serving modelStorageType ${MODEL_STORAGE_TYPE}
 1085  ks param set --env="$KF_ENV" issue-summarization-model-serving pvcName ${PVC_NAME}
 1086  ks apply ${KF_ENV} -c issue-summarization-model-serving --namespace=kubeflow -v
 1087  kubectl get pvc --namespace=kubeflow
 1088  ks delete ${KF_ENV} -c issue-summarization-model-serving
 1089  ls
 1090  grep -r "replicas: 2" *
 1091  export MODEL_STORAGE_TYPE=aws-storage
 1092  export PVC_NAME=data-pvc
 1093  ks param set --env="$KF_ENV" issue-summarization-model-serving modelStorageType ${MODEL_STORAGE_TYPE}
 1094  ks param set --env="$KF_ENV" issue-summarization-model-serving pvcName ${PVC_NAME}
 1095  grep -r "data-pvc" *
 1096  ks param set --env="$KF_ENV" issue-summarization-model-serving modelStorageType ${MODEL_STORAGE_TYPE}
 1097  ks param set --env="$KF_ENV" issue-summarization-model-serving pvcName ${PVC_NAME}
 1098  ks apply ${KF_ENV} -c issue-summarization-model-serving --namespace=kubeflow -v
 1099  kubectl get pvc --namespace=kubeflow
 1100  kubectl get pv --namespace=kubeflow
 1101  kubectl get pods -n ${NAMESPACE} -l service=ambassador -o jsonpath='{.items[0].metadata.name}'
 1102  kubectl get pods -n kubeflow
 1103  aws iam list-groups-for-user --user-name
 1104  aws iam list-groups-for-user --user-name igor
 1105  aws iam list-groups-for-user --user-name igor@agilestacks.com
 1106  aws iam
 1107  aws iam help
 1108  aws iam list-users
 1109  aws iam list-groups-for-user --user-name rcs
 1110  aws iam list-user-policies --user-name rcs
 1111  aws iam list-attached-user-policies --user-name rcs
 1112  aws iam list-groups-for-user --user-name rcs
 1113  aws iam list-policies
 1114  aws iam list-attached-user-policies --user-name rcs
 1115  aws iam get-policy --user-name rcs --policy-name AdministratorAccess
 1116  aws iam get-policy --user-name rcs --policy-arn arn:aws:iam::aws:policy/AdministratorAccess
 1117  aws iam get-policy --user-name rcs --policy-name arn:aws:iam::aws:policy/AdministratorAccess
 1118  aws iam get-policy --policy-arn arn:aws:iam::aws:policy/AdministratorAccess
 1119  aws iam list-entities-for-policy --policy-arn arn:aws:iam::aws:policy/AdministratorAccess
 1120  vi ~/hist1.txt
 1121  aws iam list-entities-for-policy --policy-arn arn:aws:iam::aws:policy/AdministratorAccess
 1122  pwd
 1123  cd dswork
 1124  mkdir dswork
 1125  cd dswork
 1126  pwd
 1127  git clone https://github.com/SCALESD/workshop-4-datawrangling.git
 1128  ls
 1129  cd workshop-4-datawrangling
 1130  ls
 1131  ls files
 1132  ls
 1133  pwd
 1134  cd ~/demo
 1135  ls
 1136  mkdir zeeto
 1137  cd zeeto
 1138  git clone https://github.com/zeeto-bowlcut/happy-app.git
 1139  ls
 1140  telnet 105.128.44.121
 1141  ssh 105.128.44.121
 1142  ping 105.128.44.121
 1143  ssh 105.128.44.121
 1144  vi hist5.txt
 1145  kubectl get nodes
 1146  cd ~/dev/mldemo/examples/github_issue_summarization/ksonnet-kubeflow
 1147  ls
 1148  grep "KUBECONFIG" hist5.txt 
 1149  export KUBECONFIG=$HOME/dev/mldemo/dev01.demo10.superhub.io
 1150  kubectl get nodes
 1151  kubectl run app --image gcr.io/google-samples/hello-app:1.0
 1152  export KUBECONFIG=$HOME/dev/mldemo/dev01.demo10.superhub.io
 1153  watch -n 1 kubectl get pods
 1154  kubectl get pods
 1155  kubectl get pods | grep hello
 1156  kubectl get pods | grep app-
 1157  kubectl scale deployment app --replicas 3
 1158  kubectl get pods | grep app-
 1159  kubectl expose deployment app --port 80 --type=LoadBalancer
 1160  kubectl get service app
 1161  curl http://10.3.151.28:80
 1162  curl http://a9b8b0c80cab611e899f80eba8c1fad8-66309086.us-east-1.elb.amazonaws.com:80
 1163  kubectl delete service app
 1164  kubectl get service app
 1165  vi helloingress.yaml
 1166  kubectl get pods | grep app-
 1167  vi helloingress.yaml
 1168  kubectl create -f helloingress.yaml
 1169  vi helloingress.yaml
 1170  kubectl create -f helloingress.yaml
 1171  vi helloingress.yaml
 1172  kubectl get nodes -v=6
 1173  kubectl -n dex get authrequests -v=6
 1174  kubectl -n dex get authrequests -v=1
 1175  vi hist5.txt
 1176  cd /Users/igor/dev/agilestacks-components/asisweeper
 1177  cd /Users/igor/dev/agilestacks-components/sweeper
 1178  aws configure --profile mvp
 1179  export AWS_PROFILE=mvp
 1180  aws s3 ls
 1181  vi hist5.txt
 1182  vi ~/hist5.txt
 1183  make ACCOUNT=938880336972
 1184  aws s3 ls
 1185  export AWS_PROFILE=demo04
 1186  aws s3 ls
 1187  aws configure --profile demo10
 1188  export AWS_PROFILE=demo10
 1189  aws s3 ls
 1190  aws s3 ls s3://agilestacks.zeetoutils.superhub.io/hub/darwin/hub
 1191  export AWS_PROFILE=demo10
 1192  export KUBECONFIG=$HOME/dev/mldemo/dev01.demo10.superhub.io
 1193  ls his
 1194  vi hist5.txt
 1195  history >hist6.txt
 1196  vi hist6.txt
 1197  cd /Users/igor/dev/agilestacks-components/sweeper
 1198  make ACCOUNT=299380738002
 1199  ls
 1200  pwd
 1201  vi his4.txt
 1202  ls
 1203  vi RE
 1204  vi README.md
 1205  make info
 1206  aws profile
 1207  export AWS_PROFILE=demo10
 1208  make info
 1209  make ACCOUNT=299380738002
 1210  aws s3 ls
 1211  cd ~/Downloads
 1212  vi error.log
 1213  mv error.log error.txt
 1214  cd ~/dev/mldemo/examples/github_issue_summarization/
 1215  ls
 1216  ls -lrt
 1217  ls ks-kubeflow
 1218  ls -lrt ks-kubeflow
 1219  pwd
 1220  ls
 1221  cd ..
 1222  ls
 1223  ls -lrt
 1224  ld demos
 1225  cd ..
 1226  ls -lrt
 1227  mv examples examples.mnist
 1228  ls
 1229  ls -lrt
 1230  ls mnist
 1231  ls
 1232  ls -lrt
 1233  pwd
 1234  ls
 1235  cp ~/dev/examples .
 1236  cp -r ~/dev/examples .
 1237  ls -lrt
 1238  cd examples
 1239  ls
 1240  ls -lrt
 1241  aws iam get-user
 1242  ACCOUNTID=`aws iam get-user|grep Arn|cut -f6 -d:`
 1243  `aws ecr get-login --no-include-email --region us-west-2`
 1244  `aws ecr get-login --no-include-email --region us-east-1`
 1245  aws ecr create-repository --repository-name tensorflow-notebook-gpu --region us-east-1
 1246  curl -o train.py https://raw.githubusercontent.com/kubeflow/examples/master/github_issue_summarization/notebooks/train.py
 1247  curl -o seq2seq_utils.py https://raw.githubusercontent.com/kubeflow/examples/master/github_issue_summarization/notebooks/seq2seq_utils.py
 1248  ls -lrt
 1249  docker build -t $ACCOUNTID.dkr.ecr.us-west-2.amazonaws.com/tensorflow-notebook-gpu:0.1 . -f-<<EOF\nFROM gcr.io/kubeflow-images-public/tensorflow-1.8.0-notebook-gpu\nRUN pip install ktext annoy sklearn h5py nltk pydot\nCOPY train.py /workdir/train.py\nCOPY seq2seq_utils.py /workdir/seq2seq_utils.py\nEOF
 1250  vi Dockerfile_notebook
 1251  docker
 1252  ls
 1253  mv Dockerfile_notebook Dockerfile
 1254  docker build -t $ACCOUNTID.dkr.ecr.us-east-1.amazonaws.com/tensorflow-notebook-gpu:0.1 .
 1255  ACCOUNTID=`aws iam get-user|grep Arn|cut -f6 -d:`
 1256  echo $ACCOUNTID
 1257  set ACCOUNTID=`aws iam get-user|grep Arn|cut -f6 -d:`
 1258  echo $ACCOUNTID
 1259  aws iam get-user|grep Arn|cut -f6 -d:
 1260  aws iam get-user|grep Arn
 1261  aws iam get-user
 1262  set ACCOUNTID=`aws iam get-user|grep arn|cut -f6 -d:`
 1263  echo $ACCOUNTID
 1264  set ACCOUNTID=`aws iam get-user|grep arn\n'
 1265  set ACCOUNTID=299380738002
 1266  echo $ACCOUNTID
 1267  ACCOUNTID=299380738002
 1268  echo $ACCOUNTID
 1269  docker build -t $ACCOUNTID.dkr.ecr.us-east-1.amazonaws.com/tensorflow-notebook-gpu:0.1 .
 1270  ls -lrt
 1271  docker ls
 1272  docker images
 1273  pwd
 1274  ls
 1275  vi ~/hist5.txt
 1276  cp ~/Downloads/kubeconfig.dev05.demo10.superhub.io.yaml .
 1277  export KUBECONFIG=./kubeconfig.dev05.demo10.superhub.io.yaml
 1278  kubectl get nodes
 1279  kubectl get pods -n kube-system -owide
 1280  kubectl describe node ip-10-0-38-172.ec2.internal
 1281  ks version
 1282  brew install ksonnet/tap/ks
 1283  ks version
 1284  brew upgrade ks
 1285  ks version
 1286  export NAMESPACE=kubeflow
 1287  export KUBEFLOW_VERSION=0.3
 1288  kubectl get storageclass
 1289  export KUBEFLOW_DEPLOY=false
 1290  export KUBEFLOW_VERSION=0.3
 1291  export \\n  GITHUB_TOKEN=e7a1220da208c677cda9310fa162710bcc340fea\n
 1292  cd kubeflow_ks_app/
 1293  cd github_issue_summarization/
 1294  ks init ksonnet-kubeflow
 1295  kubectl get pod -n ${NAMESPACE}
 1296  kubectl get nodes
 1297  pwd
 1298  cp ~/Downloads/kubeconfig.dev05.demo10.superhub.io.yaml .
 1299  export KUBECONFIG=./kubeconfig.dev05.demo10.superhub.io.yaml
 1300  kubectl get nodes
 1301  ks init ksonnet-kubeflow
 1302  cd ksonnet-kubeflow\n
 1303  export KUBEFLOW_VERSION=v0.3\n
 1304  ks registry add kubeflow github.com/kubeflow/kubeflow/tree/${KUBEFLOW_VERSION}/kubeflow\n
 1305  export KUBEFLOW_VERSION=v0.3.0\n
 1306  ks registry add kubeflow github.com/kubeflow/kubeflow/tree/${KUBEFLOW_VERSION}/kubeflow\n
 1307  ks registry list
 1308  argo list
 1309  kubectl cluster-info\n
 1310  kubectl get nodes\n
 1311  pwd
 1312  export KUBECONFIG=$HOME/dev/mldemo/dev05.demo10.superhub.io
 1313  pwd
 1314  kubectl get nodes\n
 1315  export KUBECONFIG=$HOME/dev/mldemo/examples/kubeconfig.dev05.demo10.superhub.io.yaml
 1316  kubectl get nodes\n
 1317  kubectl cluster-info\nexport NAMESPACE=kubeflow\nexport DOMAIN_NAME=default\nexport COMPONENT_NAME=kubeflow\nexport KUBEFLOW_VERSION=v0.3.0\nexport ARGO_VERSION=v2.1.1\nexport K8S_API_SPEC=v1.11.4\nexport K8S_API_SERVER=https://api.dev05.demo10.superhub.io:6443\nexport KF_ENV=cloud\n
 1318  echo $K8S_API_SERVER
 1319  ks env add "$KF_ENV"\nks env set ${KF_ENV} --namespace ${NAMESPACE}\nks param set kubeflow-core cloud aws --env="$KF_ENV"\nks param set kubeflow-core tfAmbassadorServiceType "LoadBalancer" --env="$KF_ENV"\n
 1320  kubectl get pods -l name=tf-job-operator --namespace=kubeflow
 1321  kubectl get pod -n ${NAMESPACE}
 1322  echo $ACCOUNTID
 1323  docker push $ACCOUNTID.dkr.ecr.use-east-1.amazonaws.com/tensorflow-notebook-gpu:0.1
 1324  docker images
 1325  docker push $ACCOUNTID.dkr.ecr.us-east-1.amazonaws.com/tensorflow-notebook-gpu:0.1
 1326  `aws ecr get-login --no-include-email --region us-east-1`
 1327  docker push $ACCOUNTID.dkr.ecr.us-east-1.amazonaws.com/tensorflow-notebook-gpu:0.1
 1328  history >hist6.txt
 1329  vi hist6.txt
 1330  kubectl get pod -n ${NAMESPACE}
 1331  ls ~/Downloads/*.ipynb
 1332  mv /Users/igor/Downloads/Training.ipynb /Users/igor/Downloads/Training3.ipynb
 1333  kubectl create -f https://raw.githubusercontent.com/NVIDIA/k8s-device-plugin/v1.10/nvidia-device-plugin.yml
 1334  kubectl get daemonset -n kube-system
 1335  kubectl get pod -n ${NAMESPACE}
 1336  pwd
 1337  ls -lrt
 1338  ls
 1339  pwd
 1340  cd ..
 1341  ls -lrt
 1342  pwd
 1343  cd ../..
 1344  mv ~/Downloads/PipelineBasics.ipynb.txt ~/Downloads/PipelineBasics.ipynb
 1345  mv ~/Downloads/PipelineTFX.ipynb.txt ~/Downloads/PipelineTFX.ipynb
 1346  vi ~/.aws/config
 1347  vi ~/.aws/credentials
 1348  aws iam get-user
 1349  aws s3 ls
 1350  vi ~/.aws/config
 1351  vi ~/.aws/credentials
 1352  aws iam get-user
 1353  vi ~/.aws/credentials
 1354  vi ~/.aws/config
 1355  export AWS_PROFILE=demo03
 1356  aws s3 ls
 1357  cd ~/dev/agilestacks-components/sweeper\n
 1358  export AWS_PROFILE=demo03
 1359  vi hist6.txt
 1360  vi his4.txt
 1361  make activate
 1362  ./main.py sweep --account 630344061260
 1363  pwd
 1364  ls
 1365  ./main.py sweep --account 630344061260
 1366  ls
 1367  vi his4.txt
 1368  cd /Users/igor/dev/agilestacks-components/sweeper
 1369  ls
 1370  ls -lrt
 1371  ls -alrt
 1372  vi .envrc
 1373  direnv allow
 1374  ls -lrt
 1375  vi requirements.txt
 1376  ls -lrt
 1377  ls -alrt
 1378  vi .venv
 1379  grep "fortune" *
 1380  grep -r "fortune" *
 1381  grep -r "fortune" ~/*
 1382  export AWS_PROFILE=demo03
 1383  vi ~/hist6.txt
 1384  pwd
 1385  make install
 1386  make activate
 1387  ls
 1388  history >hist6.txt
 1389  vi hist6.txt
 1390  make account=630344061260
 1391  pip install --upgrade setuptools
 1392  pip install --upgrade pip
 1393  make account=630344061260
 1394  ./main.py sweep --account 630344061260
 1395  vi hist6.txt
 1396  git status
 1397  git pull
 1398  pwd
 1399  which python
 1400  git status
 1401  cat .gitignore
 1402  rm .envrc
 1403  rm requirements.txt
 1404  rm features
 1405  rm -r features
 1406  pwd
 1407  ls
 1408  pwd
 1409  cd ~
 1410  ls
 1411  pwd
 1412  ls -lrt
 1413  ls -alrt
 1414  vi .aws/config
 1415  vi .aws/credentials
 1416  pwd
 1417  ls -alrt
 1418  vi .vim
 1419  cd /Users/igor/dev/agilestacks-components/sweeper
 1420  ls
 1421  cat README.md
 1422  source_up
 1423  export AWS_PROFILE=demo03
 1424  make activate info
 1425  make ACCOUNT=630344061260
 1426  vi ~/hist6.txt
 1427  make ACCOUNT=630344061260 --region us-east1 --region us-east-2
 1428  vi ~/hist6.txt
 1429  ./main.py sweep --account 630344061260 --region us-east1 --region us-east-2
 1430  make ACCOUNT=630344061260
 1431  cat README.md
 1432  make activate
 1433  ./main.py sweep --account 630344061260 --region us-east1 --region us-east-2
 1434  vi ./main.py
 1435  vi Makefile
 1436  make ACCOUNT=630344061260
 1437  vi ~/.aws/config
 1438  vi Makefile
 1439  make ACCOUNT=630344061260
 1440  find / -name "ps1_fortune*" -print
 1441  vi .envrc
 1442  ls
 1443  vi .zshrc
 1444  vi ~/.zshrc
 1445  ls -alrt ~/
 1446  vi hist6.txt
 1447  history >hist6.txt
 1448  vi hist6.txt
 1449  cd ~/dev/agilestacks-components/sweeper
 1450  ps
 1451  ls
 1452  cd ~/dev/agilestacks-components/sweeper
 1453  ls
 1454  env
 1455  export AWS_PROFILE=demo10
 1456  aws s3 ls
 1457  cd ~/dev/mldemo/examples/github_issue_summarization
 1458  ls
 1459  vi ~/hist6.txt
 1460  export KUBECONFIG=$HOME/dev/mldemo/dev01.demo10.superhub.io
 1461  cd ~/dev/mldemo/
 1462  kubectl get pod -n ${NAMESPACE}
 1463  kubectl get nodes
 1464  ls -lrt
 1465  cd examples
 1466  ls -lrt
 1467  cd github_issue_summarization
 1468  ls -lrt
 1469  cd ../..
 1470  ls
 1471  pwd
 1472  kubectl config view
 1473  kubectl get svc
 1474  kubectl get nodes
 1475  ls
 1476  rm ~/Downloads/dev01.demo10.superhub.io
 1477  cp ~/Downloads/dev01.demo10.superhub.io .
 1478  ls ~/Downloads/dev* -lrt
 1479  ls ~/Downloads/dev01* -lrt
 1480  ls -lrt ~/Downloads/dev*
 1481  ls -lrt ~/Downloads/
 1482  cp ~/Downloads/kubeconfig.dev01.demo10.superhub.io-2.yaml ./kubeconfig.dev01.demo10.superhub.io.yaml
 1483  export KUBECONFIG=$HOME/dev/mldemo/kubeconfig.dev01.demo10.superhub.io.yaml
 1484  kubectl get nodes
 1485  kubectl get svc
 1486  cp /Users/igor/Downloads/agilestacks-ml-4dcc94f4f301.json .
 1487  ls -lrt
 1488  kubectl create secret generic gcp-cred --namespace=kubeflow --from-file=agilestacks-ml-4dcc94f4f301.json
 1489  kubectl get secrets
 1490  kubectl get secrets --namespace=kubeflow
 1491  kubectl create secret generic gcp-cred --from-file=agilestacks-ml-4dcc94f4f301.json
 1492  kubectl get secret gcp-cred -o yaml 
 1493  kubectl get secrets --namespace=kubeflow
 1494  kubectl get secret gcp-cred -o yaml 
 1495  kubectl create secret generic gcp-cred --from-file=agilestacks-ml-4dcc94f4f301.json
 1496  kubectl delete secret gcp-cred
 1497  kubectl create secret generic gcp-cred --from-file=agilestacks-ml-4dcc94f4f301.json
 1498  kubectl delete secret gcp-cred
 1499  kubectl delete secret gcp-cred --namespace=kubeflow
 1500  kubectl create secret generic user-gcp-sa --namespace=kubeflow --from-file=agilestacks-ml-4dcc94f4f301.json\n
 1501  cd /Users/igor/dev/components/istio/k8s\-gke
 1502  pwd
 1503  cd ../..
 1504  ls
 1505  pwd
 1506  git reset --hard HEAD
 1507  history
 1508  cd $HOME/dev/mldemo/
 1509  ls
 1510  cp ~/Downloads/kubeconfig.dev5.demo10.superhub.io.yaml .
 1511  ls -lrt
 1512  export KUBECONFIG=$HOME/dev/mldemo/kubeconfig.dev5.demo10.superhub.io.yaml
 1513  kubectl get nodes
 1514  kubectl create secret generic user-gcp-sa --namespace=kubeflow --from-file=agilestacks-ml-4dcc94f4f301.json\n
 1515  kubectl create secret generic user-gcp-sa --from-file=agilestacks-ml-4dcc94f4f301.json\n
 1516  cp /Users/igor/dev/pipelines/samples/notebooks/KubeFlow Pipeline Using TFX OSS Components.ipynb .
 1517  cp "/Users/igor/dev/pipelines/samples/notebooks/KubeFlow Pipeline Using TFX OSS Components.ipynb" ./PipelineTFX3.ipynb
 1518  pwd
 1519  vi weather.txt
 1520  kubectl get nodes
 1521  hisgtory
 1522  history
 1523  cp ~/Downloads/kubeconfig.dev5.demo10.superhub.io-2.yaml kubeconfig.dev5.demo10.superhub.io.yaml
 1524  export KUBECONFIG=$HOME/dev/mldemo/kubeconfig.dev01.demo10.superhub.io.yaml
 1525  kubectl --namespace=kubeflow get nodes
 1526  kubectl --namespace=kubeflow get pods
 1527  mc 
 1528  pwd
 1529  kubectl get nodes
 1530  ls
 1531  history
 1532  cd $HOME/dev/mldemo/
 1533  ls agilestacks-ml-4dcc94f4f301.json
 1534  cat agilestacks-ml-4dcc94f4f301.json
 1535  kubectl create secret generic user-gcp-sa --namespace=kubeflow --from-file=agilestacks-ml-4dcc94f4f301.json
 1536  kubectl delete secret generic user-gcp-sa --namespace=kubeflow
 1537  kubectl delete secret user-gcp-sa --namespace=kubeflow
 1538  kubectl create secret generic user-gcp-sa --namespace=kubeflow --from-file=agilestacks-ml-4dcc94f4f301.json
 1539  kubectl create secret generic user-gcp-sa --from-file=agilestacks-ml-4dcc94f4f301.json
 1540  kubectl get secret generic user-gcp-sa
 1541  kubectl get secret user-gcp-sa
 1542  kubectl describe secret user-gcp-sa
 1543  kubectl get secrets
 1544  kubectl get secrets --namespace=kubeflow
 1545  kubectl create secret generic user-gcp-sa --namespace=kubeflow --from-file=agilestacks-ml-4dcc94f4f301.json
 1546  cat agilestacks-ml-4dcc94f4f301.json
 1547  aws s3 ls
 1548  export AWS_PROFILE=demo10
 1549  aws s3 ls
 1550  vi jupyter-rbac.yaml
 1551  kubectl apply -f jupyter-rbac.yaml
 1552  vi jupyter-rbac.yaml
 1553  cp jupyter-rbac.yaml dasboard-rbac.yaml
 1554  kubectl apply -f dasboard-rbac.yaml
 1555  kubectl create clusterrolebinding kubernetes-dashboard --clusterrole=cluster-admin --serviceaccount=kube-system:kubernetes-dashboard
 1556  kubectl create clusterrolebinding default-admin --clusterrole=cluster-admin --serviceaccount=kubeflow:jupyter-notebook
 1557  kubectl auth can-i -n kubeflow --as=system:serviceaccount:kubeflow:default create tfjobs
 1558  kubectl auth can-i -n kubeflow --as=system:serviceaccount:kubeflow:jupyter-notebook create tfjobs
 1559  kubectl auth can-i -n kubeflow --as=system:serviceaccount:kubeflow:jupyter-notebook list nodes
 1560  kubectl auth can-i -n kubeflow --as=system:serviceaccount:kubeflow:jupyter-notebook list secrets
 1561  kubectl create clusterrolebinding sa-admin --clusterrole=cluster-admin --serviceaccount=kubeflow:jupyter-notebook --namespace=kubeflow
 1562  kubectl auth can-i -n kubeflow --as=system:serviceaccount:kubeflow:jupyter-notebook list secrets
 1563  kubectl auth can-i -n kubeflow --as=system:serviceaccount:kubeflow:jupyter-notebook list nodes
 1564  kubectl auth can-i -n kubeflow --as=system:serviceaccount:kubeflow:jupyter-notebook get secret
 1565  kubectl auth can-i -n kubeflow --as=system:serviceaccount:kubeflow:jupyter-notebook get secret "user-gcp-sa"
 1566  kubectl auth can-i -n kubeflow --as=system:serviceaccount:kubeflow:jupyter-notebook get secret
 1567  kubectl auth can-i -n kubeflow --as=system:serviceaccount:kubeflow:jupyter-notebook list nodes
 1568  kubectl create clusterrolebinding sa-admin --clusterrole=cluster-admin --serviceaccount=system:serviceaccount:kubeflow:jupyter-notebook --namespace=kubeflow
 1569  kubectl create clusterrolebinding sa-admin --clusterrole=cluster-admin --serviceaccount=kubeflow:jupyter-notebook --namespace=kubeflow
 1570  vi jupyter-rbac.yaml
 1571  kubectl delete -f dasboard-rbac.yaml
 1572  kubectl delete -f jupyter-rbac.yaml
 1573  rm dasboard-rbac.yaml
 1574  vi jupyter-rbac.yaml
 1575  kubectl apply -f jupyter-rbac.yaml
 1576  vi jupyter-rbac.yaml
 1577  kubectl apply -f jupyter-rbac.yaml
 1578  kubectl delete -f jupyter-rbac.yaml
 1579  kubectl apply -f jupyter-rbac.yaml
 1580  vi jupyter-rbac.yaml
 1581  kubectl delete -f jupyter-rbac.yaml
 1582  vi jupyter-rbac.yaml
 1583  kubectl apply -f jupyter-rbac.yaml
 1584  vi jupyter-rbac.yaml
 1585  kubectl apply -f jupyter-rbac.yaml
 1586  vi jupyter-rbac.yaml
 1587  kubectl apply -f jupyter-rbac.yaml
 1588  vi jupyter-rbac.yaml
 1589  kubectl apply -f jupyter-rbac.yaml
 1590  vi jupyter-rbac.yaml
 1591  kubectl apply -f jupyter-rbac.yaml
 1592  vi jupyter-rbac.yaml
 1593  kubectl apply -f jupyter-rbac.yaml
 1594  vi jupyter-rbac.yaml
 1595  kubectl create clusterrolebinding default-admin --clusterrole=cluster-admin --user=system:serviceaccount:kubeflow:jupyter-notebook
 1596  kubectl delete clusterrolebinding default-admin
 1597  kubectl create clusterrolebinding default-admin --clusterrole=cluster-admin --user=system:serviceaccount:kubeflow:jupyter-notebook
 1598  kubectl auth can-i -n kubeflow --as=system:serviceaccount:kubeflow:jupyter-notebook get secret
 1599  kubectl create clusterrolebinding sa-admin --clusterrole=cluster-admin --serviceaccount=kubeflow:default
 1600  kubectl create clusterrolebinding sa-admin1 --clusterrole=cluster-admin --serviceaccount=kubeflow:default
 1601  ls ~/.kube/config
 1602  vi /Users/igor/.kube/config
 1603  ls -lrt ~/.kube/
 1604  ls
 1605  cat kubeconfig.dev5.demo10.superhub.io.yaml
 1606  history
 1607  kubectl get secrets --namespace=kubeflow
 1608  kubectl get secret user-gcp-sa
 1609  kubectl read secret user-gcp-sa
 1610  kubectl get secret user-gcp-sa
 1611  kubectl get secrets --namespace=kubeflow
 1612  kubectl create secret generic mysecret --from-file=agilestacks-ml-4dcc94f4f301.json --namespace=kubeflow
 1613  kubectl get secret mysecret -o yaml --namespace=kubeflow
 1614  history
 1615  kubectl delete secret user-gcp-sa --namespace=kubeflow
 1616  kubectl delete secret user-gcp-sa
 1617  ls -lrt
 1618  cp ~/Downloads/kubeconfig.dev4.demo10.superhub.io.yaml .
 1619  export KUBECONFIG=$HOME/dev/mldemo/kubeconfig.dev4.demo10.superhub.io.yaml
 1620  kubectl create secret generic user-gcp-sa --from-file=agilestacks-ml-4dcc94f4f301.json --namespace=kubeflow
 1621  vi tfx-taxi-cab-classification-pipeline.log
 1622  kubectl get pods --namespace=kubeflow
 1623  kubectl logs tfx-taxi-cab-classification-pipeline-example-ht94b-2450764165 --namespace=kubeflow
 1624  kubectl logs tfx-taxi-cab-classification-pipeline-example-ht94b-2450764165 --namespace=kubeflow --previous
 1625  kubectl logs "tfx-taxi-cab-classification-pipeline-example-ht94b-2450764165" --namespace=kubeflow --previous
 1626  kubectl logs "tfx-taxi-cab-classification-pipeline-example-ht94b-2450764165" --namespace=kubeflow --previous -c main
 1627  kubectl logs "tfx-taxi-cab-classification-pipeline-example-ht94b-2450764165" --namespace=kubeflow --previous -c wait
 1628  kubectl logs "tfx-taxi-cab-classification-pipeline-example-ht94b-2450764165" -c main --namespace=kubeflow
 1629  kubectl logs "tfx-taxi-cab-classification-pipeline-example-ht94b-2450764165" -c main --namespace=kubeflow >tfx-taxi-cab-classification-pipeline-example-main.log
 1630  kubectl logs "tfx-taxi-cab-classification-pipeline-example-ht94b-2450764165" -c wait --namespace=kubeflow >tfx-taxi-cab-classification-pipeline-example-wait.log
 1631  kubectl logs "tfx-taxi-cab-classification-pipeline-example-ht94b-2450764165" -c wait --namespace=kubeflow
 1632  ls -lrt
 1633  vi tfx-taxi-cab-classification-pipeline-example-main.log
 1634  pwd
 1635  cp /Users/igor/dev/pipelines/components/dataflow/tfdv ./foostep
 1636  cp -r /Users/igor/dev/pipelines/components/dataflow/tfdv ./foostep
 1637  ls
 1638  cd foostep
 1639  ls
 1640  cd src
 1641  ls
 1642  vi example.py
 1643  python --version
 1644  python3 --version
 1645  python3 example.py
 1646  vi example.py
 1647  python3 example.py
 1648  ls /users/igor/Downloads/train.csv
 1649  vi example.py
 1650  python3 example.py
 1651  vi example.py
 1652  /usr/local/bin/python3 -m pip install -U pylint --user
 1653  pwd
 1654  cd ~/dev/mldemo/foostep/src
 1655  cd /Users/igor/dev/mldemo/foostep/src ; env "PYTHONIOENCODING=UTF-8" "PYTHONUNBUFFERED=1" /usr/local/bin/python3 /Users/igor/.vscode/extensions/ms-python.python-2018.12.1/pythonFiles/ptvsd_launcher.py --default --client --host localhost --port 53192 /Users/igor/dev/mldemo/foostep/src/example.py 
 1656  cd /Users/igor/dev/mldemo/foostep/src ; env "PYTHONIOENCODING=UTF-8" "PYTHONUNBUFFERED=1" /usr/local/bin/python3 /Users/igor/.vscode/extensions/ms-python.python-2018.12.1/pythonFiles/ptvsd_launcher.py --default --client --host localhost --port 53227 /Users/igor/dev/mldemo/foostep/src/validate.py 
 1657  wd
 1658  pwd
 1659  cd ../..
 1660  ls -lrt
 1661  export kubeconfig.dev5.demo10.superhub.io.yaml
 1662  export KUBECONFIG=kubeconfig.dev5.demo10.superhub.io.yaml
 1663  history
 1664  kubectl get secrets --namespace=kubeflow
 1665  kubectl delete secret user-gcp-sa --namespace=kubeflow
 1666  kubectl create secret generic user-gcp-sa --namespace=kubeflow --from-file=agilestacks-ml-4dcc94f4f301.json
 1667  cat agilestacks-ml-4dcc94f4f301.json
 1668  mv agilestacks-ml-4dcc94f4f301.json user-gcp-sa.json
 1669  kubectl delete secret user-gcp-sa --namespace=kubeflow
 1670  kubectl create secret generic user-gcp-sa --namespace=kubeflow --from-file=user-gcp-sa.json
 1671  cat user-gcp-sa.json
 1672  ls -lrt
 1673  export KUBECONFIG=kubeconfig.dev4.demo10.superhub.io.yaml
 1674  kubectl delete secret user-gcp-sa --namespace=kubeflow
 1675  kubectl create secret generic user-gcp-sa --namespace=kubeflow --from-file=user-gcp-sa.json
 1676  export KUBECONFIG=kubeconfig.dev5.demo10.superhub.io.yaml
 1677  kubectl delete secret user-gcp-sa --namespace=kubeflow
 1678  kubectl create secret generic user-gcp-sa --namespace=kubeflow --from-file=user-gcp-sa.json
 1679  export KUBECONFIG=kubeconfig.dev4.demo10.superhub.io.yaml
 1680  kubectl get nodes
 1681  kubectl describe node ip-10-0-33-250.ec2.internal
 1682  find /Users/igor/dev/code-snippets/ml/ -name "deploy-tf-serve.py" -print
 1683  find /Users/igor/dev/pipelines/ -name "validate.py" -print
 1684  find /Users/igor/dev/pipelines/ -name "gpu-example-pi*" -print
 1685  find /Users/igor/dev/ -name "gpu-example-pi*" -print
 1686  cd /Users/igor/dev/ml-examples
 1687  mkdir ml
 1688  cd ml
 1689  mkdir simple
 1690  cd simple
 1691  cp /Users/igor/dev//examples/demos/simple_pipeline/gpu-example-pipeline.py .
 1692  ls
 1693  cd ..
 1694  mv simple notebooks
 1695  cd notebooks
 1696  vi gpu-example-pipeline.py
 1697  ./gpu-example-pipeline.py
 1698  vi gpu-example-pipeline.py
 1699  pip3 install https://storage.googleapis.com/ml-pipeline/release/0.1.4/kfp.tar.gz --upgrade
 1700  ./gpu-example-pipeline.py
 1701  ls
 1702  ls -lrt
 1703  vi gpu-example-pipeline.py
 1704  tar -xvf gpu-example-pipeline.py.tar.gz
 1705  ls -lrt
 1706  vi pipeline.yaml
 1707  pwd
 1708  cd ..
 1709  mv notebooks pipeline-cli
 1710  cd pipeline-cli
 1711  vi README.md
 1712  vi README.md gpu-example-pipeline.py
 1713  ls
 1714  vi gpu-example-pipeline.py
 1715  vi README.md gpu-example-pipeline.py
 1716  vi gpu-example.yaml
 1717  vi README.md
 1718  vi train_mnist.py
 1719  vi README.md
 1720  ls
 1721  cd ..
 1722  l
 1723  mkdir notebooks
 1724  pwd
 1725  mkdir tf-serving
 1726  cd tf-serving
 1727  pwd
 1728  cd ,,
 1729  cd ..
 1730  mkdir containers
 1731  mv tf-serving containers
 1732  cd containers/tf-serving
 1733  cp -r /Users/igor/dev/code-snippets/ml/kubeflow-pipelines/components/kubeflow/containers/tf-serving-gh/* .
 1734  cd /Users/igor/dev/code-snippets/ml/kubeflow-pipelines/components/kubeflow/containers/tf-serving-gh/build.sh
 1735  cd /Users/igor/dev/code-snippets/ml/kubeflow-pipelines/components/kubeflow/containers/tf-serving-gh
 1736  ls ../../tf-serving-gh
 1737  cp -r * . /Users/igor/dev/ml-examples/ml/containers/tf-serving/build
 1738  mkdir /Users/igor/dev/ml-examples/ml/containers/tf-serving/build
 1739  cp -r * . /Users/igor/dev/ml-examples/ml/containers/tf-serving/build
 1740  cp -r * /Users/igor/dev/ml-examples/ml/containers/tf-serving/build
 1741  cd /Users/igor/dev/ml-examples/ml/containers/tf-serving/
 1742  ls
 1743  cd build
 1744  ls
 1745  rm *
 1746  cd /Users/igor/dev/code-snippets/ml/kubeflow-pipelines/components/kubeflow/containers/tf-serving-gh
 1747  cd ../../tf-serving-gh
 1748  pwd
 1749  ls
 1750  cp -r * /Users/igor/dev/ml-examples/ml/containers/tf-serving/build
 1751  cd /Users/igor/dev/ml-examples/ml/containers/tf-serving/build
 1752  ls
 1753  pwd
 1754  cd ..
 1755  mkdir tf-serving-src
 1756  aws s3 ls
 1757  kubectl get nodes
 1758  export KUBECONFIG=/Users/igor/dev/mldemo/kubeconfig.dev4.demo10.superhub.io.yaml
 1759  kubectl get nodes
 1760  docker login https://harbor.svc.dev4.demo10.superhub.io/ -u="admin" -p="$Harbor12345"
 1761  docker login https://harbor.svc.dev4.demo10.superhub.io/
 1762  pwd
 1763  ls
 1764  vi registry.txt
 1765  cat ./registry.txt | docker login --username admin --password-stdin https://harbor.svc.dev4.demo10.superhub.io/\n
 1766  docker logout
 1767  docker images
 1768  docker images https://harbor.svc.dev4.demo10.superhub.io/
 1769  ./build.sh
 1770  pwd
 1771  cd ..
 1772  history
 1773  find /Users/igor/dev/code-snippets/ml/ -name "deploy-web*" -print
 1774  pwd
 1775  mkdir webapp-launcher
 1776  cp -r /Users/igor/dev/code-snippets/ml//kubeflow-pipelines/components/t2t/webapp-launcher/* .
 1777  ls
 1778  mkdir webapp-launcher-src
 1779  cd webapp-launcher-src
 1780  ls /Users/igor/dev/code-snippets/ml//kubeflow-pipelines/components/t2t/webapp-launcher/../../webapp-launcher
 1781  ls
 1782  cd ..
 1783  ls
 1784  ls /Users/igor/dev/code-snippets/ml/kubeflow-pipelines/components/t2t/containers/webapp-launcher/../../webapp-launcher
 1785  pwd
 1786  cd webapp-launcher-src
 1787  cp /Users/igor/dev/code-snippets/ml/kubeflow-pipelines/components/t2t/containers/webapp-launcher/../../webapp-launcher/* .
 1788  ls
 1789  cd ../webapp-launcher
 1790  l
 1791  cp /Users/igor/dev/code-snippets/ml/kubeflow-pipelines/components/t2t/containers/webapp-launcher/* .
 1792  pwd
 1793  ls
 1794  ./build.sh
 1795  aws s3 ls
 1796  aws s3 --help
 1797  aws s3 -help
 1798  ls /Users/igor/dev/code-snippets/ml/kubeflow-pipelines/components/t2t/t2t-app/app/
 1799  pwd
 1800  cd ../..
 1801  ls
 1802  cd containers
 1803  ls
 1804  mkdir t2t-app
 1805  mkdir t2t-app-src
 1806  pwd
 1807  ls
 1808  cd t2t-app
 1809  ls
 1810  cp -r /Users/igor/dev/code-snippets/ml/kubeflow-pipelines/components/t2t/containers/t2t_app/ .
 1811  ls
 1812  cd ../t2t-app-src
 1813  cp -r /Users/igor/dev/code-snippets/ml/kubeflow-pipelines/components/t2t/containers/t2t_app/ .
 1814  ls
 1815  pwd
 1816  ls
 1817  pwd
 1818  rm *
 1819  cp -r /Users/igor/dev/code-snippets/ml/kubeflow-pipelines/components/t2t/t2t-app .
 1820  ls
 1821  rm -r *
 1822  cp -r /Users/igor/dev/code-snippets/ml/kubeflow-pipelines/components/t2t/t2t-app/* .
 1823  ls
 1824  pwd
 1825  cd ../webapp-launcher
 1826  ./build.sh
 1827  cd ..
 1828  cd t2t-app
 1829  ./build.sh
 1830  pwd
 1831  ./build.sh
 1832  pwd
 1833  ls
 1834  ./build.sh
 1835  kubectl logs -f "ghsumm-github-issue-summarization-8kpqx-webapp-5f965c6f7d-xjc97" --namespace=kubeflow
 1836  kubectl logs -f \\n  $(kubectl get pods \\n    -lseldon-app=issue-summarization \\n    -o=jsonpath='{.items[0].metadata.name}') \\n  issue-summarization
 1837  kubectl get pods \\n >     -lseldon-app=issue-summarization \\n >     -o=jsonpath='{.items[0].metadata.name}'
 1838  \nls
 1839  ls -lrt
 1840  rm "-lseldon-app=issue-summarization"
 1841  ls
 1842  rm *seldon-app=issue-summari*
 1843  rm * -y
 1844  rm -i *
 1845  ls
 1846  ./build.sh
 1847  kubectl logs -f "ghsumm-github-issue-summarization-dzzn8-webapp-6f7b96fc5d-lcctw"  --namespace=kubeflow
 1848  kubectl logs -f "ghsumm-github-issue-summarization-dzzn8-webapp-6f7b96fc5d-lcctw"  --namespace=kubeflow --timestamps
 1849  pwd
 1850  ./build.sh
 1851  kubectl logs -f "ghsumm-github-issue-summarization-dzzn8-webapp-6f7b96fc5d-lcctw"  --namespace=kubeflow --timestamps
 1852  cd ../tf-serving
 1853  ./build.sh
 1854  kubectl logs -f "ghsumm-github-issue-summarization-vmpjr-6945c95666-fbjk5"  --namespace=kubeflow --timestamps
 1855  kubectl logs -f "ghsumm-github-issue-summarization-vmpjr-webapp-7684558599-ql27n"  --namespace=kubeflow --timestamps
 1856  pwd
 1857  cd ..
 1858  ls
 1859  mkdir t2t-train
 1860  cd t2t-train
 1861  cp -r /Users/igor/dev/code-snippets/ml/kubeflow-pipelines/components/t2t/containers/t2t_train/* .
 1862  ls
 1863  pwd
 1864  mkdir base
 1865  cd base
 1866  cp -r /Users/igor/dev/code-snippets/ml/kubeflow-pipelines/components/t2t/containers/base/* .
 1867  cd ..
 1868  ls
 1869  mkdir t2t-train-src
 1870  cd t2t-train-src
 1871  ls
 1872  pwd
 1873  cd ..
 1874  ls
 1875  rm -r t2t-t*
 1876  cd ..
 1877  ls
 1878  mkdir t2t-train-src
 1879  cd t2t-train-src
 1880  ls
 1881  cp -r /Users/igor/dev/code-snippets/ml/kubeflow-pipelines/components/t2t/t2t-train/* .
 1882  pwd
 1883  cd ..
 1884  cd base
 1885  ./build.sh
 1886  pwd
 1887  cd t2t-train
 1888  cd ../t2t-train
 1889  ./build.sh
 1890  docker logout https://harbor.svc.dev4.demo10.superhub.io/
 1891  ./build.sh
 1892  cd ../ba
 1893  cd ../base
 1894  ./build.sh
 1895  cd ../t2t-train
 1896  ./build.sh
 1897  find /Users/igor/dev/ -name "validate.py" -print
 1898  ls
 1899  pwd
 1900  cd ..
 1901  cd t2t-app
 1902  ./build.sh
 1903  cd ..
 1904  cd tf-serving
 1905  ./build.sh
 1906  kubectl logs -f "ghsumm-github-issue-summarization-wk2rs"  --namespace=kubeflow --timestamps
 1907  kubectl logs -f "ghsumm-github-issue-summarization-wk2rs-webapp"  --namespace=kubeflow --timestamps
 1908  kubectl logs -f "ghsumm-github-issue-summarization-wk2rs-webapp-7f7bb547ff-lnzvv"  --namespace=kubeflow --timestamps
 1909  cd ..
 1910  cd tf-serving
 1911  ./build.sh
 1912  kubectl logs -f "ghsumm-github-issue-summarization-hf8px-webapp-765c6bd9bb-tcsrd"  --namespace=kubeflow --timestamps
 1913  cd ../webapp-launcher
 1914  ./build.sh
 1915  pwd
 1916  ./build.sh
 1917  cd ../webapp-launcher-src
 1918  kubectl apply -f t2tapp-template.yaml
 1919  cd ../webapp-launcher
 1920  ./build.sh
 1921  kubectl logs -f "ghsumm-github-issue-summarization-2c9ld-webapp-fd5c67559-x2fjc"  --namespace=kubeflow --timestamps
 1922  export KUBECONFIG=/Users/igor/dev/mldemo/kubeconfig.dev4.demo10.superhub.io.yaml
 1923  kubectl -n prometheus port-forward prometheus-prometheus-kube-prom-0 8888:9090
 1924  kubectl get nodes
 1925  cp ~/Downloads/TFT-3.ipynb ../../notebooks/Github-TFT.ipynb
 1926  kubectl get pods --namespace=kubeflow
 1927  pwd
 1928  cd ~/dev/agilestacks-components/sweeper
 1929  ls
 1930  vi ~/hist6.txt
 1931  cd ~/dev/agilestacks-components/sweeper
 1932  export AWS_PROFILE=demo10
 1933  aws s3 ls
 1934  pwd
 1935  make ACCOUNT=299380738002
 1936  aws s3 ls
 1937  export AWS_PROFILE=demo10
 1938  aws s3 ls
 1939  history >~/hist7.txt
 1940  vi ~/hist7.txt
 1941  aws s3 ls demo10kubeflow
 1942  aws s3 ls
 1943  vi ~/.aws/config
 1944  export AWS_PROFILE=mvp
 1945  aws s3 ls
 1946  vi ~/.aws/credentials
 1947  export AWS_PROFILE=mvp
 1948  aws s3 ls
 1949  make ACCOUNT=938880336972
 1950  aws s3 ls
 1951  ls
 1952  ls -lrt
 1953  cd ~/dev/ml-examples
 1954  ls
 1955  pwd
 1956  ls -lrt
 1957  vi ~/.aws/config
 1958  ci ~/.aws/credentials
 1959  vi ~/.aws/credentials
 1960  vi ~/hist7.txt
 1961  ps
 1962  export KUBECONFIG=/Users/igor/dev/mldemo/kubeconfig.dev4.demo10.superhub.io.yaml
 1963  pwd
 1964  ls -lrt
 1965  cp ~/Downloads/kubeconfig.dev4.demo10.superhub.io-2.yaml kubeconfig.dev4.demo10.superhub.io.yaml
 1966  export KUBECONFIG=/Users/igor/dev/mldemo/kubeconfig.dev4.demo10.superhub.io.yaml
 1967  kubectl get pods --namespace=kubeflow
 1968  kubectl get nodes
 1969  pwd
 1970  ls
 1971  ls -lrt
 1972  export GITHUB_TOKEN=e7a1220da208c677cda9310fa162710bcc340fea
 1973  git clone --depth 1 --no-checkout --filter=blob:none https://$GITHUB_TOKEN@github.com/agilestacks/applications wip
 1974  brew update && brew upgrade
 1975  git clone --depth 1 --no-checkout --filter=blob:none https://$GITHUB_TOKEN@github.com/agilestacks/applications wip
 1976  brew upgrade git
 1977  git clone --depth 1 --no-checkout --filter=blob:none https://$GITHUB_TOKEN@github.com/agilestacks/applications wip
 1978  ls -lrt
 1979  cp ~/Downloads/kubeconfig.dev4.demo10.superhub.io-3.yaml ~/dev/ml-examples/kubeconfig.dev4.demo10.superhub.io.yaml
 1980  cd ~/dev/ml-examples
 1981  export GITHUB_TOKEN=e7a1220da208c677cda9310fa162710bcc340fea
 1982  export KUBECONFIG=/Users/igor/dev/mldemo/kubeconfig.dev4.demo10.superhub.io.yaml
 1983  kubectl get nodes
 1984  vi kubeconfig.dev4.demo10.superhub.io.yaml
 1985  brew upgrade kubectl
 1986  export KUBECONFIG=/Users/igor/dev/mldemo/kubeconfig.dev4.demo10.superhub.io.yaml
 1987  brew upgrade kubectl
 1988  kubectl get nodes
 1989  cd ~/D
 1990  cd ~/Downloads
 1991  ls -lrt
 1992  export KUBECONFIG=/Users/igor/Downloads/kubeconfig.dev4.demo10.superhub.io-3.yaml
 1993  kubectl get nodes
 1994  export KUBECONFIG=/Users/igor/Downloads/kubeconfig.dev4.demo10.superhub.io-3.yaml
 1995  cd ~/dev/ml-examples
 1996  ls -lrt
 1997  rm kubeconfig.dev4.demo10.superhub.io.yaml
 1998  kubectl get nodes
 1999  kubectl get secrets --namespace=kubeflow
 2000  export AWS_PROFILE=demo10
 2001  aws s3 ls
 2002  ls
 2003  pwd
 2004  ls -lrt
 2005  export AWS_PROFILE=demo10
 2006  aws s3 ls
 2007  aws
 2008  aws --help
 2009  brew upgrade awscli
 2010  aws s3 ls
 2011  ls
 2012  vi hist7.txt
 2013  ls
 2014  pwd
 2015  ls ../../
 2016  ls ../../ml
 2017  find ~/ -name "user-gcp-sa.json" -print
 2018  kubectl create secret generic user-gcp-sa --namespace=kubeflow --from-file=/Users/igor//dev/mldemo/user-gcp-sa.json
 2019  cat /Users/igor//dev/mldemo/user-gcp-sa.json
 2020  pwd
 2021  ls
 2022  cd ml
 2023  ls
 2024  cd containers
 2025  ls
 2026  mkdir t2t-proc
 2027  mkdir t2t-proc-src
 2028  cd t2t-proc-src
 2029  cp -r /Users/igor/dev/code-snippets/ml/kubeflow-pipelines/components/t2t/t2t-proc/* .
 2030  ls
 2031  cd ..
 2032  cd t2t-proc
 2033  cp -r /Users/igor/dev/code-snippets/ml/kubeflow-pipelines/components/t2t/containers/t2t_proc/* .
 2034  ls
 2035  cd ..
 2036  ls
 2037  cd t2t-app
 2038  ./build.sh
 2039  cd ..
 2040  ls
 2041  cd t2t-proc
 2042  ./build.sh
 2043  ls -lrt
 2044  rm -rf ./build
 2045  ./build.sh
 2046  rm -rf ./build
 2047  docker ls
 2048  rm -rf ./build
 2049  ./build.sh
 2050  cd ..
 2051  ls
 2052  cd t2t-train
 2053  ./build.sh
 2054  cd ..
 2055  ls
 2056  cd tf-serving
 2057  ./build.sh
 2058  aws s3 mb demo10kubeflow
 2059  aws s3 ls
 2060  aws s3 mb demo10kubeflow
 2061  aws s3 ls demo10kubeflow
 2062  aws s3 mb s3://demo10kubeflow
 2063  aws s3 ls
 2064  gsutil
 2065  ls ~/Downloads/github_issues.csv.download
 2066  ls ~/Downloads/github_issues.csv
 2067  ls -lrt ~/Downloads/github_issues.csv
 2068  ls -lrt ~/Downloads/github_issues.csv.download
 2069  ls
 2070  cd ..
 2071  ls
 2072  cd tf-serving
 2073  ./build.sh
 2074  cd ..
 2075  ls
 2076  cd webapp-launcher
 2077  ./build.sh
 2078  cd ..
 2079  ls
 2080  cd base
 2081  ls
 2082  ./build.sh
 2083  cd ..
 2084  ls
 2085  vi ~/Downloads/data_github_issues.csv
 2086  aws s3 cp ~/Downloads/data_github_issues.csv s3://demo10kubeflow/gh_data/data_github_issues.csv
 2087  top
 2088  aws s3 ls s3://demo10kubeflow/gh_data/
 2089  kubectl get secret user-gcp-sa -o yaml --namespace=kubeflow
 2090  cat /Users/igor//dev/mldemo/user-gcp-sa.json
 2091  ls -lrt
 2092  cd .
 2093  cd ..
 2094  ls
 2095  pwd
 2096  vi rbac.yaml
 2097  kubectl get secret user-gcp-sa -o yaml --namespace=kubeflow
 2098  kubectl apply -f rbac.yaml
 2099  aws s3 ls s3://demo10kubeflow/
 2100  kubectl get secrets --namespace=kubeflow
 2101  kubectl delete secret jupyter-keyring --namespace=kubeflow
 2102  kubectl get secrets --namespace=kubeflow
 2103  kubectl get secrets --namespace=harbor
 2104  kubectl -n harbor get secret dev4-harbor-default-pullsecret -o json| jq -rMc 'del(.metadata.namespace)' | k apply -f -
 2105  kubectl -n harbor get secret dev4-harbor-default-pullsecret -o json| jq -rMc 'del(.metadata.namespace)' | kubectl apply -f -
 2106  kubectl get secrets --namespace=kubeflow
 2107  kubectl -n harbor get secret dev4-harbor-default-pullsecret -o json
 2108  kubectl -n harbor get secret dev4-harbor-default-pullsecret -o json| jq -rMc 'del(.metadata.namespace)'
 2109  kubectl -n harbor get secret dev4-harbor-default-pullsecret -o json| jq -rMc 'del(.metadata.namespace)' | kubectl apply -f --namespace=kubeflow -
 2110  kubectl -n harbor get secret dev4-harbor-default-pullsecret -o json| jq -rMc 'del(.metadata.namespace)' | kubectl --namespace=kubeflow apply -f -
 2111  kubectl get secrets --namespace=kubeflow
 2112  aws s3api create-bucket --bucket ml-demo10 --region us-east-2 --create-bucket-configuration LocationConstraint=us-east-2
 2113  aws s3api list-buckets --query 'Buckets[].Name'\n
 2114  aws s3 cp s3://demo10kubeflow/gh_data/data_github_issues.csv s3://ml-demo10/gh_data/data_github_issues.csv
 2115  aws s3api create-bucket --bucket demo10kubeflow --region us-east-2 --create-bucket-configuration LocationConstraint=us-east-2
 2116  aws s3api list-buckets --query 'Buckets[].Name'\n
 2117  kubectl get secrets --namespace=kubeflow
 2118  aws s3api create-bucket --bucket demo10kubeflow --region us-east-2 --create-bucket-configuration LocationConstraint=us-east-2
 2119  aws s3api list-buckets --query 'Buckets[].Name'
 2120  kubectl get secrets --namespace=kubeflow
 2121  kubectl -n harbor get secret dev4-harbor-default-pullsecret -o json| jq -rMc 'del(.metadata.namespace)' | kubectl --namespace=kubeflow apply -f -
 2122  kubectl get secrets --namespace=kubeflow
 2123  aws s3api list-buckets --query 'Buckets[].Name'\n
 2124  pwd
 2125  ls
 2126  cd containers
 2127  cd t2t-app
 2128  ./build.sh
 2129  docker pull dev4-harbor.svc.dev4.demo10.superhub.io/ml-examples/ml-pipeline-t2tapp:latest
 2130  docker pull dev4-harbor.svc.dev4.demo10.superhub.io/library/baseimage:latest
 2131  docker login dev4-harbor.svc.dev4.demo10.superhub.io
 2132  docker pull dev4-harbor.svc.dev4.demo10.superhub.io/library/baseimage:latest
 2133  docker pull dev4-harbor.svc.dev4.demo10.superhub.io/ml-examples/ml-pipeline-t2tapp:latest
 2134  docker pull dev4-harbor.svc.dev4.demo10.superhub.io/library/train:latest
 2135  docker pull dev4-harbor.svc.dev4.demo10.superhub.io/library/base:latest
 2136  cat /Users/igor/Downloads/kubeconfig.dev4.demo10.superhub.io-3.yaml
 2137  aws s3api list-buckets --query 'Buckets[].Name'\n
 2138  ls
 2139  cd ..
 2140  ls
 2141  history >/hist_ml.txt
 2142  history >hist_ml.txt
 2143  vi hist_ml.txt
 2144  aws s3 cp ~/Downloads/kukubecon_gh_data_github_issues.csv s3://ml-demo10/gh_data/data_github_issues.csv
 2145  aws s3 cp ~/Downloads/kubecon_gh_data_github_issues.csv s3://ml-demo10/gh_data/data_github_issues.csv
 2146  aws s3 ls s3://ml-demo10/gh_data
 2147  aws s3 ls -r s3://ml-demo10/gh_data
 2148  aws s3 ls --recursive s3://ml-demo10/gh_data
 2149  python -V
 2150  aws s3 ls --recursive s3://ml-demo10/gh_data
 2151  cd ~/Downloads/google-cloud-sdk
 2152  ls
 2153  ./install.sh
 2154  pwd
 2155  cd ~/dev/ml-examples
 2156  ls
 2157  cd ml
 2158  gsutil ls gs://aju-dev-demos-codelabs/kubecon/
 2159  pwd
 2160  ls
 2161  gsutil -m cp -r gs://aju-dev-demos-codelabs/kubecon/ gh_data
 2162  mkdir gh_data
 2163  gsutil -m cp -r gs://aju-dev-demos-codelabs/kubecon/ gh_data
 2164  ls -lrt
 2165  rm -r gh_data
 2166  rm -r gh_data/*
 2167  ls
 2168  rm -r gh_data
 2169  rm -R gh_data
 2170  rm -Ra gh_data
 2171  rm -Ry gh_data
 2172  rm -rf gh_data
 2173  ls
 2174  mkdir gh_data
 2175  gsutil -m cp -r gs://aju-dev-demos-codelabs/kubecon/t2t_data_gh_all/ gh_data/t2t_data_gh_all/
 2176  mkdir gh_data/t2t_data_gh_all/
 2177  gsutil -m cp -r gs://aju-dev-demos-codelabs/kubecon/t2t_data_gh_all/ gh_data/t2t_data_gh_all/
 2178  cd ~/dev/ml-examples/ml
 2179  ls
 2180  aws s3 cp ./gh_data/t2t_data_gh_all/ s3://ml-demo10/gh_data/t2t_data_gh_all/
 2181  aws s3 cp --recursive ./gh_data/t2t_data_gh_all/ s3://ml-demo10/gh_data/t2t_data_gh_all/
 2182  pwd
 2183  cd t2t-app
 2184  cd containers
 2185  cd t2t-app
 2186  ls
 2187  ls -lrt
 2188  gsutil -m cp -r gs://aju-dev-demos-codelabs/kubecon/ gh_data/
 2189  aws s3 ls --recursive s3://ml-demo10/gh_data
 2190  aws s3 cp --recursive gh_data/t2t_data_gh_all/t2t_data_gh_all/ ghs_data/t2t_data_gh_all/
 2191  aws s3 cp --recursive s3://gh_data/t2t_data_gh_all/t2t_data_gh_all/ s3://ghs_data/t2t_data_gh_all/
 2192  aws s3 cp --recursive s3://ml-demo10/gh_data/t2t_data_gh_all/t2t_data_gh_all/ s3://ml-demo10/ghs_data/t2t_data_gh_all/
 2193  aws s3 ls s3://ml-demo10/ghs_data/t2t_data_gh_all/model_output_tbase.bak2019000
 2194  aws s3 ls s3://ml-demo10/ghs_data/t2t_data_gh_all/
 2195  aws s3 ls s3://ml-demo10/ghs_data/t2t_data_gh_all/model_output_tbase.bak2019000
 2196  pwd
 2197  cd ../..
 2198  ls
 2199  ls gh_data/t2_data_gh_all/model_output_tbase.bak2019000
 2200  gsutil ls gs://aju-dev-demos-codelabs/kubecon/
 2201  ls gh_data/kubecon/model_output_tbase.bak2019000
 2202  aws s3 cp --recursive gh_data/kubecon/model_output_tbase.bak2019000 s3://ml-demo10/ghs_data/model_output_tbase.bak2019000
 2203  aws s3 ls s3://ml-demo10/ghs_data/model_output_tbase.bak2019000
 2204  aws s3 ls --recursive s3://ml-demo10/ghs_data/model_output_tbase.bak2019000
 2205  aws s3 ls https://s3.us-east-2.amazonaws.com/asi-kubeflow-models/gh-issues/
 2206  aws s3 ls s3://asi-kubeflow-models/gh-issues/
 2207  ls gh_data/kubecon/gh_data
 2208  aws s3 cp --recursive gh_data/kubecon/gh_data s3://ml-demo10/ghs_data/gh_data
 2209  aws s3 ls --recursive s3://ml-demo10/ghs_data
 2210  aws s3 cp --recursive gh_data/kubecon/t2t_data_all s3://ml-demo10/ghs_data/t2t_data_all
 2211  ls
 2212  aws s3 cp --recursive gh_data/kubecon/example_t2t_model s3://ml-demo10/ghs_data/example_t2t_model
 2213  ls -lrt
 2214  aws --profile=demo10 s3 ls s3://ml-demo10/ghs_data/model_output_tbase.bak2019000/checkpoint tmp
 2215  aws --profile=demo10 s3 ls s3://ml-demo10/ghs_data/model_output_tbase.bak2019000/checkpoint
 2216  pwd
 2217  ls
 2218  aws --profile=demo10 s3 cp s3://ml-demo10/ghs_data/model_output_tbase.bak2019000/checkpoint tmp
 2219  mkdir tmp
 2220  aws --profile=demo10 s3 cp s3://ml-demo10/ghs_data/model_output_tbase.bak2019000/checkpoint tmp
 2221  aws --recursive s3 cp s3://ml-demo10/ghs_data/model_output_tbase.bak2019000/checkpoint tmp
 2222  ls -lrt tmp
 2223  aws --recursive s3 ls s3://ml-demo10/ghs_data/model_output_tbase.bak2019000/checkpoint
 2224  ls ghs_data/model_output_tbase.bak2019000/checkpoint
 2225  ls gh_data/model_output_tbase.bak2019000/checkpoint
 2226  ls gh_data/kubecon/model_output_tbase.bak2019000/checkpoint
 2227  ls -l gh_data/kubecon/model_output_tbase.bak2019000/checkpoint
 2228  cat gh_data/kubecon/model_output_tbase.bak2019000/checkpoint
 2229  vi gh_data/kubecon/model_output_tbase.bak2019000/checkpoint
 2230  ls -lrt
 2231  rmdir tmp
 2232  ls
 2233  pwd
 2234  aws s3 cp s3://ml-demo10/ghs_data/example_t2t_model/model_output/checkpoint dada
 2235  vi dada
 2236  rm dada
 2237  aws s3 cp s3://ml-demo10/ghs_data/model_output_tbase.bak2019000/checkpoint dada
 2238  vi dada
 2239  aws s3 cp s3://ml-demo10/ghs_data/model_output_tbase.bak2019000/checkpoint dada
 2240  vi dada
 2241  aws --profile=demo10 s3 cp s3://ml-demo10/ghs_data/model_output_tbase.bak2019000/checkpoint dada
 2242  aws --profile=demo10 s3 cp s3://ml-demo10/ghs_data/model_output_tbase.bak2019000/checkpoint tmp
 2243  export AWS_PROFILE=demo10
 2244  aws s3 cp s3://ml-demo10/ghs_data/model_output_tbase.bak2019000/checkpoint tmp
 2245  aws s3 cp s3://ml-demo10/ghs_data/model_output_tbase.bak2019000/checkpoint dada
 2246  aws s3 cp --recursive s3://ml-demo10/ghs_data/model_output_tbase.bak2019000/checkpoint dada
 2247  vi dada
 2248  rm dada
 2249  rm tmp
 2250  aws s3 cp --recursive s3://ml-demo10/ghs_data/model_output_tbase.bak2019000/checkpoint tmp
 2251  rm tmp
 2252  rmdir tmp
 2253  aws s3 cp --recursive s3://ml-demo10/ghs_data/model_output_tbase.bak2019000/checkpoint tmp
 2254  vi tmp
 2255  ls tmp
 2256  aws s3 cp --recursive s3://ml-demo10/ghs_data/model_output_tbase.bak2019000/checkpoint foo
 2257  vi foo
 2258  aws s3 cp s3://ml-demo10/ghs_data/model_output_tbase.bak2019000/checkpoint foo
 2259  aws s3 cp "s3://ml-demo10/ghs_data/model_output_tbase.bak2019000/checkpoint" foo
 2260  aws s3 cp --region us-east-2 s3://ml-demo10/ghs_data/model_output_tbase.bak2019000/checkpoint foo
 2261  aws s3 ls s3://ml-demo10/ghs_data/model_output_tbase.bak2019000/checkpoint
 2262  aws s3 cp s3://ml-demo10/ghs_data/model_output_tbase.bak2019000/checkpoint ./foo
 2263  aws s3 cp --debug s3://ml-demo10/ghs_data/model_output_tbase.bak2019000/checkpoint ./foo
 2264  aws s3 cp s3://ml-demo10/ghs_data/model_output_tbase.bak2019000/checkpoint foo --region us-east-2
 2265  aws s3 cp s3://ml-demo10/ghs_data/model_output_tbase.bak2019000/checkpoint foo --region us-east-1
 2266  aws s3 cp s3://ml-demo10/ghs_data/model_output_tbase.bak2019000/checkpoint foo --region us-east-2
 2267  aws s3 cp s3://ml-demo10/ghs_data/model_output_tbase.bak2019000/checkpoint foo --region s3.us-east-2.amazonaws.com
 2268  aws s3 cp s3://ml-demo10/ghs_data/model_output_tbase.bak2019000/checkpoint foo --region s3-us-east-2.amazonaws.com
 2269  vi ~/.aws/config
 2270  export AWS_PROFILE=demo10
 2271  aws s3 cp s3://ml-demo10/ghs_data/model_output_tbase.bak2019000/checkpoint foo
 2272  aws s3 cp s3://ml-demo10/ghs_data/model_output_tbase.bak2019000/checkpoint foo --region s3-us-east-2.amazonaws.com
 2273  aws s3 cp s3://ml-demo10/ghs_data/model_output_tbase.bak2019000/checkpoint foo
 2274  aws s3 cp http://s3-us-east-2.amazonaws.com/ml-demo10/ghs_data/model_output_tbase.bak2019000/checkpoint foo
 2275  aws s3 cp s3://ml-demo10/ghs_data/model_output_tbase.bak2019000/checkpoint foo --region s3.us-east-2.amazonaws.com
 2276  vi ~/.aws/config
 2277  aws s3 cp s3://ml-demo10/ghs_data/model_output_tbase.bak2019000/checkpoint foo
 2278  aws configure --profile demo10
 2279  aws s3 ls
 2280  aws s3 cp s3://ml-demo10/ghs_data/model_output_tbase.bak2019000/checkpoint foo
 2281  mkdir foo
 2282  rmdir foo
 2283  ls foo
 2284  aws s3 cp --recursive s3://ml-demo10/ghs_data/model_output_tbase.bak2019000/checkpoint foo
 2285  ls foo
 2286  ls -l foo
 2287  ls -l foo/*
 2288  vi foo
 2289  rmdir foo
 2290  aws s3 ls --region=us-east-1
 2291  aws s3 ls --region=us-east-2
 2292  aws s3 cp s3://ml-demo10/ghs_data/model_output_tbase.bak2019000/checkpoint foo --region=us-east-2
 2293  aws s3api list-buckets --query Owner.ID
 2294  aws s3 cp s3://s3-us-east-2.amazonaws.com/ml-demo10/ghs_data/model_output_tbase.bak2019000/checkpoint foo
 2295  export AWS_PROFILE=demo10
 2296  aws s3 cp s3://s3-us-east-2.amazonaws.com/ml-demo10/ghs_data/model_output_tbase.bak2019000/checkpoint foo
 2297  aws s3 cp s3://ml-demo10/ghs_data/model_output_tbase.bak2019000/checkpoint foo
 2298  aws s3 cp s3://ml-demo10/ghs_data/model_output_tbase.bak2019000/checkpoint foo --region=us-east-2 --debug
 2299  aws --profile=demo10 s3 cp s3://ml-demo10/ghs_data/model_output_tbase.bak2019000/checkpoint dada
 2300  aws --profile=demo10 s3 cp s3://ml-demo10/ghs_data/model_output_tbase.bak2019000/checkpoint dada --recursive
 2301  ls dada
 2302  aws --profile=demo10 s3 cp s3://ml-demo10/ghs_data/model_output_tbase.bak2019000/checkpoint dada1
 2303  rmdir foo
 2304  rmdir dada
 2305  rm dada
 2306  aws s3 cp s3://ml-demo10/ghs_data/model_output_tbase.bak2019000/checkpoint dada
 2307  ls
 2308  aws s3 cp s3://ml-demo10/ghs_data/model_output_tbase.bak2019000/checkpoint dada
 2309  vi dada
 2310  aws s3 cp s3://ml-demo10/ghs_data/model_output_tbase.bak2019000/checkpoint dada
 2311  pwd
 2312  /Users/igor/dev/ml-examples/ml
 2313  cd /Users/igor/dev/ml-examples/ml
 2314  aws s3 cp s3://ml-demo10/ghs_data/model_output_tbase.bak2019000/checkpoint tmp
 2315  aws s3 cp s3://ml-demo10/ghs_data/model_output_tbase.bak2019000/checkpoint dada
 2316  aws s3 cp s3://ml-demo10/ghs_data/model_output_tbase.bak2019000/checkpoint foo
 2317  aws s3 cp s3://ml-demo10/ghs_data/model_output_tbase.bak2019000/checkpoint tmp
 2318  vi ~/.aws/config
 2319  aws --profile=demo10 s3 cp s3://ml-demo10/ghs_data/model_output_tbase.bak2019000/checkpoint dada
 2320  aws s3 cp s3://ml-demo10/ghs_data/model_output_tbase.bak2019000/checkpoint tmp
 2321  vi tmp/checkpoint
 2322  ls
 2323  rmdir tmp
 2324  rm -rf tmp
 2325  ls
 2326  aws s3 cp s3://ml-demo10/ghs_data/model_output_tbase.bak2019000/checkpoint tmp
 2327  export AWS_PROFILE=demo10
 2328  aws s3 cp s3://ml-demo10/ghs_data/model_output_tbase.bak2019000/checkpoint tmp
 2329  export AWS_PROFILE=demo10
 2330  aws s3 cp s3://ml-demo10/ghs_data/model_output_tbase.bak2019000/checkpoint foo
 2331  cd /Users/igor/dev/ml-examples/ml
 2332  ls
 2333  aws profile
 2334  aws profile demo10
 2335  pwd
 2336  aws s3 ls
 2337  aws profile demo10
 2338  export AWS_PROFILE=demo10
 2339  aws s3 ls
 2340  aws s3 cp s3://ml-demo10/ghs_data/model_output_tbase.bak2019000/checkpoint foo
 2341  aws s3 cp s3://ml-demo10/ghs_data/model_output_tbase.bak2019000/checkpoint dada
 2342  aws s3 ls
 2343  aws --profile=default s3 cp s3://ml-demo10/ghs_data/model_output_tbase.bak2019000/checkpoint dada
 2344  vi ~/.aws/config
 2345  vi ~/.aws/credentials
 2346  aws --profile=default s3 cp s3://ml-demo10/ghs_data/model_output_tbase.bak2019000/checkpoint dada
 2347  aws --profile=default s3 cp s3://ml-demo10/ghs_data/model_output_tbase.bak2019000/checkpoint tmp
 2348  export AWS_PROFILE=demo10
 2349  aws --profile=default s3 cp s3://ml-demo10/ghs_data/model_output_tbase.bak2019000/checkpoint tmp
 2350  aws --profile=demo10 s3 cp s3://ml-demo10/ghs_data/model_output_tbase.bak2019000/checkpoint tmp
 2351  aws s3 ls
 2352  aws s3 cp s3://ml-demo10/ s3://asi-ml-data/ --acl bucket-owner-full-control --recursive
 2353  aws s3 ls
 2354  export AWS_PROFILE=demo10
 2355  pwd
 2356  ls
 2357  aws s3 cp s3://ml-demo10/ghs_data/model_output_tbase.bak2019000/checkpoint dada
 2358  aws s3 cp s3://ml-demo10/ghs_data/model_output_tbase.bak2019000/checkpoint dada LocationConstraint=us-east-2
 2359  aws s3 cp s3://ml-demo10/ghs_data/model_output_tbase.bak2019000/checkpoint dada --profile=default
 2360  aws s3 ls
 2361  aws s3 cp s3://ml-demo10/ s3://asi-ml-data1/ --acl bucket-owner-full-control --recursive
 2362  aws s3 cp s3://ml-demo10/ghs_data/model_output_tbase.bak2019000/checkpoint dada
 2363  aws s3api create-bucket --bucket asi-mldata --region us-east-2 --create-bucket-configuration LocationConstraint=us-east-2
 2364  pwd
 2365  ;s
 2366  ls
 2367  aws s3 ls
 2368  history >hist_ml1.txt
 2369  vi hist_ml1.txt
 2370  aws s3 cp s3://ml-demo10/ s3://asi-mldata --recursive
 2371  vi hist_ml1.txt
 2372  aws s3 cp --recursive gh_data/kubecon s3://asi-mldata
 2373  cd /Users/igor/dev/ml-examples/ml
 2374  export AWS_PROFILE=demo10
 2375  aws s3 cp s3://asi-mldata/example_t2t_model/model_output/checkpoint ttt
 2376  aws --profile=demo10 s3 cp  s3://asi-mldata/example_t2t_model/model_output/checkpoint ttt
 2377  aws --profile=default s3 cp  s3://asi-mldata/example_t2t_model/model_output/checkpoint ttt
 2378  aws --profile=demo10 s3 cp  s3://asi-mldata/example_t2t_model/model_output/checkpoint ttt
 2379  export AWS_PROFILE=demo10
 2380  pwd
 2381  aws --profile=demo10 s3 cp  s3://asi-mldata/example_t2t_model/model_output/checkpoint ttt
 2382  aws --profile=demo10 s3 cp  s3://ml-demo10/example_t2t_model/model_output/checkpoint ttt
 2383  aws --profile=demo10 s3 cp  s3://asi-mldata/example_t2t_model/model_output/checkpoint ttt
 2384  aws --profile=default s3 cp s3://asi-mldata/ghs_data/model_output_tbase.bak2019000/checkpoint tmp
 2385  aws s3api list-buckets --query 'Buckets[].Name'
 2386  aws s3 ls s3://bucket.cluster3.antoncloud1.superhub.io/anton@agilestacks.com --recursive
 2387  aws s3 ls s3://bucket.cluster3.antoncloud1.superhub.io/anton@agilestacks.com --recursive --profile=default
 2388  aws s3 ls s3://bucket.cluster3.antoncloud1.superhub.io/anton@agilestacks.com --recursive --profile=demo01
 2389  grep S3 ~/Downloads/*.ipynb
 2390  aws s3api list-buckets --query 'Buckets[].Name'
 2391  aws s3 ls s3://asi-mldata/demo10.support@agilestacks.io/model_output/export/
 2392  aws s3 ls s3://asi-mldata/demo10.support@agilestacks.io/model_output/export/temp-1550023155
 2393  aws s3 ls s3://asi-mldata/demo10.support@agilestacks.io/t2t_data_gh_all/vocab.gh_problem.8192.subwords
 2394  pwd
 2395  ls
 2396  cd containers
 2397  ls
 2398  cd t2t-app
 2399  ./build.sh
 2400  cd ../..
 2401  ls
 2402  cd containers
 2403  ls
 2404  cd t2t-proc
 2405  ./build.sh
 2406  cd ..
 2407  ls
 2408  cd t2t-train
 2409  ./build.sh
 2410  cd ..
 2411  ls
 2412  cd ../tf-serving
 2413  pwd
 2414  cd tf-serving
 2415  ./build.sh
 2416  cd ..
 2417  ls
 2418  cd base
 2419  ./build.sh
 2420  cd ..
 2421  ls
 2422  cd webapp-launcher
 2423  ./build.sh
 2424  ls
 2425  cd ..
 2426  ls
 2427  cd webapp-launcher
 2428  ./build.sh
 2429  cd ..
 2430  ls
 2431  cd t2t-app
 2432  ./build.sh
 2433  cd webapp-launcher
 2434  cd ..
 2435  ls
 2436  cd containers
 2437  cd webapp-launcher
 2438  ls
 2439  ./build.sh
 2440  ls -lrt
 2441  cd ..
 2442  ls -lrt
 2443  rm -rf gh_data
 2444  rm ttt
 2445  rm tmp
 2446  rm foo
 2447  ls
 2448  rm dada
 2449  ls -lrt
 2450  pwd
 2451  ;s
 2452  ls
 2453  kubectl get services
 2454  export AWS_PROFILE=demo10
 2455  export KUBECONFIG=/Users/igor/Downloads/kubeconfig.dev4.demo10.superhub.io-3.yaml
 2456  kubectl get services
 2457  kubectl get services --namespace=kubeflow
 2458  pwd
 2459  ls -lrt
 2460  cd containers
 2461  pwd
 2462  cd tf-serving
 2463  ls
 2464  ./build.sh
 2465  kubectl get services --namespace=kubeflow
 2466  kubectl get pods --namespace=kubeflow
 2467  kubectl logs -f "ghsumm-github-issue-summarization-h65dg-d5667dc84-9zzw"  --namespace=kubeflow --timestamps
 2468  kubectl logs -f "ghsumm-github-issue-summarization-h65dg-webapp-6c5979cf8c-kpc22"  --namespace=kubeflow --timestamps
 2469  kubectl logs -f "ghsumm-github-issue-summarization-h65dg-d5667dc84-9zzw"  --namespace=kubeflow --timestamps
 2470  kubectl get pods --namespace=kubeflow
 2471  vi ~/.zshrc
 2472  ls
 2473  pwd
 2474  cd /Users/igor/dev/ml-examples/ml/
 2475  export AWS_PROFILE=demo10
 2476  export KUBECONFIG=/Users/igor/Downloads/kubeconfig.dev4.demo10.superhub.io-3.yaml
 2477  kubectl get pods --namespace=kubeflow github-issue-summarization-h65dg-1720824901 --v
 2478  kubectl get pods --namespace=kubeflow github-issue-summarization-h65dg-1720824901 -v
 2479  kubectl get pods --namespace=kubeflow github-issue-summarization-h65dg-1720824901
 2480  argo list
 2481  argo --help
 2482  argo list -n kubeflow
 2483  argo get github-issue-summarization-nd5mj -n kubeflow
 2484  kubectl  --namespace=kubeflow get deployments
 2485  kubectl logs -f "ghsumm-github-issue-summarization-qg4mw-webapp-699f5875bc-vlmm5"  --namespace=kubeflow --timestamps
 2486  pwd
 2487  ls
 2488  cd containers
 2489  ls
 2490  cd t2t-app
 2491  ls
 2492  ./build.sh
 2493  cd ..
 2494  ls
 2495  cd tf-serving
 2496  ./build.sh
 2497  cd ..
 2498  ls
 2499  cd webapp-launcher
 2500  ./build.sh
 2501  pip list
 2502  docker images
 2503  docker run --rm -it `dev4-harbor.svc.dev4.demo10.superhub.io/ml-examples/ml-pipeline-t2tapp:latest`
 2504  docker run --rm -it dev4-harbor.svc.dev4.demo10.superhub.io/ml-examples/ml-pipeline-t2tapp:latest
 2505  docker run --rm -it --entrypoint=bash dev4-harbor.svc.dev4.demo10.superhub.io/ml-examples/ml-pipeline-t2tapp:latest
 2506  cd ..
 2507  cd tf-serving
 2508  ./build.sh
 2509  ls
 2510  ./build.sh
 2511  cd ..
 2512  cd t2t-app
 2513  ./build.sh
 2514  pwd
 2515  ./build.sh
 2516  pwd
 2517  cd ..
 2518  cd tf-serving
 2519  ./build.sh
 2520  cd ..
 2521  cd base
 2522  ./build.sh
 2523  cd ..
 2524  cd t2t-app
 2525  ./build.sh
 2526  cd ..
 2527  cd t2t-proc
 2528  ./build.sh
 2529  cd ..
 2530  cd tf-serving
 2531  ./build.sh
 2532  cd ..
 2533  cd webapp-launcher
 2534  ./build.sh
 2535  ls
 2536  cd ..
 2537  pwd
 2538  cd ../..
 2539  ls
 2540  ls -lrt
 2541  history >hist_ml2.txt
 2542  vi hist_ml2.txt
 2543  pwd
 2544  ls
 2545  cd wip
 2546  ls
 2547  pwd
 2548  cd ..
 2549  pwd
 2550  cd ~/dev/ml-examples/ml
 2551  ls
 2552  export KUBECONFIG=/Users/igor/Downloads/kubeconfig.dev4.demo10.superhub.io-3.yaml
 2553  export AWS_PROFILE=demo10
 2554  kubectl get pods --namespace=kubeflow
 2555  kubectl get pods --namespace=kubeflow | grep tensorb
 2556  kubectl logs -f "tensorboard-vh9hb"  --namespace=kubeflow --timestamps
 2557  host -t ns gcp.superhub.io
 2558  ls
 2559  vi hist_ml.txt
 2560  pwd
 2561  cd /Users/igor/dev/agilestacks-components/sweeper
 2562  ls
 2563  vi .aws/config
 2564  vi ~/.aws/config
 2565  vi ~/.aws/credentials
 2566  export AWS_PROFILE=demo05
 2567  aws s3 ls
 2568  make ACCOUNT=806215566201
 2569  ls
 2570  vi hist6.txt
 2571  pip --version
 2572  git pull
 2573  pwd
 2574  ls -lrt
 2575  make ACCOUNT=806215566201
 2576  xcode-select --install
 2577  xcode-select --switch /Applications/Xcode.app
 2578  make ACCOUNT=806215566201
 2579  aws s3 ls
 2580  aws ec2 describe-key-pairs
 2581  pwd
 2582  cd /Users/igor/dev/
 2583  ls
 2584  ls -lrt
 2585  cd /Users/igor/demo
 2586  ls -lrt
 2587  pwd
 2588  cp ~/Downloads/kubeconfig.dev1.demo05.superhub.io.yaml ~/dev/ml-examples/kubeconfig.dev1.demo05.superhub.io.yaml
 2589  cd ~/dev/ml-examples
 2590  export AWS_PROFILE=demo05
 2591  export KUBECONFIG=/Users/igor/dev/mldemo/kubeconfig.dev1.demo05.superhub.io.yaml
 2592  kubectl get nodes
 2593  export KUBECONFIG=/Users/igor/dev/mldemo/kubeconfig.dev01.demo10.superhub.io.yaml
 2594  kubectl get nodes
 2595  ls
 2596  ls -lrt
 2597  export KUBECONFIG=/Users/igor/dev/ml-examples/kubeconfig.dev1.demo05.superhub.io.yaml
 2598  kubectl get nodes
 2599  ls
 2600  pwd
 2601  ls
 2602  cd /Users/igor/dev/applications/app-templates/kubeflow-pipeline/
 2603  ls -lrt
 2604  kubectl apply -f .hub/rbac.yaml
 2605  vi .hub/rbac.yaml
 2606  kubens kubeflow
 2607  kubectl -n harbor get secrets
 2608  kubectl -n harbor get secret dev1-harbor-pull-secret -o json| jq -rMc 'del(.metadata.namespace)' | kubectl --namespace=kubeflow apply -f -
 2609  cd /Users/igor/dev/components
 2610  cd /Users/igor/dev/applications
 2611  cd components/s3fs
 2612  ls
 2613  kubectl apply -f install.yaml
 2614  aws s3 ls
 2615  pwd
 2616  cd /Users/igor/dev/ml\-stack\-307
 2617  pwd
 2618  ls -lrt
 2619  ls -lrt params
 2620  vi params/dev1.demo05.superhub.io.yaml
 2621  pwd
 2622  cd ~/dev/ml-examples
 2623  ls -lrt
 2624  rm kubeconfig.dev1.demo05.superhub.io.yaml
 2625  cp ~/Downloads/kubeconfig.ml1.demo05.superhub.io.yaml ~/dev/ml-examples/kubeconfig.ml1.demo05.superhub.io.yaml
 2626  history
 2627  export KUBECONFIG=/Users/igor/dev/mldemo/kubeconfig.ml1.demo05.superhub.io.yaml
 2628  kubectl get nodes
 2629  export KUBECONFIG=/Users/igor/dev/ml-examples/kubeconfig.ml1.demo05.superhub.io.yaml
 2630  kubectl get nodes
 2631  kubens kubeflow
 2632  cd /Users/igor/dev/applications/app-templates/kubeflow-pipeline/
 2633  ls -lrt
 2634  kubectl apply -f .hub/rbac.yaml
 2635  kubectl -n harbor get secrets
 2636  kubectl -n harbor get secret ml1-harbor-pull-secret -o json| jq -rMc 'del(.metadata.namespace)' | kubectl --namespace=kubeflow apply -f -
 2637  cd /Users/igor/dev/components/s3fs
 2638  cd /Users/igor/dev/components/scd /Users/igor/dev/applications
 2639  cd /Users/igor/dev/applications
 2640  cd components/s3fs
 2641  ls
 2642  kubectl apply -f install.yaml
 2643  vi install.yaml
 2644  cd /Users/igor/dev/applications/app-templates/kubeflow-pipeline/
 2645  ls -ler
 2646  ls -lrt .hub/
 2647  kubectl get nodes
 2648  export AWS_PROFILE=demo05
 2649  export KUBECONFIG=/Users/igor/dev/ml-examples/kubeconfig.ml1.demo05.superhub.io.yaml
 2650  kubectl get nodes
 2651  kubens kubeflow
 2652  kubectl apply -f .hub/rbac.yaml
 2653  describe-spot-price-history
 2654  kubectl get nodes
 2655  vi ~/.aws/credentials
 2656  export AWS_PROFILE=demo05
 2657  aws s3 ls s3://demo10kubeflow/gh_data/data_github_issues.csv
 2658  aws s3 ls s3://demo10kubeflow/gh_data
 2659  aws s3 ls s3://demo10kubeflow
 2660  gsutil ls gs://aju-dev-demos-codelabs/kubecon/
 2661  grep "cookiecutter-evil-pypackage" ~/Downloads/kubecon_gh_data_github_issues.csv
 2662  grep "cookiecutter-evil-pypackage" ~/Downloads/github_issues.csv
 2663  aws s3 ls https://s3.us-east-2.amazonaws.com/asi-kubeflow-models/
 2664  aws s3 ls s3://asi-kubeflow-models/
 2665  aws s3 ls s3://asi-kubeflow-models/gh-issues/
 2666  aws s3 cp ~/Downloads/github_issues.csv s3://asi-kubeflow-models/gh-issues/github_issues_1000.csv
 2667  export AWS_PROFILE=dev
 2668  aws s3 cp ~/Downloads/github_issues.csv s3://asi-kubeflow-models/gh-issues/github_issues_1000.csv
 2669  aws s3 ls s3://asi-kubeflow-models/gh-issues/
 2670  export AWS_PROFILE=default
 2671  aws s3 ls s3://asi-kubeflow-models/gh-issues/
 2672  aws s3 cp ~/Downloads/github_issues.csv s3://asi-kubeflow-models/gh-issues/github_issues_1000.csv
 2673  aws s3 ls s3://asi-kubeflow-models/gh-issues/
 2674  aws s3 cp ~/Downloads/github_issues.csv s3://asi-kubeflow-models/gh-issues/data-full2.csv
 2675  aws s3 ls s3://asi-kubeflow-models/gh-issues/
 2676  aws s3api get-object-tagging --bucket asi-kubeflow-models --key gh-issues/data-full2.csv
 2677  aws s3api get-object-tagging --bucket asi-kubeflow-models --key gh-issues
 2678  aws s3api get-object-tagging --bucket asi-kubeflow-models --key gh-issues/data-full2.csv
 2679  aws s3api get-object-tagging --bucket asi-kubeflow-models --key gh-issues/data-full.csv 
 2680  aws s3api get-object-tagging --bucket asi-kubeflow-models --key gh-issues/data-full2.csv
 2681  more ~/Downloads/github_issues.csv
 2682  more ~/Downloads/github_issuesKF.csv
 2683  more ~/Downloads/github_issues_KF.csv
 2684  diff ~/Downloads/github_issues_KF.csv ~/Downloads/github_issues.csv
 2685  more ~/Downloads/github_issues.csv
 2686  more ~/Downloads/github_issues_KF.csv
 2687  aws s3 ls s3://asi-kubeflow-models/gh-issues/
 2688  export KUBECONFIG=/Users/igor/dev/ml-examples/kubeconfig.ml1.demo05.superhub.io.yaml
 2689  kubectl get crd --namespace=kubeflow
 2690  kubectl get seldondeployments
 2691  kubectl delete seldondeployments
 2692  kubectl delete seldondeployments --all
 2693  pwd
 2694  ls
 2695  ls -a
 2696  vi .envrc
 2697  direnv allow
 2698  cd ..
 2699  cd kubeflow-pipeline
 2700  export DIRENV_BASH=/bin/bash
 2701  vi .envrc
 2702  direnv allow
 2703  vi .envrc
 2704  export KUBECONFIG=$HOME/Downloads/kubeconfig.ml2.demo05.superhub.io.yaml
 2705  cd ..
 2706  export KUBECONFIG=$HOME/Downloads/kubeconfig.ml2.demo05.superhub.io.yaml
 2707  cd kubeflow-pipeline
 2708  kubectl get nodes
 2709  vi .envrc
 2710  vi $(pwd)/.pyenv
 2711  python --version
 2712  pyenv version
 2713  brew update
 2714  brew install pyenv
 2715  pyenv versions
 2716  $(pyenv root)/versions
 2717  vi $(pwd)/.pyenv
 2718  vi .envrc
 2719  brew install pyenv-virtualenv
 2720  pyenv install 3.6.4
 2721  pyenv versions
 2722  xcode-select --install
 2723  brew install zlib
 2724  export LDFLAGS="-L/usr/local/opt/zlib/lib
 2725  export LDFLAGS="-L/usr/local/opt/zlib/lib"
 2726  export CPPFLAGS="-I/usr/local/opt/zlib/include"
 2727  pyenv install 3.6.4
 2728  pyenv versions
 2729  pyenv global 3.6.4
 2730  pyenv versions
 2731  vi .e
 2732  vi .envrc
 2733  pyenv activate 3.6.4
 2734  pwd
 2735  cd $HOME
 2736  git clone https://github.com/yyuu/pyenv-virtualenv.git ~/.pyenv/plugins/pyenv-virtualenv
 2737  source ~/.bashrc
 2738  mkdir virtual_env
 2739  cd virtual_env/
 2740  pyenv virtualenv 3.6.4 venv
 2741  pyenv versions
 2742  pyenv activate venv
 2743  cd /Users/igor/dev/applications/app-templates/kubeflow-pipeline
 2744  vi .envrc
 2745  export PYENV_ROOT="$(pwd)/.pyenv"\nexport PATH="$PYENV_ROOT/bin:$PATH"
 2746  pyenv activate venv36
 2747  pyenv activate venv
 2748  pyenv versions
 2749  pyenv activate 3.6.4
 2750  pyenv virtualenv 3.6.4 venv36
 2751  echo 'eval "$(pyenv virtualenv-init -)"' >> ~/.zshenv
 2752  echo -e 'if command -v pyenv 1>/dev/null 2>&1; then\n  eval "$(pyenv init -)"\nfi' >> ~/.zshenv
 2753  vi ~/.zshenv
 2754  ls "$HOME"/.pyen
 2755  ls "$HOME"/.pyenv
 2756  vi ~/.zshrc
 2757  ls $HOME/.pyenv/bin
 2758  ls /usr/bin/p
 2759  ls /usr/local/bin/pyenv@/bin
 2760  find ~/ -name "pyenv" -print
 2761  more /Users/igor//Library/Logs/Homebrew/pyenv
 2762  ls /Users/igor/Library/Logs/Homebrew/pyenv
 2763  ls /Users/igor/Library/Logs/Homebrew/pyenv-virtualenv
 2764  vi /Users/igor/Library/Logs/Homebrew/pyenv-virtualenv/01
 2765  vi /Users/igor/Library/Logs/Homebrew/pyenv-virtualenv/01.install.sh
 2766  ls .pyenv
 2767  brew install readline xz pyenv pyenv-virtualenv
 2768  ls ~/.pyenv/bin
 2769  brew reinstall pyenv
 2770  ls ~/.pyenv/bin
 2771  brew info pyenv
 2772  if which pyenv > /dev/null; then eval "$(pyenv init -)"; fi
 2773  which pyenv
 2774  pyenv
 2775  pyenv init -
 2776  ls ~/.pyenv/bin
 2777  pyenv which python
 2778  pyenv versions
 2779  python --version
 2780  pyenv global venv36
 2781  python --version
 2782  pyenv global venv36
 2783  python --version
 2784  python
 2785  vi .zshrc
 2786  vi .zshenv
 2787  vi ~/.zshenv
 2788  pyenv
 2789  pyenv which
 2790  pyenv which python
 2791  cd /Users/igor/dev/applications/app-templates/kubeflow-pipeline
 2792  vi .envrc
 2793  direnv allow
 2794  cd ..
 2795  cd kubeflow-pipeline
 2796  vi .envrc
 2797  direnv allow
 2798  vi .envrc
 2799  direnv allow
 2800  vi .envrc
 2801  direnv allow
 2802  vi .envrc
 2803  pwd
 2804  ls ..
 2805  cd ..
 2806  vi .envrc
 2807  ls -a
 2808  cd kubeflow-pipeline
 2809  vi .envrc
 2810  direnv allow
 2811  vi .envrc
 2812  direnv allow
 2813  python --version
 2814  pyenv activate 3.6.4
 2815  pyenv
 2816  pyenv activate 3.6.4
 2817  pyenv versions
 2818  python --version
 2819  pyenv global 3.6.4
 2820  python --version
 2821  pyenv activate 3.6.4
 2822  pyenv versions
 2823  vi ~/.bashrc
 2824  ps
 2825  vi ~/.zshrc
 2826  git clone https://github.com/yyuu/pyenv.git ~/.pyenv
 2827  cd ~
 2828  rm -rf ~/.pyenv
 2829  git clone https://github.com/yyuu/pyenv.git ~/.pyenv
 2830  ls ~/.pyenv/bin
 2831  echo 'export PYENV_ROOT="$HOME/.pyenv"' >> ~/.zshrc
 2832  echo 'export PATH="$PYENV_ROOT/bin:$PATH"' >> ~/.zshrc
 2833  vi ~/.zshrc
 2834  echo 'eval "$(pyenv init -)"' >> ~/.zshrc
 2835  pyenv install --list
 2836  pyenv install -v 3.6.4
 2837  brew install zlib
 2838  brew reinstall zlib
 2839  pyenv install -v 3.6.4
 2840  pyenv version
 2841  xcode-select --install
 2842  CFLAGS="-I$(xcrun --show-sdk-path)/usr/include" pyenv install -v 3.6.4
 2843  pyenv version
 2844  pyenv versions
 2845  pyenv global 3.6.4
 2846  pyenv versions
 2847  python -V
 2848  python --version
 2849  pyenv activate 3.6.4
 2850  python --version
 2851  mkdir py
 2852  cd py
 2853  virtualenv venv
 2854  brew install pyenv-virtualenv
 2855  brew reinstall pyenv-virtualenv
 2856  echo 'eval "$(pyenv virtualenv-init -)"' >> ~/.zshenv
 2857  pyenv version
 2858  pyenv versions
 2859  pyenv virtualenv 3.6.3 venv36
 2860  python --version
 2861  cd /Users/igor/dev/applications/app-templates/kubeflow-pipeline
 2862  vi .envrc
 2863  cd ..
 2864  cd /Users/igor/dev/applications/app-templates/kubeflow-pipeline
 2865  direnv allow
 2866  python --version
 2867  vi .envrc
 2868  direnv allow
 2869  vi .envrc
 2870  ls $HOME/Downloads/kubeconfig.ml2.demo05.superhub.io.yaml
 2871  export KUBECONFIG=$HOME/Downloads/kubeconfig.ml2.demo05.superhub.io.yaml
 2872  kubectl get nodes
 2873  ls
 2874  python --version
 2875  ls
 2876  kubectl get nodes
 2877  make
 2878  pwd
 2879  ls
 2880  cat R
 2881  cat RE
 2882  cat README.md
 2883  pwd
 2884  cd ..
 2885  cd kubeflow-pipeline
 2886  kubectl get nodes
 2887  direnv allow
 2888  vi .envrc
 2889  export KUBECONFIG=$HOME/Downloads/kubeconfig.ml2.demo05.superhub.io.yaml
 2890  kubectl get nodes
 2891  make deploy
 2892  ls
 2893  cd .hub
 2894  make deploy
 2895  cd ..
 2896  hub
 2897  cd ~/dev
 2898  mkdir -p ~/.terraform.d/plugin-cache
 2899  vi ~/.terraformrc
 2900  vi .envrc
 2901  direnv allow
 2902  vi .envrc
 2903  direnv allow
 2904  vi ~/.aws/credentials
 2905  vi .envrc
 2906  direnv allow
 2907  vi ~/.zshenv
 2908  cd automation-hub/cli
 2909  cd ~/dev/automation-hub-cli
 2910  ls
 2911  make install govendor get
 2912  ls -lrt
 2913  ls -lrt bin
 2914  ln -s $(pwd)/bin/darwin/hub ~/bin/
 2915  vi .envrc
 2916  direnv allow
 2917  hub
 2918  pwd
 2919  ls
 2920  cd ~/dev
 2921  vi .envrc
 2922  direnv allow
 2923  pwd
 2924  vi ~/.zshenv
 2925  vi .envrc
 2926  ls
 2927  vi ~/.zshenv
 2928  vi .envrc
 2929  vi ~/.zshenv
 2930  vi .envrc
 2931  vi ~/.zshenv
 2932  brew install direnv
 2933  brew upgrade direnv
 2934  direnv allow
 2935  hub
 2936  cd ~/dev
 2937  hub
 2938  ls
 2939  TF_VERSION=0.11.10\nwget https://releases.hashicorp.com/terraform/$TF_VERSION/terraform_"$TF_VERSION"_darwin_amd64.zip\nunzip terraform_"$TF_VERSION"_darwin_amd64.zip\nmv terraform /usr/local/bin/terraform-v0.11\n\n\nTF_VERSION=0.9.11\nwget https://releases.hashicorp.com/terraform/$TF_VERSION/terraform_"$TF_VERSION"_darwin_amd64.zip\nunzip terraform_"$TF_VERSION"_darwin_amd64.zip\nmv terraform /usr/local/bin/terraform\n\nwget https://storage.googleapis.com/kubernetes-release/release/v1.12.3/bin/darwin/amd64/kubectl\nchmod +x kubectl\nmv kubectl /usr/local/bin/\n\npip install virtualenv\n\nnvm install 10.13.0\nnvm alias default 10.13.0\nnvm use default
 2940  vim ~/.ssh/config
 2941  git config --global pull.rebase true
 2942  git config --global rebase.autoStash true
 2943  git config --global branch.autosetuprebase always
 2944  git config --global credential.helper osxkeychain
 2945  pwd
 2946  kubectl get nodes
 2947  cd /Users/igor/dev/applications/app-templates/kubeflow-pipeline
 2948  vi .envrc
 2949  direnv allow
 2950  vi .envrc
 2951  direnv allow
 2952  pyenv versions
 2953  vi .envrc
 2954  pyenv versions
 2955  direnv allow
 2956  python --version
 2957  kubectl get nodes
 2958  vi .envrc
 2959  direnv allow
 2960  kubectl get nodes
 2961  vi .envrc
 2962  export KUBECONFIG=/Users/igor/Downloads/kubeconfig.ml2.demo05.superhub.io.yaml
 2963  kubectl get nodes
 2964  ls
 2965  make
 2966  make deploy
 2967  cat Makefile
 2968  make install
 2969  hub
 2970  vi .envrc
 2971  direnv allow
 2972  echo $HOME
 2973  vi .envrc
 2974  direnv allow
 2975  vi .envrc
 2976  echo $OSTYPE
 2977  vi .envrc
 2978  direnv allow
 2979  hub
 2980  vi .envrc
 2981  ls $HOME/dev/automation-hubi-cli/bin/
 2982  ls $HOME/dev/automation-hub-cli/bin/
 2983  ls $HOME/dev/automation-hub-cli/bin/darwin
 2984  vi .envrc
 2985  direnv allow
 2986  hub
 2987  make install
 2988  aws s3 ls
 2989  vi .envrc
 2990  direnv allow
 2991  make install
 2992  vi .envrc
 2993  cd ~/dev/applications/app-templates/kubeflow-pipeline
 2994  aws s3api get-bucket-location --bucket $PLATFORM_STATE_BUCKET --query 'LocationConstraint'
 2995  echo $PLATFORM_STATE_BUCKET
 2996  aws s3 ls
 2997  aws s3api get-bucket-location --bucket agilestacks.demo05.superhub.io --query 'LocationConstraint'
 2998  aws s3api get-bucket-location --bucket $PLATFORM_STATE_BUCKET
 2999  aws s3api get-bucket-location --bucket agilestacks.demo05.superhub.io
 3000  direnv allow
 3001  make install
 3002  pwd
 3003  aws s3 ls s3://agilestacks.demo05.superhub.io/
 3004  aws s3 ls s3://agilestacks.demo05.superhub.io/ml2.demo05.superhub.io
 3005  aws s3 ls s3://agilestacks.demo05.superhub.io/ml2.demo05.superhub.io/hub
 3006  aws s3 ls s3://agilestacks.demo05.superhub.io/ml2.demo05.superhub.io/hub/cluster
 3007  vi .envrc
 3008  aws s3 ls s3://agilestacks.demo05.superhub.io/ml2.demo05.superhub.io/hub/
 3009  vi .envrc
 3010  direnv allow
 3011  make install
 3012  pwd ../../..
 3013  ls ../../../components
 3014  cd ../../../components
 3015  pwd
 3016  ls -lrt
 3017  make install
 3018  cd ~/dev/applications/app-templates/kubeflow-pipeline
 3019  make install
 3020  cd ~/dev/applications/components/s3fs
 3021  pwd
 3022  cd ~/dev/applications/app-templates/kubeflow-pipeline
 3023  make install
 3024  ghub
 3025  cd ~/Downloads
 3026  ls -lrt
 3027  cp hub-darwin-amd64-2.11.2/bin/hub /usr/local/bin/ghub
 3028  ghub
 3029  vi .envrc
 3030  pwd
 3031  cd /Users/igor/dev/applications/app-templates/kubeflow-pipeline
 3032  ls -lrt
 3033  kubectl get nodes
 3034  make install
 3035  echo $GITHUB_ORG
 3036  vi .envrc
 3037  cd /Users/igor/dev/applications/app-templates/kubeflow-pipeline
 3038  direnv allow
 3039  echo $GITHUB_ORG
 3040  make install
 3041  pwd
 3042  kubectl -n harbor get secrets
 3043  export KUBECONFIG=/Users/igor/Downloads/kubeconfig.ml1.demo05.superhub.io.yaml
 3044  export KUBECONFIG=$HOME/dev/ml-examples/kubeconfig.ml2.demo05.superhub.io.yaml
 3045  echo $HOME
 3046  export KUBECONFIG=$HOME/dev/ml-examples/kubeconfig.ml2.demo05.superhub.io.yaml
 3047  cd ~/dev/ml-examples
 3048  export AWS_PROFILE=demo05
 3049  export KUBECONFIG=$HOME/dev/ml-examples/kubeconfig.ml2.demo05.superhub.io.yaml
 3050  export KUBECONFIG= /Users/igor/dev/ml-examples/kubeconfig.ml2.demo05.superhub.io.yaml
 3051  export KUBECONFIG=/Users/igor/dev/ml-examples/kubeconfig.ml2.demo05.superhub.io.yaml
 3052  jubectl get nodes
 3053  kubectl get nodes
 3054  export KUBECONFIG=/Users/igor/dev/ml-examples/kubeconfig.ml1.demo05.superhub.io.yaml
 3055  kubectl -n harbor get secrets\n
 3056  kubectl -n harbor get secret ml1-harbor-pull-secret -o json
 3057  kubectl -n harbor get secrets
 3058  kubectl -n harbor get secrets\n
 3059  pwd
 3060  history >hist_ml3.txt
 3061  vi hist_ml3.txt
 3062  kubectl -n harbor get secret ml1-harbor-pull-secret -o json
 3063  kubectl -n harbor get secret ml2-harbor-tls -o json
 3064  kubectl --context="ml2.demo05.superhub.io" -n harbor get secret ml2-harbor-tls -o json
 3065  kubectl --context="ml2.demo05.superhub.io" -n harbor get secret ml2-harbor-tls -o json \\n\t| jq -M -c 'del(.metadata.namespace, .status, .metadata.uid, .metadata.resourceVersion, .metadata.selfLink, .metadata.creationTimestamp, .metadata.annotations."kubectl.kubernetes.io/last-applied-configuration")' \n
 3066  kubectl -n harbor get secret ml1-harbor-pull-secret -o json| jq -rMc 'del(.metadata.namespace)' 
 3067  kubectl -n harbor get secrets\n
 3068  cd "/Users/igor/dev/applications/components/github-repository"
 3069  pwd
 3070  cd /Users/igor/dev/applications/app-templates/kubeflow-pipeline ; env PYTHONIOENCODING=UTF-8 PYTHONUNBUFFERED=1 /Users/igor/.pyenv/shims/python /Users/igor/.vscode/extensions/ms-python.python-2019.4.12954/pythonFiles/ptvsd_launcher.py --default --client --host localhost --port 64829 /Users/igor/dev/applications/app-templates/kubeflow-pipeline/src/process_data.py 
 3071  cd ~/dev/ml-examples
 3072  cd ~/dev/applications/app-templates/kubeflow-pipeline
 3073  kubectl -n harbor get secrets
 3074  make install
 3075  kubectl -n kubeflow get workflows
 3076  pwd
 3077  ls
 3078  cp ~/Downloads/github2.ipynb.json github2.ipynb
 3079  git remote -v
 3080  git config --global push.default simple
 3081  git --version
 3082  cat $HOME/dev/mldemo/agilestacks-ml-4dcc94f4f301.json
 3083  ls $HOME/dev/mldemo/
 3084  cat $HOME/dev/mldemo/user-gcp-sa.json
 3085  kubectl get nodes
 3086  kubectl create secret generic user-gcp-sa --from-file=$HOME/dev/mldemo/user-gcp-sa.json
 3087  kubectl delete secret user-gcp-sa
 3088  kubectl create secret generic user-gcp-sa --from-file=$HOME/dev/mldemo/user-gcp-sa.json --namespace=kubeflow\n
 3089  kubectl get secret user-gcp-sa -o yaml --namespace=kubeflow
 3090  I=t2.small ; printf "\$%.2f/mo\n" $(echo "$(aws ec2 describe-spot-price-history --instance-types $I --start-time=$(date +%s) --product-descriptions="Linux/UNIX" | jq -r '.SpotPriceHistory[0].SpotPrice') * 24 * 30" | bc)
 3091  I=r4.large ; printf "\$%.2f/mo\n" $(echo "$(aws ec2 describe-spot-price-history --instance-types $I --start-time=$(date +%s) --product-descriptions="Linux/UNIX" | jq -r '.SpotPriceHistory[0].SpotPrice') * 24 * 30" | bc)
 3092  aws ec2 describe-spot-price-history --instance-types r4.large
 3093  date +%s
 3094  aws ec2 describe-spot-price-history --instance-types r4.large --start-time=$(date +%s) --product-descriptions="Linux/UNIX"
 3095  for I in t2.small t2.medium m5.large; do\n  printf "$I: \$%.2f/mo\n" $(echo "$(aws ec2 describe-spot-price-history --instance-types $I --start-time=$(date +%s) --product-descriptions="Linux/UNIX" | jq -r '.SpotPriceHistory[0].SpotPrice') * 24 * 30" | bc)\ndone
 3096  vi .envrc
 3097  vi .aws/config
 3098  vi ~/.aws/config
 3099  aws ec2 describe-spot-price-history --instance-types r4.large --start-time=$(date +%s) --product-descriptions="Linux/UNIX"
 3100  for I in t2.small t2.medium m5.large; do\n  printf "$I: \$%.2f/mo\n" $(echo "$(aws ec2 describe-spot-price-history --instance-types $I --start-time=$(date +%s) --product-descriptions="Linux/UNIX" | jq -r '.SpotPriceHistory[0].SpotPrice') * 24 * 30" | bc)\ndone
 3101  for I in t2.small t3.micro t3.small; do\n  printf "$I: \$%.2f/mo\n" $(echo "$(aws ec2 describe-spot-price-history --instance-types $I --start-time=$(date +%s) --product-descriptions="Linux/UNIX" | jq -r '.SpotPriceHistory[0].SpotPrice') * 24 * 30" | bc)\ndone
 3102  export AWS_DEFAULT_REGION=us-east-1
 3103  aws ec2 describe-spot-price-history --instance-types r4.large --start-time=$(date +%s) --product-descriptions="Linux/UNIX"
 3104  for I in t2.small t3.micro t3.small; do\n  printf "$I: \$%.2f/mo\n" $(echo "$(aws ec2 describe-spot-price-history --instance-types $I --start-time=$(date +%s) --product-descriptions="Linux/UNIX" | jq -r '.SpotPriceHistory[0].SpotPrice') * 24 * 30" | bc)\ndone
 3105  aws ec2 describe-spot-price-history --instance-types t3.micro --start-time=$(date +%s) --product-descriptions="Linux/UNIX"
 3106  aws ec2 describe-spot-price-history --instance-types t2.small --start-time=$(date +%s) --product-descriptions="Linux/UNIX"
 3107  vi ~/.aws/config
 3108  aws ec2 describe-spot-price-history --instance-types t2.small --start-time=$(date +%s) --product-descriptions="Linux/UNIX"
 3109  aws ec2 describe-spot-price-history --instance-types t3.micro --start-time=$(date +%s) --product-descriptions="Linux/UNIX"
 3110  pwd
 3111  cd ~/Downloads
 3112  export KUBECONFIG=/Users/igor/Downloads/kubeconfig.test05.gcp05.superhub.io.yaml
 3113  kubectl get nodes
 3114  cat /Users/igor/Downloads/kubeconfig.test05.gcp05.superhub.io.yaml
 3115  aws ec2 describe-spot-price-history --instance-types t3.micro --start-time=$(date +%s) --product-descriptions="Linux/UNIX"
 3116  aws ec2 describe-spot-price-history --instance-types p2.xlarge --start-time=$(date +%s) --product-descriptions="Linux/UNIX"
 3117  cd ~
 3118  ls
 3119  vi ~/.aws/config
 3120  export AWS_PROFILE=iddqd
 3121  aws s3 ls
 3122  aws iam get-user
 3123  aws iam change-password --generate-cli-skeleton > change-password.json
 3124  vi change-password.json
 3125  aws iam change-password --cli-input-json file://change-password.json
 3126  aws iam get-user
 3127  aws iam get-user igor
 3128  aws iam get-user --user-name igor
 3129  aws iam get-user --user-name oleg
 3130  aws iam get-user --user-name root
 3131  aws iam get-user --user-name igor@agilestacks.com
 3132  aws iam get-user --user-name mameshini@agilestacks.com
 3133  aws iam list-users
 3134  cat change-password.json
 3135  aws iam update-login-profile --user-name igor --password S0Amaz--password-reset-required
 3136  aws iam update-login-profile --user-name igor --password S0Amaz1ng555 --password-reset-required
 3137  aws iam update-login-profile --user-name igor --password "S0Amaz" --password-reset-required
 3138  aws iam update-login-profile --user-name igor --password "S0Amaz1ng555$" --password-reset-required
 3139  aws iam update-login-profile --user-name igor --password "^L[p*#Z*8o)K" --password-reset-required
 3140  aws iam update-login-profile --generate-cli-skeleton > change-password.json
 3141  vi change-password.json
 3142  aws iam update-login-profile --cli-input-json file://change-password.json
 3143  vi change-password.json
 3144  aws iam update-login-profile --cli-input-json file://change-password.json
 3145  vi change-password.json
 3146  aws iam update-login-profile --cli-input-json file://change-password.json
 3147  vi change-password.json
 3148  ls
 3149  aws iam list-users
 3150  export AWS_PROFILE=demo05
 3151  aws iam list-users
 3152  ls
 3153  history >python.txt
 3154  vi python.log
 3155  vi python.txt
 3156  pwd
 3157  ls
 3158  cd demo
 3159  ls
 3160  curl -i "https://api.github.com/repos/agilestacks/issues" -u "mameshini"
 3161  curl -i "https://api.github.com/repos/agilestacks/issues" -u mameshini:e7a1220da208c677cda9310fa162710bcc340fea
 3162  curl -i "https://api.github.com/repos/agilestacks/reactor/issues" -u mameshini:e7a1220da208c677cda9310fa162710bcc340fea
 3163  curl -i "https://api.github.com/repos/agilestacks/*/issues" -u mameshini:e7a1220da208c677cda9310fa162710bcc340fea
 3164  npm i -g git-labelmaker
 3165  ls
 3166  ls -lrt
 3167  git-labelmaker
 3168  cd ~/dev/applications/
 3169  git-labelmaker
 3170  ping  api.k8s-sphere.hpe.superhub.io 
 3171  cd ~/dev/pipelines
 3172  git fetch origin carolynwang:sagemaker-components
 3173  cd $HOME/dev/applications/app-templates/kubeflow-pipeline
 3174  aws s3 ls
 3175  export AWS_PROFILE=dev
 3176  aws s3 ls
 3177  vi ~/.aws/config
 3178  export AWS_PROFILE=default
 3179  aws s3 ls
 3180  vi in.csv
 3181  aws s3 cp ./in.csv s3://asi-kubeflow-models/gh-issues/go-in.csv
 3182  vi in.csv
 3183  aws s3 ls s3://asi-kubeflow-models/gh-issues
 3184  aws s3 ls s3://asi-kubeflow-models/gh-issues/go-in.csv
 3185  aws s3 cat s3://asi-kubeflow-models/gh-issues/go-in.csv
 3186  aws s3 cp s3://asi-kubeflow-models/gh-issues/go-in.csv test.csv
 3187  vi test.csv
 3188  aws s3 cp s3://asi-kubeflow-models/gh-issues/go-in.csv test.csv
 3189  vi test.csv
 3190  export AWS_PROFILE=demo05
 3191  aws s3 cp s3://asi-kubeflow-models/gh-issues/go-in.csv test.csv
 3192  export AWS_PROFILE=default
 3193  aws s3 cp ./in.csv s3://asi-kubeflow-models/gh-issues/go-in.csv --acl public-read
 3194  export AWS_PROFILE=demo05
 3195  aws s3 cp s3://asi-kubeflow-models/gh-issues/go-in.csv test.csv
 3196  vi test.csv
 3197  aws s3 cp ./in.csv s3://asi-kubeflow-models/gh-issues/go-in.csv --acl public-read
 3198  sudo ufw allow from 98.214.200.198 to any port 80
 3199  vi ~/hist7.txt
 3200  cat /Users/igor/Downloads/agilestacks-ml-4dcc94f4f301.json
 3201  vi /Users/igor/Downloads/agilestacks-ml-4dcc94f4f301.json
 3202  sudo busybox sh
 3203  python --version
 3204  pwd
 3205  cd ~/dev/
 3206  ls -lrt
 3207  ls -lrt *.txt
 3208  vi hist_ml3.txt
 3209  cd pipelines
 3210  ls
 3211  cd ..
 3212  cd ~
 3213  history
 3214  pwd
 3215  ls *txt
 3216  vi python.txt
 3217  ls
 3218  cd py
 3219  ls
 3220  vi python.txt
 3221  cd ..
 3222  vi python.txt
 3223  python --version
 3224  ssh -l etrain69 comet.sdsc.edu
 3225  cd ~/dev/demo
 3226  cd ~/demo
 3227  ./galyleo.sh launch user etrain69
 3228  ls
 3229  cd comet
 3230  mkdir comet
 3231  cd comet
 3232  git clone https://github.com/sdsc-hpc-training/nvidia-dli-2019.git
 3233  ls
 3234  ./nvidia-dli-2019/day2/from-zero-to-rapids/galyleo.sh
 3235  ./nvidia-dli-2019/day2/from-zero-to-rapids/galyleo.sh launch user etrain69
 3236  ./nvidia-dli-2019/day2/from-zero-to-rapids/galyleo.sh launch --user etrain69
 3237  ls -lr
 3238  curl -LO https://eksworkshop.com/kubeflow/kubeflow.files/mnist-inference.yaml
 3239  ls
 3240  ls -lrt
 3241  cd demo
 3242  ls -lrt
 3243  cd comet
 3244  ls -lrt
 3245  cd ..
 3246  pwd
 3247  cd ../dev/OReilly
 3248  ls
 3249  pip install pedl-*.whl
 3250  python --version
 3251  mv ~/Downloads/pedl-0.9.3-py35.py36.py37-none-any.whl .
 3252  pip install pedl-*.whl
 3253  ls
 3254  pwd
 3255  ls
 3256  ls -lrt
 3257  pip install pedl-*.whl
 3258  ls -lrt
 3259  pip install "pedl-0.9.3-py35.py36.py37-none-any.whl"
 3260  export PEDL_MASTER=34.218.132.141
 3261  pedl
 3262  pedl slots
 3263  pedl slot
 3264  pwd
 3265  ls
 3266  git pull
 3267  cd reproducibility
 3268  ls
 3269  pedl e create leslie.yaml .
 3270  ls
 3271  cd model_code
 3272  ls
 3273  pedl e create leslie.yaml .
 3274  ls
 3275  cat leslie.yaml
 3276  ls
 3277  vi model_leslie.py
 3278  ls -lrt
 3279  vi leslie.yaml
 3280  pedl e create leslie.yaml .
 3281  vi leslie.yaml
 3282  ls
 3283  grep seed *
 3284  pwd
 3285  ls
 3286  cd ..
 3287  ls
 3288  cd ..
 3289  ls
 3290  cd hyperparameter_tuning
 3291  ls
 3292  vi single.yaml
 3293  pwd
 3294  pedl e create single.yaml
 3295  pedl e create single.yaml .
 3296  pedl e create random.yaml .
 3297  cd ../model_serving
 3298  ls
 3299  pedl notebook start --config-file config.yaml
 3300  cd ~/dev/agilestacks-components/
 3301  ls
 3302  git pull
 3303  vi sweeper/Makefile
 3304  pwd
 3305  ls
 3306  cd sweeper
 3307  ls
 3308  cat RE
 3309  cat README.md
 3310  export AWS_PROFILE=demo05
 3311  make info
 3312  aws s3 ls
 3313  aws ec2 list
 3314  aws s3 ls
 3315  make ACCOUNT=806215566201
 3316  vi sweeper/Makefile
 3317  ls
 3318  vi Makefile
 3319  ls
 3320  cat README.md
 3321  :q
 3322  make ACCOUNT=806215566201
 3323  cat README.md
 3324  :q
 3325  vi .aws/config
 3326  vi ~/.aws/config
 3327  python --version
 3328  make ACCOUNT=806215566201
 3329  aws s3 ls
 3330  make ACCOUNT=806215566201
 3331  aws s3 ls
 3332  pwd
 3333  cd ../stacks/stage
 3334  pwd
 3335  ls
 3336  ls -lrt
 3337  direnv status
 3338  ls
 3339  ls -alrt
 3340  vi .envrc
 3341  vi ~/.aws/config
 3342  vi ~/.aws/credentials
 3343  direnv allow
 3344  vi ~/.aws/config
 3345  cd ..
 3346  cd stage
 3347  direnv allow
 3348  make kubeconfig
 3349  hub
 3350  aws s3 ls
 3351  hub
 3352  ls ~/dev/
 3353  cd ~/dev/automation-hub-cli
 3354  ls
 3355  git pull
 3356  make
 3357  ls
 3358  ls -lrt
 3359  make install compile
 3360  ls -lrt
 3361  ls -lrt bin
 3362  hub
 3363  bin/darwin/hub
 3364  ls -lrt
 3365  pwd
 3366  ls -alrt
 3367  vi .envrc
 3368  pwd
 3369  direnv allow
 3370  hub
 3371  which hub
 3372  make install compile
 3373  make compile
 3374  ls -lrt
 3375  pwd
 3376  make kubeconfig
 3377  aws s3 ls
 3378  vi ~/.aws/config
 3379  vi .envrc
 3380  direnv allow
 3381  make kubeconfig
 3382  ls -lrt
 3383  kubectx
 3384  kubectx green.stage.agilestacks.io
 3385  kubens automation-task 
 3386  kubens automation-tasks
 3387  kubectl get jobs 
 3388  kubectl logs job/cloud-spec-deploy-md2nk
 3389  brew install stern
 3390  stern -n automation-hub . --tail 20 --exclude /ping --template '{{ .PodName }} {{ .Message}}'
 3391  pwd
 3392  cd ~/dev/agilestacks-components/stacks/stage
 3393  stern -n automation-hub . --tail 20 --exclude /ping --template '{{ .PodName }} {{ .Message}}'
 3394  cd ~/dev/agilestacks-components/stacks/stage
 3395  ls
 3396  cd ~/dev/agilestacks-components/stacks/prod
 3397  ls -lrt
 3398  stern -n automation-hub . --tail 20 --exclude /ping --template '{{ .PodName }} {{ .Message}}'
 3399  kubectx
 3400  pwd
 3401  stern -n automation-hub . --tail 20 --exclude /ping --template '{{ .PodName }} {{ .Message}}'
 3402  pwd
 3403  ls
 3404  vi .envrc
 3405  direnv allow
 3406  make kubeconfig
 3407  vi ../stage/.envrc
 3408  vi .envrc
 3409  direnv allow
 3410  make kubeconfig
 3411  vi .envrc
 3412  direnv allow
 3413  make kubeconfig
 3414  direnv allow
 3415  aws s3 ls
 3416  make kubeconfig
 3417  vi .envrc
 3418  direnv allow
 3419  make kubeconfig
 3420  vi .envrc
 3421  env|sort
 3422  vi .envrc
 3423  aws --profile="$AWS_PROFILE" s3api get-bucket-location --bucket $STATE_BUCKET
 3424  aws --profile="$AWS_PROFILE" s3api get-bucket-location --bucket $STATE_BUCKET --query 'LocationConstraint'
 3425  vi .envrc
 3426  direnv allow
 3427  make kubeconfig
 3428  aws --profile="$AWS_PROFILE" s3api get-bucket-location --bucket $STATE_BUCKET --query 'LocationConstraint'
 3429  aws s3 ls
 3430  make kubeconfig
 3431  aws --profile="$AWS_PROFILE" s3api get-bucket-location --bucket $STATE_BUCKET --query 'LocationConstraint'
 3432  aws --profile="$AWS_PROFILE" s3api get-bucket-location --bucket $STATE_BUCKET --query 'LocationConstraint' | sed -e 's/null/us-east-1/g' | sed -e 's/None/us-east-1/g'
 3433  vi .envrc
 3434  direnv allow
 3435  vi .envrc
 3436  direnv allow
 3437  make kubeconfig
 3438  kubectx red.agilestacks.io
 3439  stern -n automation-hub . --tail 20 --exclude /ping --template '{{ .PodName }} {{ .Message}}'
 3440  vi ~/hist7.txt
 3441  pwd
 3442  ls -lrt
 3443  cd ~/dev
 3444  ls -lrt
 3445  ls ~/Downloads/*.pem
 3446  ls -lrt ~/Downloads/*.pem
 3447  cat ~/Downloads/agilestacks.pem
 3448  cat ~/Downloads/agilestacks2.pem
 3449  ls -lrt ~/Downloads/*.pem
 3450  cat ~/Downloads/agilestacks2.pem
 3451  cat ~/Downloads/agilestacks_Sep.pem
 3452  cat ~/Downloads/agilestacks.pem
 3453  ls -lrt ~/Downloads/*.pem
 3454  cat ~/Downloads/agilestacks.pem
 3455  cat ~/Downloads/agilestacks2.pem
 3456  cat ~/Downloads/agilestacks_Sep.pem
 3457  ls -lrt
 3458  cd ~/dev
 3459  ls -lrt
 3460  vi ~/hist2.txt
 3461  cd ~/work
 3462  ls -lrt
 3463  openssl rsa -in asi1.pem -pubout
 3464  openssl rsa -in asi1.pem -pubout >asi1pub.pem
 3465  ls -lrt
 3466  stern -n automation-hub . --tail 20 --exclude /ping --template '{{ .PodName }} {{ .Message}}'
 3467  pwd
 3468  cat ~/Downloads/agilestacks.pem
 3469  cat ~/Downloads/agilestacks_Sep.pem
 3470  cat ~/Downloads/agilestacks2.pem
 3471  pwd
 3472  ls
 3473  vi swift.pem
 3474  openssl rsa -in swift.pem -pubout >swiftpub.pem
 3475  openssl rsa -in swift.pem -pubout -outform DER | openssl md5 -c >swiftpub.pem
 3476  openssl rsa -in swift.pem -pubout -outform DER >swiftpub.pem
 3477  openssl rsa -in swift.pem -pubout -outform DER | openssl md5 -c
 3478  openssl rsa -in swift.pem -pubout -outform DER
 3479  openssl rsa -in swift.pem -pubout
 3480  pwd
 3481  kubectx green.stage.agilestacks.io
 3482  stern -n automation-hub . --tail 20 --exclude /ping --template '{{ .PodName }} {{ .Message}}'
 3483  ls
 3484  history >hist_stage1.txt
 3485  vi hist_stage1.txt
 3486  kubens automation-tasks
 3487  kubectl get jobs 
 3488  kubectl logs job/cloud-spec-deploy-md2nk
 3489  stern -n automation-hub . --tail 20 --exclude /ping --template '{{ .PodName }} {{ .Message}}'
 3490  kubectl logs job/cloud-spec-deploy-md2nk
 3491  kubectl get jobs 
 3492  stern -n automation-hub . --tail 20 --exclude /ping --template '{{ .PodName }} {{ .Message}}'
 3493  kubectl get jobs 
 3494  kubectl logs job/cloud-specs-deploy-o85zt
 3495  kubectl logs -f job/cloud-specs-deploy-o85zt
 3496  stern -n automation-hub . --tail 20 --exclude /ping --template '{{ .PodName }} {{ .Message}}'
 3497  openssl rsa -in swift.pem -pubout
 3498  cd ~/dev/agilestacks-components/sweeper
 3499  ls -lrt
 3500  vi hist6.txt
 3501  export AWS_PROFILE=demo10
 3502  aws s3 ls
 3503  vi hist6.txt
 3504  make ACCOUNT=299380738002
 3505  aws s3 ls
 3506  pwd
 3507  ls
 3508  cd ~/dev/applications/app-templates/python-video
 3509  python --version
 3510  ls -lrt
 3511  unzip ~/Downloads/stream-video-browser.zip
 3512  ls
 3513  pip install flask
 3514  pip install numpy
 3515  pip install opencv-contrib-python
 3516  pip install imutils
 3517  tree --dirsfirst
 3518  brew install tree
 3519  tree --dirsfirst
 3520  python webstreaming.py --ip 0.0.0.0 --port 8000
 3521  cd stream-video-browser
 3522  python webstreaming.py --ip 0.0.0.0 --port 8000
 3523  python webstreaming.py --ip 127.0.0.1 --port 8000
 3524  python webstreaming.py --ip 0.0.0.0 --port 8000
 3525  pyenv shell 3.6.4
 3526  /Users/igor/.pyenv/versions/3.6.4/bin/python /Users/igor/.vscode/extensions/ms-python.python-2019.8.30787/pythonFiles/ptvsd_launcher.py --default --client --host localhost --port 49910 -m flask run --no-debugger --no-reload 
 3527  cd /Users/igor/dev/applications/app-templates/python-video/stream-video-browser ; env PYTHONIOENCODING=UTF-8 PYTHONUNBUFFERED=1 /Users/igor/.pyenv/versions/3.6.4/bin/python /Users/igor/.vscode/extensions/ms-python.python-2019.8.30787/pythonFiles/ptvsd_launcher.py --default --client --host localhost --port 49956 /Users/igor/dev/applications/app-templates/python-video/stream-video-browser/webstreaming.py 
 3528  cd /Users/igor/dev/applications/app-templates/python-video/stream-video-browser ; env FLASK_APP=app.py FLASK_ENV=development FLASK_DEBUG=0 PYTHONIOENCODING=UTF-8 PYTHONUNBUFFERED=1 /Users/igor/.pyenv/versions/3.6.4/bin/python /Users/igor/.vscode/extensions/ms-python.python-2019.8.30787/pythonFiles/ptvsd_launcher.py --default --client --host localhost --port 49962 -m flask run --no-debugger --no-reload 
 3529  cd /Users/igor/dev/applications/app-templates/python-video/stream-video-browser ; env FLASK_APP=webstreaming.py FLASK_ENV=development FLASK_DEBUG=0 PYTHONIOENCODING=UTF-8 PYTHONUNBUFFERED=1 /Users/igor/.pyenv/versions/3.6.4/bin/python /Users/igor/.vscode/extensions/ms-python.python-2019.8.30787/pythonFiles/ptvsd_launcher.py --default --client --host localhost --port 49968 -m flask run --no-debugger --no-reload 
 3530  cd /Users/igor/dev/applications/app-templates/python-video/stream-video-browser ; env FLASK_APP=webstreaming.py PYTHONIOENCODING=UTF-8 PYTHONUNBUFFERED=1 /Users/igor/.pyenv/versions/3.6.4/bin/python /Users/igor/.vscode/extensions/ms-python.python-2019.8.30787/pythonFiles/ptvsd_launcher.py --default --client --host localhost --port 50012 -m flask run "--ip 127.0.0.1" "--port 8000" 
 3531  cd /Users/igor/dev/applications/app-templates/python-video/stream-video-browser ; env FLASK_APP=webstreaming.py PYTHONIOENCODING=UTF-8 PYTHONUNBUFFERED=1 /Users/igor/.pyenv/versions/3.6.4/bin/python /Users/igor/.vscode/extensions/ms-python.python-2019.8.30787/pythonFiles/ptvsd_launcher.py --default --client --host localhost --port 50074 -m flask run --ip 127.0.0.1 --port 8000 
 3532  cd /Users/igor/dev/applications/app-templates/python-video/stream-video-browser ; env FLASK_APP=webstreaming.py PYTHONIOENCODING=UTF-8 PYTHONUNBUFFERED=1 /Users/igor/.pyenv/versions/3.6.4/bin/python /Users/igor/.vscode/extensions/ms-python.python-2019.8.30787/pythonFiles/ptvsd_launcher.py --default --client --host localhost --port 50083 -m flask run --ip 127.0.0.1 --port 8000 
 3533  cd /Users/igor/dev/applications/app-templates/python-video/stream-video-browser ; env PYTHONIOENCODING=UTF-8 PYTHONUNBUFFERED=1 /Users/igor/.pyenv/versions/3.6.4/bin/python /Users/igor/.vscode/extensions/ms-python.python-2019.8.30787/pythonFiles/ptvsd_launcher.py --default --client --host localhost --port 50091 /Users/igor/dev/applications/app-templates/python-video/stream-video-browser/webstreaming.py 
 3534  cd /Users/igor/dev/applications/app-templates/python-video/stream-video-browser ; env PYTHONIOENCODING=UTF-8 PYTHONUNBUFFERED=1 /Users/igor/.pyenv/versions/3.6.4/bin/python /Users/igor/.vscode/extensions/ms-python.python-2019.8.30787/pythonFiles/ptvsd_launcher.py --default --client --host localhost --port 50123 /Users/igor/dev/applications/app-templates/python-video/stream-video-browser/.vscode/launch.json 
 3535  cd /Users/igor/dev/applications/app-templates/python-video/stream-video-browser ; env PYTHONIOENCODING=UTF-8 PYTHONUNBUFFERED=1 /Users/igor/.pyenv/versions/3.6.4/bin/python /Users/igor/.vscode/extensions/ms-python.python-2019.8.30787/pythonFiles/ptvsd_launcher.py --default --client --host localhost --port 50261 /Users/igor/dev/applications/app-templates/python-video/stream-video-browser/.vscode/launch.json 
 3536  cd /Users/igor/dev/applications/app-templates/python-video/stream-video-browser ; env PYTHONIOENCODING=UTF-8 PYTHONUNBUFFERED=1 /Users/igor/.pyenv/versions/3.6.4/bin/python /Users/igor/.vscode/extensions/ms-python.python-2019.8.30787/pythonFiles/ptvsd_launcher.py --default --client --host localhost --port 50265 /Users/igor/dev/applications/app-templates/python-video/stream-video-browser/.vscode/launch.json 
 3537  cd /Users/igor/dev/applications/app-templates/python-video/stream-video-browser ; env FLASK_APP=webstreaming.py FLASK_ENV=development FLASK_DEBUG=0 PYTHONIOENCODING=UTF-8 PYTHONUNBUFFERED=1 /Users/igor/.pyenv/versions/3.6.4/bin/python /Users/igor/.vscode/extensions/ms-python.python-2019.8.30787/pythonFiles/ptvsd_launcher.py --default --client --host localhost --port 50274 -m flask run --no-debugger --no-reload 
 3538  pyenv shell 3.6.4
 3539  /Users/igor/.pyenv/versions/3.6.4/bin/python /Users/igor/.vscode/extensions/ms-python.python-2019.9.34911/pythonFiles/ptvsd_launcher.py --default --client --host localhost --port 50341 -m flask run --no-debugger --no-reload 
 3540  cd /Users/igor/dev/applications/app-templates/python-video/stream-video-browser ; env FLASK_APP=webstreaming.py FLASK_ENV=development FLASK_DEBUG=0 TMPDIR=/var/folders/bm/wby56bk53dj4fbbtrvqsslqw0000gn/T/ __CF_USER_TEXT_ENCODING=0x1F5:0x0:0x0 SHELL=/bin/zsh HOME=/Users/igor Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.DaIBLPsZbX/Render SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.iP8vIb8Upq/Listeners LOGNAME=igor XPC_SERVICE_NAME=com.microsoft.VSCode.5952 USER=igor XPC_FLAGS=0x0 'VSCODE_NLS_CONFIG={"locale":"en-us","availableLanguages":{},"_languagePackSupport":true}' 'VSCODE_NODE_CACHED_DATA_DIR=/Users/igor/Library/Application Support/Code/CachedData/b37e54c98e1a74ba89e03073e5a3761284e3ffb0' 'VSCODE_LOGS=/Users/igor/Library/Application Support/Code/logs/20190930T100819' 'VSCODE_IPC_HOOK=/Users/igor/Library/Application Support/Code/1.38.1-main.sock' VSCODE_PID=83050 AWS_HOME=/Users/igor/.aws LC_CTYPE= LESS=-R LSCOLORS=Gxfxcxdxbxegedabagacad NVM_BIN=/Users/igor/.nvm/versions/node/v10.13.0/bin NVM_CD_FLAGS=-q NVM_DIR=/Users/igor/.nvm OLDPWD=/ PAGER=less PWD=/ PYENV_ROOT=/Users/igor/.pyenv PYENV_SHELL=zsh SHLVL=0 ZSH=/Users/igor/.oh-my-zsh '_=/Applications/Visual Studio Code.app/Contents/MacOS/Electron' AMD_ENTRYPOINT=vs/workbench/services/extensions/node/extensionHostProcess PIPE_LOGGING=true VERBOSE_LOGGING=true VSCODE_IPC_HOOK_EXTHOST=/var/folders/bm/wby56bk53dj4fbbtrvqsslqw0000gn/T/vscode-ipc-6d648d60-2fad-4ed4-a2c2-832c5f1c6a16.sock VSCODE_HANDLES_UNCAUGHT_ERRORS=true VSCODE_LOG_STACK=false VSCODE_PREVENT_FOREIGN_INSPECT=true ELECTRON_RUN_AS_NODE=1 APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL=true PATH=/Users/igor/.pyenv/shims:/Users/igor/.pyenv/bin:/Users/igor/.nvm/versions/node/v10.13.0/bin:/Users/igor/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/lib:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/brew:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/common-aliases:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/git:/Users/igor/.antigen/bundles/zsh-users/zsh-syntax-highlighting:/Users/igor/.antigen/bundles/zsh-users/zsh-completions:/Users/igor/.antigen/bundles/zsh-users/zsh-autosuggestions:/Users/igor/.antigen/bundles/mafredri/zsh-async:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/pip:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/command-not-found PYTHONIOENCODING=UTF-8 PYTHONUNBUFFERED=1 /Users/igor/.pyenv/versions/3.6.4/bin/python /Users/igor/.vscode/extensions/ms-python.python-2019.9.34911/pythonFiles/ptvsd_launcher.py --default --client --host localhost --port 50368 -m flask run --ip 127.0.0.1 --port 8000 
 3541  cd /Users/igor/dev/applications/app-templates/python-video/stream-video-browser ; env FLASK_APP=webstreaming.py FLASK_ENV=development FLASK_DEBUG=0 TMPDIR=/var/folders/bm/wby56bk53dj4fbbtrvqsslqw0000gn/T/ __CF_USER_TEXT_ENCODING=0x1F5:0x0:0x0 SHELL=/bin/zsh HOME=/Users/igor Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.DaIBLPsZbX/Render SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.iP8vIb8Upq/Listeners LOGNAME=igor XPC_SERVICE_NAME=com.microsoft.VSCode.5952 USER=igor XPC_FLAGS=0x0 'VSCODE_NLS_CONFIG={"locale":"en-us","availableLanguages":{},"_languagePackSupport":true}' 'VSCODE_NODE_CACHED_DATA_DIR=/Users/igor/Library/Application Support/Code/CachedData/b37e54c98e1a74ba89e03073e5a3761284e3ffb0' 'VSCODE_LOGS=/Users/igor/Library/Application Support/Code/logs/20190930T100819' 'VSCODE_IPC_HOOK=/Users/igor/Library/Application Support/Code/1.38.1-main.sock' VSCODE_PID=83050 AWS_HOME=/Users/igor/.aws LC_CTYPE= LESS=-R LSCOLORS=Gxfxcxdxbxegedabagacad NVM_BIN=/Users/igor/.nvm/versions/node/v10.13.0/bin NVM_CD_FLAGS=-q NVM_DIR=/Users/igor/.nvm OLDPWD=/ PAGER=less PWD=/ PYENV_ROOT=/Users/igor/.pyenv PYENV_SHELL=zsh SHLVL=0 ZSH=/Users/igor/.oh-my-zsh '_=/Applications/Visual Studio Code.app/Contents/MacOS/Electron' AMD_ENTRYPOINT=vs/workbench/services/extensions/node/extensionHostProcess PIPE_LOGGING=true VERBOSE_LOGGING=true VSCODE_IPC_HOOK_EXTHOST=/var/folders/bm/wby56bk53dj4fbbtrvqsslqw0000gn/T/vscode-ipc-6d648d60-2fad-4ed4-a2c2-832c5f1c6a16.sock VSCODE_HANDLES_UNCAUGHT_ERRORS=true VSCODE_LOG_STACK=false VSCODE_PREVENT_FOREIGN_INSPECT=true ELECTRON_RUN_AS_NODE=1 APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL=true PATH=/Users/igor/.pyenv/shims:/Users/igor/.pyenv/bin:/Users/igor/.nvm/versions/node/v10.13.0/bin:/Users/igor/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/lib:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/brew:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/common-aliases:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/git:/Users/igor/.antigen/bundles/zsh-users/zsh-syntax-highlighting:/Users/igor/.antigen/bundles/zsh-users/zsh-completions:/Users/igor/.antigen/bundles/zsh-users/zsh-autosuggestions:/Users/igor/.antigen/bundles/mafredri/zsh-async:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/pip:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/command-not-found PYTHONIOENCODING=UTF-8 PYTHONUNBUFFERED=1 /Users/igor/.pyenv/versions/3.6.4/bin/python /Users/igor/.vscode/extensions/ms-python.python-2019.9.34911/pythonFiles/ptvsd_launcher.py --default --client --host localhost --port 50373 -m flask --ip 127.0.0.1 --port 8000 
 3542  cd /Users/igor/dev/applications/app-templates/python-video/stream-video-browser ; env FLASK_APP=webstreaming.py FLASK_ENV=development FLASK_DEBUG=0 TMPDIR=/var/folders/bm/wby56bk53dj4fbbtrvqsslqw0000gn/T/ __CF_USER_TEXT_ENCODING=0x1F5:0x0:0x0 SHELL=/bin/zsh HOME=/Users/igor Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.DaIBLPsZbX/Render SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.iP8vIb8Upq/Listeners LOGNAME=igor XPC_SERVICE_NAME=com.microsoft.VSCode.5952 USER=igor XPC_FLAGS=0x0 'VSCODE_NLS_CONFIG={"locale":"en-us","availableLanguages":{},"_languagePackSupport":true}' 'VSCODE_NODE_CACHED_DATA_DIR=/Users/igor/Library/Application Support/Code/CachedData/b37e54c98e1a74ba89e03073e5a3761284e3ffb0' 'VSCODE_LOGS=/Users/igor/Library/Application Support/Code/logs/20190930T100819' 'VSCODE_IPC_HOOK=/Users/igor/Library/Application Support/Code/1.38.1-main.sock' VSCODE_PID=83050 AWS_HOME=/Users/igor/.aws LC_CTYPE= LESS=-R LSCOLORS=Gxfxcxdxbxegedabagacad NVM_BIN=/Users/igor/.nvm/versions/node/v10.13.0/bin NVM_CD_FLAGS=-q NVM_DIR=/Users/igor/.nvm OLDPWD=/ PAGER=less PWD=/ PYENV_ROOT=/Users/igor/.pyenv PYENV_SHELL=zsh SHLVL=0 ZSH=/Users/igor/.oh-my-zsh '_=/Applications/Visual Studio Code.app/Contents/MacOS/Electron' AMD_ENTRYPOINT=vs/workbench/services/extensions/node/extensionHostProcess PIPE_LOGGING=true VERBOSE_LOGGING=true VSCODE_IPC_HOOK_EXTHOST=/var/folders/bm/wby56bk53dj4fbbtrvqsslqw0000gn/T/vscode-ipc-6d648d60-2fad-4ed4-a2c2-832c5f1c6a16.sock VSCODE_HANDLES_UNCAUGHT_ERRORS=true VSCODE_LOG_STACK=false VSCODE_PREVENT_FOREIGN_INSPECT=true ELECTRON_RUN_AS_NODE=1 APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL=true PATH=/Users/igor/.pyenv/shims:/Users/igor/.pyenv/bin:/Users/igor/.nvm/versions/node/v10.13.0/bin:/Users/igor/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/lib:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/brew:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/common-aliases:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/git:/Users/igor/.antigen/bundles/zsh-users/zsh-syntax-highlighting:/Users/igor/.antigen/bundles/zsh-users/zsh-completions:/Users/igor/.antigen/bundles/zsh-users/zsh-autosuggestions:/Users/igor/.antigen/bundles/mafredri/zsh-async:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/pip:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/command-not-found PYTHONIOENCODING=UTF-8 PYTHONUNBUFFERED=1 /Users/igor/.pyenv/versions/3.6.4/bin/python /Users/igor/.vscode/extensions/ms-python.python-2019.9.34911/pythonFiles/ptvsd_launcher.py --default --client --host localhost --port 50384 -m flask run 
 3543  python webstreaming.py --ip 127.0.0.1 --port 8000
 3544  cd /Users/igor/dev/applications/app-templates/python-video/stream-video-browser ; env FLASK_APP=webstreaming.py FLASK_ENV=development FLASK_DEBUG=0 TMPDIR=/var/folders/bm/wby56bk53dj4fbbtrvqsslqw0000gn/T/ __CF_USER_TEXT_ENCODING=0x1F5:0x0:0x0 SHELL=/bin/zsh HOME=/Users/igor Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.DaIBLPsZbX/Render SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.iP8vIb8Upq/Listeners LOGNAME=igor XPC_SERVICE_NAME=com.microsoft.VSCode.5952 USER=igor XPC_FLAGS=0x0 'VSCODE_NLS_CONFIG={"locale":"en-us","availableLanguages":{},"_languagePackSupport":true}' 'VSCODE_NODE_CACHED_DATA_DIR=/Users/igor/Library/Application Support/Code/CachedData/b37e54c98e1a74ba89e03073e5a3761284e3ffb0' 'VSCODE_LOGS=/Users/igor/Library/Application Support/Code/logs/20190930T100819' 'VSCODE_IPC_HOOK=/Users/igor/Library/Application Support/Code/1.38.1-main.sock' VSCODE_PID=83050 AWS_HOME=/Users/igor/.aws LC_CTYPE= LESS=-R LSCOLORS=Gxfxcxdxbxegedabagacad NVM_BIN=/Users/igor/.nvm/versions/node/v10.13.0/bin NVM_CD_FLAGS=-q NVM_DIR=/Users/igor/.nvm OLDPWD=/ PAGER=less PWD=/ PYENV_ROOT=/Users/igor/.pyenv PYENV_SHELL=zsh SHLVL=0 ZSH=/Users/igor/.oh-my-zsh '_=/Applications/Visual Studio Code.app/Contents/MacOS/Electron' AMD_ENTRYPOINT=vs/workbench/services/extensions/node/extensionHostProcess PIPE_LOGGING=true VERBOSE_LOGGING=true VSCODE_IPC_HOOK_EXTHOST=/var/folders/bm/wby56bk53dj4fbbtrvqsslqw0000gn/T/vscode-ipc-6d648d60-2fad-4ed4-a2c2-832c5f1c6a16.sock VSCODE_HANDLES_UNCAUGHT_ERRORS=true VSCODE_LOG_STACK=false VSCODE_PREVENT_FOREIGN_INSPECT=true ELECTRON_RUN_AS_NODE=1 APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL=true PATH=/Users/igor/.pyenv/shims:/Users/igor/.pyenv/bin:/Users/igor/.nvm/versions/node/v10.13.0/bin:/Users/igor/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/lib:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/brew:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/common-aliases:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/git:/Users/igor/.antigen/bundles/zsh-users/zsh-syntax-highlighting:/Users/igor/.antigen/bundles/zsh-users/zsh-completions:/Users/igor/.antigen/bundles/zsh-users/zsh-autosuggestions:/Users/igor/.antigen/bundles/mafredri/zsh-async:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/pip:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/command-not-found PYTHONIOENCODING=UTF-8 PYTHONUNBUFFERED=1 /Users/igor/.pyenv/versions/3.6.4/bin/python /Users/igor/.vscode/extensions/ms-python.python-2019.9.34911/pythonFiles/ptvsd_launcher.py --default --nodebug --client --host localhost --port 52547 -m flask run 
 3545  pyenv shell 3.6.4
 3546  /Users/igor/.pyenv/versions/3.6.4/bin/python /Users/igor/dev/applications/app-templates/python-video/stream-video-browser/webstreaming.py
 3547  cd /Users/igor/dev/applications/app-templates/python-video/stream-video-browser ; env FLASK_APP=webstreaming.py FLASK_ENV=development FLASK_DEBUG=0 TMPDIR=/var/folders/bm/wby56bk53dj4fbbtrvqsslqw0000gn/T/ __CF_USER_TEXT_ENCODING=0x1F5:0x0:0x0 SHELL=/bin/zsh HOME=/Users/igor Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.DaIBLPsZbX/Render SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.iP8vIb8Upq/Listeners LOGNAME=igor XPC_SERVICE_NAME=com.microsoft.VSCode.5952 USER=igor XPC_FLAGS=0x0 'VSCODE_NLS_CONFIG={"locale":"en-us","availableLanguages":{},"_languagePackSupport":true}' 'VSCODE_NODE_CACHED_DATA_DIR=/Users/igor/Library/Application Support/Code/CachedData/b37e54c98e1a74ba89e03073e5a3761284e3ffb0' 'VSCODE_LOGS=/Users/igor/Library/Application Support/Code/logs/20190930T100819' 'VSCODE_IPC_HOOK=/Users/igor/Library/Application Support/Code/1.38.1-main.sock' VSCODE_PID=83050 AWS_HOME=/Users/igor/.aws LC_CTYPE= LESS=-R LSCOLORS=Gxfxcxdxbxegedabagacad NVM_BIN=/Users/igor/.nvm/versions/node/v10.13.0/bin NVM_CD_FLAGS=-q NVM_DIR=/Users/igor/.nvm OLDPWD=/ PAGER=less PWD=/ PYENV_ROOT=/Users/igor/.pyenv PYENV_SHELL=zsh SHLVL=0 ZSH=/Users/igor/.oh-my-zsh '_=/Applications/Visual Studio Code.app/Contents/MacOS/Electron' AMD_ENTRYPOINT=vs/workbench/services/extensions/node/extensionHostProcess PIPE_LOGGING=true VERBOSE_LOGGING=true VSCODE_IPC_HOOK_EXTHOST=/var/folders/bm/wby56bk53dj4fbbtrvqsslqw0000gn/T/vscode-ipc-6d648d60-2fad-4ed4-a2c2-832c5f1c6a16.sock VSCODE_HANDLES_UNCAUGHT_ERRORS=true VSCODE_LOG_STACK=false VSCODE_PREVENT_FOREIGN_INSPECT=true ELECTRON_RUN_AS_NODE=1 APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL=true PATH=/Users/igor/.pyenv/shims:/Users/igor/.pyenv/bin:/Users/igor/.nvm/versions/node/v10.13.0/bin:/Users/igor/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/lib:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/brew:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/common-aliases:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/git:/Users/igor/.antigen/bundles/zsh-users/zsh-syntax-highlighting:/Users/igor/.antigen/bundles/zsh-users/zsh-completions:/Users/igor/.antigen/bundles/zsh-users/zsh-autosuggestions:/Users/igor/.antigen/bundles/mafredri/zsh-async:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/pip:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/command-not-found PYTHONIOENCODING=UTF-8 PYTHONUNBUFFERED=1 /Users/igor/.pyenv/versions/3.6.4/bin/python /Users/igor/.vscode/extensions/ms-python.python-2019.9.34911/pythonFiles/ptvsd_launcher.py --default --client --host localhost --port 52599 -m flask run 
 3548  history
 3549  /Users/igor/.pyenv/versions/3.6.4/bin/python /Users/igor/dev/applications/app-templates/python-video/stream-video-browser/webstreaming.py
 3550  pyenv shell 3.6.4
 3551  /Users/igor/.pyenv/versions/3.6.4/bin/python -m pip install -U jupyter
 3552  cd "/Users/igor/dev/applications/app-templates/python-video/stream-video-browser"
 3553  pyenv shell 3.6.4
 3554  exit
 3555  pyenv shell 3.6.4
 3556  cd /Users/igor/dev/applications/app-templates/python-video/stream-video-browser ; env FLASK_APP=webstreaming.py FLASK_ENV=development FLASK_DEBUG=0 TMPDIR=/var/folders/bm/wby56bk53dj4fbbtrvqsslqw0000gn/T/ __CF_USER_TEXT_ENCODING=0x1F5:0x0:0x0 SHELL=/bin/zsh HOME=/Users/igor Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.DaIBLPsZbX/Render SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.iP8vIb8Upq/Listeners LOGNAME=igor XPC_SERVICE_NAME=com.microsoft.VSCode.5952 USER=igor XPC_FLAGS=0x0 'VSCODE_NLS_CONFIG={"locale":"en-us","availableLanguages":{},"_languagePackSupport":true}' 'VSCODE_NODE_CACHED_DATA_DIR=/Users/igor/Library/Application Support/Code/CachedData/b37e54c98e1a74ba89e03073e5a3761284e3ffb0' 'VSCODE_LOGS=/Users/igor/Library/Application Support/Code/logs/20190930T100819' 'VSCODE_IPC_HOOK=/Users/igor/Library/Application Support/Code/1.38.1-main.sock' VSCODE_PID=83050 AWS_HOME=/Users/igor/.aws LC_CTYPE= LESS=-R LSCOLORS=Gxfxcxdxbxegedabagacad NVM_BIN=/Users/igor/.nvm/versions/node/v10.13.0/bin NVM_CD_FLAGS=-q NVM_DIR=/Users/igor/.nvm OLDPWD=/ PAGER=less PWD=/ PYENV_ROOT=/Users/igor/.pyenv PYENV_SHELL=zsh SHLVL=0 ZSH=/Users/igor/.oh-my-zsh '_=/Applications/Visual Studio Code.app/Contents/MacOS/Electron' AMD_ENTRYPOINT=vs/workbench/services/extensions/node/extensionHostProcess PIPE_LOGGING=true VERBOSE_LOGGING=true VSCODE_IPC_HOOK_EXTHOST=/var/folders/bm/wby56bk53dj4fbbtrvqsslqw0000gn/T/vscode-ipc-6d648d60-2fad-4ed4-a2c2-832c5f1c6a16.sock VSCODE_HANDLES_UNCAUGHT_ERRORS=true VSCODE_LOG_STACK=false VSCODE_PREVENT_FOREIGN_INSPECT=true ELECTRON_RUN_AS_NODE=1 APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL=true PATH=/Users/igor/.pyenv/shims:/Users/igor/.pyenv/bin:/Users/igor/.nvm/versions/node/v10.13.0/bin:/Users/igor/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/lib:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/brew:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/common-aliases:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/git:/Users/igor/.antigen/bundles/zsh-users/zsh-syntax-highlighting:/Users/igor/.antigen/bundles/zsh-users/zsh-completions:/Users/igor/.antigen/bundles/zsh-users/zsh-autosuggestions:/Users/igor/.antigen/bundles/mafredri/zsh-async:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/pip:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/command-not-found PYTHONIOENCODING=UTF-8 PYTHONUNBUFFERED=1 /Users/igor/.pyenv/versions/3.6.4/bin/python /Users/igor/.vscode/extensions/ms-python.python-2019.9.34911/pythonFiles/ptvsd_launcher.py --default --client --host localhost --port 54827 -m flask run 
 3557  cd /Users/igor/dev/applications/app-templates/python-video/stream-video-browser ; env FLASK_APP=webstreaming.py TMPDIR=/var/folders/bm/wby56bk53dj4fbbtrvqsslqw0000gn/T/ __CF_USER_TEXT_ENCODING=0x1F5:0x0:0x0 SHELL=/bin/zsh HOME=/Users/igor Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.DaIBLPsZbX/Render SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.iP8vIb8Upq/Listeners LOGNAME=igor XPC_SERVICE_NAME=com.microsoft.VSCode.5952 USER=igor XPC_FLAGS=0x0 'VSCODE_NLS_CONFIG={"locale":"en-us","availableLanguages":{},"_languagePackSupport":true}' 'VSCODE_NODE_CACHED_DATA_DIR=/Users/igor/Library/Application Support/Code/CachedData/b37e54c98e1a74ba89e03073e5a3761284e3ffb0' 'VSCODE_LOGS=/Users/igor/Library/Application Support/Code/logs/20190930T100819' 'VSCODE_IPC_HOOK=/Users/igor/Library/Application Support/Code/1.38.1-main.sock' VSCODE_PID=83050 AWS_HOME=/Users/igor/.aws LC_CTYPE= LESS=-R LSCOLORS=Gxfxcxdxbxegedabagacad NVM_BIN=/Users/igor/.nvm/versions/node/v10.13.0/bin NVM_CD_FLAGS=-q NVM_DIR=/Users/igor/.nvm OLDPWD=/ PAGER=less PWD=/ PYENV_ROOT=/Users/igor/.pyenv PYENV_SHELL=zsh SHLVL=0 ZSH=/Users/igor/.oh-my-zsh '_=/Applications/Visual Studio Code.app/Contents/MacOS/Electron' AMD_ENTRYPOINT=vs/workbench/services/extensions/node/extensionHostProcess PIPE_LOGGING=true VERBOSE_LOGGING=true VSCODE_IPC_HOOK_EXTHOST=/var/folders/bm/wby56bk53dj4fbbtrvqsslqw0000gn/T/vscode-ipc-6d648d60-2fad-4ed4-a2c2-832c5f1c6a16.sock VSCODE_HANDLES_UNCAUGHT_ERRORS=true VSCODE_LOG_STACK=false VSCODE_PREVENT_FOREIGN_INSPECT=true ELECTRON_RUN_AS_NODE=1 APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL=true PATH=/Users/igor/.pyenv/shims:/Users/igor/.pyenv/bin:/Users/igor/.nvm/versions/node/v10.13.0/bin:/Users/igor/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/lib:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/brew:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/common-aliases:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/git:/Users/igor/.antigen/bundles/zsh-users/zsh-syntax-highlighting:/Users/igor/.antigen/bundles/zsh-users/zsh-completions:/Users/igor/.antigen/bundles/zsh-users/zsh-autosuggestions:/Users/igor/.antigen/bundles/mafredri/zsh-async:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/pip:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/command-not-found PYTHONIOENCODING=UTF-8 PYTHONUNBUFFERED=1 /Users/igor/.pyenv/versions/3.6.4/bin/python /Users/igor/.vscode/extensions/ms-python.python-2019.9.34911/pythonFiles/ptvsd_launcher.py --default --client --host localhost --port 54875 -m flask run --no-debugger --no-reload 
 3558  cd /Users/igor/dev/applications/app-templates/python-video/stream-video-browser ; env FLASK_APP=webstreaming.py FLASK_ENV=development FLASK_DEBUG=1 TMPDIR=/var/folders/bm/wby56bk53dj4fbbtrvqsslqw0000gn/T/ __CF_USER_TEXT_ENCODING=0x1F5:0x0:0x0 SHELL=/bin/zsh HOME=/Users/igor Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.DaIBLPsZbX/Render SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.iP8vIb8Upq/Listeners LOGNAME=igor XPC_SERVICE_NAME=com.microsoft.VSCode.5952 USER=igor XPC_FLAGS=0x0 'VSCODE_NLS_CONFIG={"locale":"en-us","availableLanguages":{},"_languagePackSupport":true}' 'VSCODE_NODE_CACHED_DATA_DIR=/Users/igor/Library/Application Support/Code/CachedData/b37e54c98e1a74ba89e03073e5a3761284e3ffb0' 'VSCODE_LOGS=/Users/igor/Library/Application Support/Code/logs/20190930T100819' 'VSCODE_IPC_HOOK=/Users/igor/Library/Application Support/Code/1.38.1-main.sock' VSCODE_PID=83050 AWS_HOME=/Users/igor/.aws LC_CTYPE= LESS=-R LSCOLORS=Gxfxcxdxbxegedabagacad NVM_BIN=/Users/igor/.nvm/versions/node/v10.13.0/bin NVM_CD_FLAGS=-q NVM_DIR=/Users/igor/.nvm OLDPWD=/ PAGER=less PWD=/ PYENV_ROOT=/Users/igor/.pyenv PYENV_SHELL=zsh SHLVL=0 ZSH=/Users/igor/.oh-my-zsh '_=/Applications/Visual Studio Code.app/Contents/MacOS/Electron' AMD_ENTRYPOINT=vs/workbench/services/extensions/node/extensionHostProcess PIPE_LOGGING=true VERBOSE_LOGGING=true VSCODE_IPC_HOOK_EXTHOST=/var/folders/bm/wby56bk53dj4fbbtrvqsslqw0000gn/T/vscode-ipc-6d648d60-2fad-4ed4-a2c2-832c5f1c6a16.sock VSCODE_HANDLES_UNCAUGHT_ERRORS=true VSCODE_LOG_STACK=false VSCODE_PREVENT_FOREIGN_INSPECT=true ELECTRON_RUN_AS_NODE=1 APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL=true PATH=/Users/igor/.pyenv/shims:/Users/igor/.pyenv/bin:/Users/igor/.nvm/versions/node/v10.13.0/bin:/Users/igor/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/lib:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/brew:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/common-aliases:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/git:/Users/igor/.antigen/bundles/zsh-users/zsh-syntax-highlighting:/Users/igor/.antigen/bundles/zsh-users/zsh-completions:/Users/igor/.antigen/bundles/zsh-users/zsh-autosuggestions:/Users/igor/.antigen/bundles/mafredri/zsh-async:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/pip:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/command-not-found PYTHONIOENCODING=UTF-8 PYTHONUNBUFFERED=1 /Users/igor/.pyenv/versions/3.6.4/bin/python /Users/igor/.vscode/extensions/ms-python.python-2019.9.34911/pythonFiles/ptvsd_launcher.py --default --client --host localhost --port 54930 -m flask run --no-debugger --no-reload 
 3559  cd /Users/igor/dev/applications/app-templates/python-video/stream-video-browser ; env FLASK_APP=webstreaming.py FLASK_ENV=development FLASK_DEBUG=1 TMPDIR=/var/folders/bm/wby56bk53dj4fbbtrvqsslqw0000gn/T/ __CF_USER_TEXT_ENCODING=0x1F5:0x0:0x0 SHELL=/bin/zsh HOME=/Users/igor Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.DaIBLPsZbX/Render SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.iP8vIb8Upq/Listeners LOGNAME=igor XPC_SERVICE_NAME=com.microsoft.VSCode.5952 USER=igor XPC_FLAGS=0x0 'VSCODE_NLS_CONFIG={"locale":"en-us","availableLanguages":{},"_languagePackSupport":true}' 'VSCODE_NODE_CACHED_DATA_DIR=/Users/igor/Library/Application Support/Code/CachedData/b37e54c98e1a74ba89e03073e5a3761284e3ffb0' 'VSCODE_LOGS=/Users/igor/Library/Application Support/Code/logs/20190930T100819' 'VSCODE_IPC_HOOK=/Users/igor/Library/Application Support/Code/1.38.1-main.sock' VSCODE_PID=83050 AWS_HOME=/Users/igor/.aws LC_CTYPE= LESS=-R LSCOLORS=Gxfxcxdxbxegedabagacad NVM_BIN=/Users/igor/.nvm/versions/node/v10.13.0/bin NVM_CD_FLAGS=-q NVM_DIR=/Users/igor/.nvm OLDPWD=/ PAGER=less PWD=/ PYENV_ROOT=/Users/igor/.pyenv PYENV_SHELL=zsh SHLVL=0 ZSH=/Users/igor/.oh-my-zsh '_=/Applications/Visual Studio Code.app/Contents/MacOS/Electron' AMD_ENTRYPOINT=vs/workbench/services/extensions/node/extensionHostProcess PIPE_LOGGING=true VERBOSE_LOGGING=true VSCODE_IPC_HOOK_EXTHOST=/var/folders/bm/wby56bk53dj4fbbtrvqsslqw0000gn/T/vscode-ipc-6d648d60-2fad-4ed4-a2c2-832c5f1c6a16.sock VSCODE_HANDLES_UNCAUGHT_ERRORS=true VSCODE_LOG_STACK=false VSCODE_PREVENT_FOREIGN_INSPECT=true ELECTRON_RUN_AS_NODE=1 APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL=true PATH=/Users/igor/.pyenv/shims:/Users/igor/.pyenv/bin:/Users/igor/.nvm/versions/node/v10.13.0/bin:/Users/igor/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/lib:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/brew:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/common-aliases:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/git:/Users/igor/.antigen/bundles/zsh-users/zsh-syntax-highlighting:/Users/igor/.antigen/bundles/zsh-users/zsh-completions:/Users/igor/.antigen/bundles/zsh-users/zsh-autosuggestions:/Users/igor/.antigen/bundles/mafredri/zsh-async:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/pip:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/command-not-found PYTHONIOENCODING=UTF-8 PYTHONUNBUFFERED=1 /Users/igor/.pyenv/versions/3.6.4/bin/python /Users/igor/.vscode/extensions/ms-python.python-2019.9.34911/pythonFiles/ptvsd_launcher.py --default --client --host localhost --port 54938 -m flask run 
 3560  cd /Users/igor/dev/applications/app-templates/python-video/stream-video-browser ; env FLASK_APP=webstreaming.py FLASK_ENV=development FLASK_DEBUG=1 TMPDIR=/var/folders/bm/wby56bk53dj4fbbtrvqsslqw0000gn/T/ __CF_USER_TEXT_ENCODING=0x1F5:0x0:0x0 SHELL=/bin/zsh HOME=/Users/igor Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.DaIBLPsZbX/Render SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.iP8vIb8Upq/Listeners LOGNAME=igor XPC_SERVICE_NAME=com.microsoft.VSCode.5952 USER=igor XPC_FLAGS=0x0 'VSCODE_NLS_CONFIG={"locale":"en-us","availableLanguages":{},"_languagePackSupport":true}' 'VSCODE_NODE_CACHED_DATA_DIR=/Users/igor/Library/Application Support/Code/CachedData/b37e54c98e1a74ba89e03073e5a3761284e3ffb0' 'VSCODE_LOGS=/Users/igor/Library/Application Support/Code/logs/20190930T100819' 'VSCODE_IPC_HOOK=/Users/igor/Library/Application Support/Code/1.38.1-main.sock' VSCODE_PID=83050 AWS_HOME=/Users/igor/.aws LC_CTYPE= LESS=-R LSCOLORS=Gxfxcxdxbxegedabagacad NVM_BIN=/Users/igor/.nvm/versions/node/v10.13.0/bin NVM_CD_FLAGS=-q NVM_DIR=/Users/igor/.nvm OLDPWD=/ PAGER=less PWD=/ PYENV_ROOT=/Users/igor/.pyenv PYENV_SHELL=zsh SHLVL=0 ZSH=/Users/igor/.oh-my-zsh '_=/Applications/Visual Studio Code.app/Contents/MacOS/Electron' AMD_ENTRYPOINT=vs/workbench/services/extensions/node/extensionHostProcess PIPE_LOGGING=true VERBOSE_LOGGING=true VSCODE_IPC_HOOK_EXTHOST=/var/folders/bm/wby56bk53dj4fbbtrvqsslqw0000gn/T/vscode-ipc-6d648d60-2fad-4ed4-a2c2-832c5f1c6a16.sock VSCODE_HANDLES_UNCAUGHT_ERRORS=true VSCODE_LOG_STACK=false VSCODE_PREVENT_FOREIGN_INSPECT=true ELECTRON_RUN_AS_NODE=1 APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL=true PATH=/Users/igor/.pyenv/shims:/Users/igor/.pyenv/bin:/Users/igor/.nvm/versions/node/v10.13.0/bin:/Users/igor/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/lib:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/brew:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/common-aliases:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/git:/Users/igor/.antigen/bundles/zsh-users/zsh-syntax-highlighting:/Users/igor/.antigen/bundles/zsh-users/zsh-completions:/Users/igor/.antigen/bundles/zsh-users/zsh-autosuggestions:/Users/igor/.antigen/bundles/mafredri/zsh-async:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/pip:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/command-not-found PYTHONIOENCODING=UTF-8 PYTHONUNBUFFERED=1 /Users/igor/.pyenv/versions/3.6.4/bin/python /Users/igor/.vscode/extensions/ms-python.python-2019.9.34911/pythonFiles/ptvsd_launcher.py --default --client --host localhost --port 54951 -m flask run 
 3561  cd /Users/igor/dev/applications/app-templates/python-video/stream-video-browser ; env FLASK_APP=webstreaming.py FLASK_ENV=development FLASK_DEBUG=1 TMPDIR=/var/folders/bm/wby56bk53dj4fbbtrvqsslqw0000gn/T/ __CF_USER_TEXT_ENCODING=0x1F5:0x0:0x0 SHELL=/bin/zsh HOME=/Users/igor Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.DaIBLPsZbX/Render SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.iP8vIb8Upq/Listeners LOGNAME=igor XPC_SERVICE_NAME=com.microsoft.VSCode.5952 USER=igor XPC_FLAGS=0x0 'VSCODE_NLS_CONFIG={"locale":"en-us","availableLanguages":{},"_languagePackSupport":true}' 'VSCODE_NODE_CACHED_DATA_DIR=/Users/igor/Library/Application Support/Code/CachedData/b37e54c98e1a74ba89e03073e5a3761284e3ffb0' 'VSCODE_LOGS=/Users/igor/Library/Application Support/Code/logs/20190930T100819' 'VSCODE_IPC_HOOK=/Users/igor/Library/Application Support/Code/1.38.1-main.sock' VSCODE_PID=83050 AWS_HOME=/Users/igor/.aws LC_CTYPE= LESS=-R LSCOLORS=Gxfxcxdxbxegedabagacad NVM_BIN=/Users/igor/.nvm/versions/node/v10.13.0/bin NVM_CD_FLAGS=-q NVM_DIR=/Users/igor/.nvm OLDPWD=/ PAGER=less PWD=/ PYENV_ROOT=/Users/igor/.pyenv PYENV_SHELL=zsh SHLVL=0 ZSH=/Users/igor/.oh-my-zsh '_=/Applications/Visual Studio Code.app/Contents/MacOS/Electron' AMD_ENTRYPOINT=vs/workbench/services/extensions/node/extensionHostProcess PIPE_LOGGING=true VERBOSE_LOGGING=true VSCODE_IPC_HOOK_EXTHOST=/var/folders/bm/wby56bk53dj4fbbtrvqsslqw0000gn/T/vscode-ipc-6d648d60-2fad-4ed4-a2c2-832c5f1c6a16.sock VSCODE_HANDLES_UNCAUGHT_ERRORS=true VSCODE_LOG_STACK=false VSCODE_PREVENT_FOREIGN_INSPECT=true ELECTRON_RUN_AS_NODE=1 APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL=true PATH=/Users/igor/.pyenv/shims:/Users/igor/.pyenv/bin:/Users/igor/.nvm/versions/node/v10.13.0/bin:/Users/igor/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/lib:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/brew:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/common-aliases:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/git:/Users/igor/.antigen/bundles/zsh-users/zsh-syntax-highlighting:/Users/igor/.antigen/bundles/zsh-users/zsh-completions:/Users/igor/.antigen/bundles/zsh-users/zsh-autosuggestions:/Users/igor/.antigen/bundles/mafredri/zsh-async:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/pip:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/command-not-found PYTHONIOENCODING=UTF-8 PYTHONUNBUFFERED=1 /Users/igor/.pyenv/versions/3.6.4/bin/python /Users/igor/.vscode/extensions/ms-python.python-2019.9.34911/pythonFiles/ptvsd_launcher.py --default --client --host localhost --port 55011 -m flask run --no-debugger --no-reload 
 3562  cd /Users/igor/dev/applications/app-templates/python-video/stream-video-browser ; env FLASK_APP=webstreaming.py FLASK_ENV=development FLASK_DEBUG=1 TMPDIR=/var/folders/bm/wby56bk53dj4fbbtrvqsslqw0000gn/T/ __CF_USER_TEXT_ENCODING=0x1F5:0x0:0x0 SHELL=/bin/zsh HOME=/Users/igor Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.DaIBLPsZbX/Render SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.iP8vIb8Upq/Listeners LOGNAME=igor XPC_SERVICE_NAME=com.microsoft.VSCode.5952 USER=igor XPC_FLAGS=0x0 'VSCODE_NLS_CONFIG={"locale":"en-us","availableLanguages":{},"_languagePackSupport":true}' 'VSCODE_NODE_CACHED_DATA_DIR=/Users/igor/Library/Application Support/Code/CachedData/b37e54c98e1a74ba89e03073e5a3761284e3ffb0' 'VSCODE_LOGS=/Users/igor/Library/Application Support/Code/logs/20190930T100819' 'VSCODE_IPC_HOOK=/Users/igor/Library/Application Support/Code/1.38.1-main.sock' VSCODE_PID=83050 AWS_HOME=/Users/igor/.aws LC_CTYPE= LESS=-R LSCOLORS=Gxfxcxdxbxegedabagacad NVM_BIN=/Users/igor/.nvm/versions/node/v10.13.0/bin NVM_CD_FLAGS=-q NVM_DIR=/Users/igor/.nvm OLDPWD=/ PAGER=less PWD=/ PYENV_ROOT=/Users/igor/.pyenv PYENV_SHELL=zsh SHLVL=0 ZSH=/Users/igor/.oh-my-zsh '_=/Applications/Visual Studio Code.app/Contents/MacOS/Electron' AMD_ENTRYPOINT=vs/workbench/services/extensions/node/extensionHostProcess PIPE_LOGGING=true VERBOSE_LOGGING=true VSCODE_IPC_HOOK_EXTHOST=/var/folders/bm/wby56bk53dj4fbbtrvqsslqw0000gn/T/vscode-ipc-6d648d60-2fad-4ed4-a2c2-832c5f1c6a16.sock VSCODE_HANDLES_UNCAUGHT_ERRORS=true VSCODE_LOG_STACK=false VSCODE_PREVENT_FOREIGN_INSPECT=true ELECTRON_RUN_AS_NODE=1 APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL=true PATH=/Users/igor/.pyenv/shims:/Users/igor/.pyenv/bin:/Users/igor/.nvm/versions/node/v10.13.0/bin:/Users/igor/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/lib:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/brew:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/common-aliases:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/git:/Users/igor/.antigen/bundles/zsh-users/zsh-syntax-highlighting:/Users/igor/.antigen/bundles/zsh-users/zsh-completions:/Users/igor/.antigen/bundles/zsh-users/zsh-autosuggestions:/Users/igor/.antigen/bundles/mafredri/zsh-async:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/pip:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/command-not-found PYTHONIOENCODING=UTF-8 PYTHONUNBUFFERED=1 /usr/local/bin/python3 /Users/igor/.vscode/extensions/ms-python.python-2019.9.34911/pythonFiles/ptvsd_launcher.py --default --client --host localhost --port 55220 -m flask run --no-debugger --no-reload 
 3563  cd /Users/igor/dev/applications/app-templates/python-video/stream-video-browser ; env FLASK_APP=webstreaming.py FLASK_ENV=development FLASK_DEBUG=1 TMPDIR=/var/folders/bm/wby56bk53dj4fbbtrvqsslqw0000gn/T/ __CF_USER_TEXT_ENCODING=0x1F5:0x0:0x0 SHELL=/bin/zsh HOME=/Users/igor Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.DaIBLPsZbX/Render SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.iP8vIb8Upq/Listeners LOGNAME=igor XPC_SERVICE_NAME=com.microsoft.VSCode.5952 USER=igor XPC_FLAGS=0x0 'VSCODE_NLS_CONFIG={"locale":"en-us","availableLanguages":{},"_languagePackSupport":true}' 'VSCODE_NODE_CACHED_DATA_DIR=/Users/igor/Library/Application Support/Code/CachedData/b37e54c98e1a74ba89e03073e5a3761284e3ffb0' 'VSCODE_LOGS=/Users/igor/Library/Application Support/Code/logs/20190930T100819' 'VSCODE_IPC_HOOK=/Users/igor/Library/Application Support/Code/1.38.1-main.sock' VSCODE_PID=83050 AWS_HOME=/Users/igor/.aws LC_CTYPE= LESS=-R LSCOLORS=Gxfxcxdxbxegedabagacad NVM_BIN=/Users/igor/.nvm/versions/node/v10.13.0/bin NVM_CD_FLAGS=-q NVM_DIR=/Users/igor/.nvm OLDPWD=/ PAGER=less PWD=/ PYENV_ROOT=/Users/igor/.pyenv PYENV_SHELL=zsh SHLVL=0 ZSH=/Users/igor/.oh-my-zsh '_=/Applications/Visual Studio Code.app/Contents/MacOS/Electron' AMD_ENTRYPOINT=vs/workbench/services/extensions/node/extensionHostProcess PIPE_LOGGING=true VERBOSE_LOGGING=true VSCODE_IPC_HOOK_EXTHOST=/var/folders/bm/wby56bk53dj4fbbtrvqsslqw0000gn/T/vscode-ipc-6d648d60-2fad-4ed4-a2c2-832c5f1c6a16.sock VSCODE_HANDLES_UNCAUGHT_ERRORS=true VSCODE_LOG_STACK=false VSCODE_PREVENT_FOREIGN_INSPECT=true ELECTRON_RUN_AS_NODE=1 APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL=true PATH=/Users/igor/.pyenv/shims:/Users/igor/.pyenv/bin:/Users/igor/.nvm/versions/node/v10.13.0/bin:/Users/igor/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/lib:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/brew:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/common-aliases:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/git:/Users/igor/.antigen/bundles/zsh-users/zsh-syntax-highlighting:/Users/igor/.antigen/bundles/zsh-users/zsh-completions:/Users/igor/.antigen/bundles/zsh-users/zsh-autosuggestions:/Users/igor/.antigen/bundles/mafredri/zsh-async:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/pip:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/command-not-found PYTHONIOENCODING=UTF-8 PYTHONUNBUFFERED=1 /usr/local/bin/python3 /Users/igor/.vscode/extensions/ms-python.python-2019.9.34911/pythonFiles/ptvsd_launcher.py --default --client --host localhost --port 55228 -m flask run --no-debugger --no-reload 
 3564  pip install flask
 3565  cd /Users/igor/dev/applications/app-templates/python-video/stream-video-browser ; env FLASK_APP=webstreaming.py FLASK_ENV=development FLASK_DEBUG=1 TMPDIR=/var/folders/bm/wby56bk53dj4fbbtrvqsslqw0000gn/T/ __CF_USER_TEXT_ENCODING=0x1F5:0x0:0x0 SHELL=/bin/zsh HOME=/Users/igor Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.DaIBLPsZbX/Render SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.iP8vIb8Upq/Listeners LOGNAME=igor XPC_SERVICE_NAME=com.microsoft.VSCode.5952 USER=igor XPC_FLAGS=0x0 'VSCODE_NLS_CONFIG={"locale":"en-us","availableLanguages":{},"_languagePackSupport":true}' 'VSCODE_NODE_CACHED_DATA_DIR=/Users/igor/Library/Application Support/Code/CachedData/b37e54c98e1a74ba89e03073e5a3761284e3ffb0' 'VSCODE_LOGS=/Users/igor/Library/Application Support/Code/logs/20190930T100819' 'VSCODE_IPC_HOOK=/Users/igor/Library/Application Support/Code/1.38.1-main.sock' VSCODE_PID=83050 AWS_HOME=/Users/igor/.aws LC_CTYPE= LESS=-R LSCOLORS=Gxfxcxdxbxegedabagacad NVM_BIN=/Users/igor/.nvm/versions/node/v10.13.0/bin NVM_CD_FLAGS=-q NVM_DIR=/Users/igor/.nvm OLDPWD=/ PAGER=less PWD=/ PYENV_ROOT=/Users/igor/.pyenv PYENV_SHELL=zsh SHLVL=0 ZSH=/Users/igor/.oh-my-zsh '_=/Applications/Visual Studio Code.app/Contents/MacOS/Electron' AMD_ENTRYPOINT=vs/workbench/services/extensions/node/extensionHostProcess PIPE_LOGGING=true VERBOSE_LOGGING=true VSCODE_IPC_HOOK_EXTHOST=/var/folders/bm/wby56bk53dj4fbbtrvqsslqw0000gn/T/vscode-ipc-6d648d60-2fad-4ed4-a2c2-832c5f1c6a16.sock VSCODE_HANDLES_UNCAUGHT_ERRORS=true VSCODE_LOG_STACK=false VSCODE_PREVENT_FOREIGN_INSPECT=true ELECTRON_RUN_AS_NODE=1 APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL=true PATH=/Users/igor/.pyenv/shims:/Users/igor/.pyenv/bin:/Users/igor/.nvm/versions/node/v10.13.0/bin:/Users/igor/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/lib:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/brew:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/common-aliases:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/git:/Users/igor/.antigen/bundles/zsh-users/zsh-syntax-highlighting:/Users/igor/.antigen/bundles/zsh-users/zsh-completions:/Users/igor/.antigen/bundles/zsh-users/zsh-autosuggestions:/Users/igor/.antigen/bundles/mafredri/zsh-async:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/pip:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/command-not-found PYTHONIOENCODING=UTF-8 PYTHONUNBUFFERED=1 /Users/igor/.pyenv/versions/3.6.4/bin/python /Users/igor/.vscode/extensions/ms-python.python-2019.9.34911/pythonFiles/ptvsd_launcher.py --default --client --host localhost --port 55251 -m flask run --no-debugger --no-reload 
 3566  cd /Users/igor/dev/applications/app-templates/python-video/stream-video-browser ; env FLASK_APP=webstreaming.py TMPDIR=/var/folders/bm/wby56bk53dj4fbbtrvqsslqw0000gn/T/ __CF_USER_TEXT_ENCODING=0x1F5:0x0:0x0 SHELL=/bin/zsh HOME=/Users/igor Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.DaIBLPsZbX/Render SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.iP8vIb8Upq/Listeners LOGNAME=igor XPC_SERVICE_NAME=com.microsoft.VSCode.5952 USER=igor XPC_FLAGS=0x0 'VSCODE_NLS_CONFIG={"locale":"en-us","availableLanguages":{},"_languagePackSupport":true}' 'VSCODE_NODE_CACHED_DATA_DIR=/Users/igor/Library/Application Support/Code/CachedData/b37e54c98e1a74ba89e03073e5a3761284e3ffb0' 'VSCODE_LOGS=/Users/igor/Library/Application Support/Code/logs/20190930T100819' 'VSCODE_IPC_HOOK=/Users/igor/Library/Application Support/Code/1.38.1-main.sock' VSCODE_PID=83050 AWS_HOME=/Users/igor/.aws LC_CTYPE= LESS=-R LSCOLORS=Gxfxcxdxbxegedabagacad NVM_BIN=/Users/igor/.nvm/versions/node/v10.13.0/bin NVM_CD_FLAGS=-q NVM_DIR=/Users/igor/.nvm OLDPWD=/ PAGER=less PWD=/ PYENV_ROOT=/Users/igor/.pyenv PYENV_SHELL=zsh SHLVL=0 ZSH=/Users/igor/.oh-my-zsh '_=/Applications/Visual Studio Code.app/Contents/MacOS/Electron' AMD_ENTRYPOINT=vs/workbench/services/extensions/node/extensionHostProcess PIPE_LOGGING=true VERBOSE_LOGGING=true VSCODE_IPC_HOOK_EXTHOST=/var/folders/bm/wby56bk53dj4fbbtrvqsslqw0000gn/T/vscode-ipc-6d648d60-2fad-4ed4-a2c2-832c5f1c6a16.sock VSCODE_HANDLES_UNCAUGHT_ERRORS=true VSCODE_LOG_STACK=false VSCODE_PREVENT_FOREIGN_INSPECT=true ELECTRON_RUN_AS_NODE=1 APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL=true PATH=/Users/igor/.pyenv/shims:/Users/igor/.pyenv/bin:/Users/igor/.nvm/versions/node/v10.13.0/bin:/Users/igor/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/lib:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/brew:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/common-aliases:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/git:/Users/igor/.antigen/bundles/zsh-users/zsh-syntax-highlighting:/Users/igor/.antigen/bundles/zsh-users/zsh-completions:/Users/igor/.antigen/bundles/zsh-users/zsh-autosuggestions:/Users/igor/.antigen/bundles/mafredri/zsh-async:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/pip:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/command-not-found PYTHONIOENCODING=UTF-8 PYTHONUNBUFFERED=1 /Users/igor/.pyenv/versions/3.6.4/bin/python /Users/igor/.vscode/extensions/ms-python.python-2019.9.34911/pythonFiles/ptvsd_launcher.py --default --client --host localhost --port 55262 -m flask run --no-debugger --no-reload 
 3567  python -m flask run
 3568  python -m flask run app
 3569  python webstreaming.py --ip 127.0.0.1 --port 8000
 3570  python app.py --ip 127.0.0.1 --port 8000
 3571  python app.py
 3572  python -m flask run app
 3573  python -m flask run --help
 3574  cd /Users/igor/dev/applications/app-templates/python-video/stream-video-browser ; env FLASK_APP=app.py TMPDIR=/var/folders/bm/wby56bk53dj4fbbtrvqsslqw0000gn/T/ __CF_USER_TEXT_ENCODING=0x1F5:0x0:0x0 SHELL=/bin/zsh HOME=/Users/igor Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.DaIBLPsZbX/Render SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.iP8vIb8Upq/Listeners LOGNAME=igor XPC_SERVICE_NAME=com.microsoft.VSCode.5952 USER=igor XPC_FLAGS=0x0 'VSCODE_NLS_CONFIG={"locale":"en-us","availableLanguages":{},"_languagePackSupport":true}' 'VSCODE_NODE_CACHED_DATA_DIR=/Users/igor/Library/Application Support/Code/CachedData/b37e54c98e1a74ba89e03073e5a3761284e3ffb0' 'VSCODE_LOGS=/Users/igor/Library/Application Support/Code/logs/20190930T100819' 'VSCODE_IPC_HOOK=/Users/igor/Library/Application Support/Code/1.38.1-main.sock' VSCODE_PID=83050 AWS_HOME=/Users/igor/.aws LC_CTYPE= LESS=-R LSCOLORS=Gxfxcxdxbxegedabagacad NVM_BIN=/Users/igor/.nvm/versions/node/v10.13.0/bin NVM_CD_FLAGS=-q NVM_DIR=/Users/igor/.nvm OLDPWD=/ PAGER=less PWD=/ PYENV_ROOT=/Users/igor/.pyenv PYENV_SHELL=zsh SHLVL=0 ZSH=/Users/igor/.oh-my-zsh '_=/Applications/Visual Studio Code.app/Contents/MacOS/Electron' AMD_ENTRYPOINT=vs/workbench/services/extensions/node/extensionHostProcess PIPE_LOGGING=true VERBOSE_LOGGING=true VSCODE_IPC_HOOK_EXTHOST=/var/folders/bm/wby56bk53dj4fbbtrvqsslqw0000gn/T/vscode-ipc-6d648d60-2fad-4ed4-a2c2-832c5f1c6a16.sock VSCODE_HANDLES_UNCAUGHT_ERRORS=true VSCODE_LOG_STACK=false VSCODE_PREVENT_FOREIGN_INSPECT=true ELECTRON_RUN_AS_NODE=1 APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL=true PATH=/Users/igor/.pyenv/shims:/Users/igor/.pyenv/bin:/Users/igor/.nvm/versions/node/v10.13.0/bin:/Users/igor/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/lib:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/brew:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/common-aliases:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/git:/Users/igor/.antigen/bundles/zsh-users/zsh-syntax-highlighting:/Users/igor/.antigen/bundles/zsh-users/zsh-completions:/Users/igor/.antigen/bundles/zsh-users/zsh-autosuggestions:/Users/igor/.antigen/bundles/mafredri/zsh-async:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/pip:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/command-not-found PYTHONIOENCODING=UTF-8 PYTHONUNBUFFERED=1 /Users/igor/.pyenv/versions/3.6.4/bin/python /Users/igor/.vscode/extensions/ms-python.python-2019.9.34911/pythonFiles/ptvsd_launcher.py --default --client --host localhost --port 55882 -m flask run --no-debugger --no-reload 
 3575  pip freeze > requirements.txt
 3576  cd /Users/igor/dev/applications/app-templates/python-video/stream-video-browser ; env FLASK_APP=stream-video-browser.webapp TMPDIR=/var/folders/bm/wby56bk53dj4fbbtrvqsslqw0000gn/T/ __CF_USER_TEXT_ENCODING=0x1F5:0x0:0x0 SHELL=/bin/zsh HOME=/Users/igor Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.DaIBLPsZbX/Render SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.iP8vIb8Upq/Listeners LOGNAME=igor XPC_SERVICE_NAME=com.microsoft.VSCode.5952 USER=igor XPC_FLAGS=0x0 'VSCODE_NLS_CONFIG={"locale":"en-us","availableLanguages":{},"_languagePackSupport":true}' 'VSCODE_NODE_CACHED_DATA_DIR=/Users/igor/Library/Application Support/Code/CachedData/b37e54c98e1a74ba89e03073e5a3761284e3ffb0' 'VSCODE_LOGS=/Users/igor/Library/Application Support/Code/logs/20190930T100819' 'VSCODE_IPC_HOOK=/Users/igor/Library/Application Support/Code/1.38.1-main.sock' VSCODE_PID=83050 AWS_HOME=/Users/igor/.aws LC_CTYPE= LESS=-R LSCOLORS=Gxfxcxdxbxegedabagacad NVM_BIN=/Users/igor/.nvm/versions/node/v10.13.0/bin NVM_CD_FLAGS=-q NVM_DIR=/Users/igor/.nvm OLDPWD=/ PAGER=less PWD=/ PYENV_ROOT=/Users/igor/.pyenv PYENV_SHELL=zsh SHLVL=0 ZSH=/Users/igor/.oh-my-zsh '_=/Applications/Visual Studio Code.app/Contents/MacOS/Electron' AMD_ENTRYPOINT=vs/workbench/services/extensions/node/extensionHostProcess PIPE_LOGGING=true VERBOSE_LOGGING=true VSCODE_IPC_HOOK_EXTHOST=/var/folders/bm/wby56bk53dj4fbbtrvqsslqw0000gn/T/vscode-ipc-6d648d60-2fad-4ed4-a2c2-832c5f1c6a16.sock VSCODE_HANDLES_UNCAUGHT_ERRORS=true VSCODE_LOG_STACK=false VSCODE_PREVENT_FOREIGN_INSPECT=true ELECTRON_RUN_AS_NODE=1 APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL=true PATH=/Users/igor/.pyenv/shims:/Users/igor/.pyenv/bin:/Users/igor/.nvm/versions/node/v10.13.0/bin:/Users/igor/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/lib:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/brew:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/common-aliases:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/git:/Users/igor/.antigen/bundles/zsh-users/zsh-syntax-highlighting:/Users/igor/.antigen/bundles/zsh-users/zsh-completions:/Users/igor/.antigen/bundles/zsh-users/zsh-autosuggestions:/Users/igor/.antigen/bundles/mafredri/zsh-async:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/pip:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/command-not-found PYTHONIOENCODING=UTF-8 PYTHONUNBUFFERED=1 /Users/igor/.pyenv/versions/3.6.4/bin/python /Users/igor/.vscode/extensions/ms-python.python-2019.9.34911/pythonFiles/ptvsd_launcher.py --default --client --host localhost --port 56020 -m flask run --no-debugger --no-reload 
 3577  cd /Users/igor/dev/applications/app-templates/python-video/stream-video-browser ; env FLASK_APP=webapp TMPDIR=/var/folders/bm/wby56bk53dj4fbbtrvqsslqw0000gn/T/ __CF_USER_TEXT_ENCODING=0x1F5:0x0:0x0 SHELL=/bin/zsh HOME=/Users/igor Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.DaIBLPsZbX/Render SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.iP8vIb8Upq/Listeners LOGNAME=igor XPC_SERVICE_NAME=com.microsoft.VSCode.5952 USER=igor XPC_FLAGS=0x0 'VSCODE_NLS_CONFIG={"locale":"en-us","availableLanguages":{},"_languagePackSupport":true}' 'VSCODE_NODE_CACHED_DATA_DIR=/Users/igor/Library/Application Support/Code/CachedData/b37e54c98e1a74ba89e03073e5a3761284e3ffb0' 'VSCODE_LOGS=/Users/igor/Library/Application Support/Code/logs/20190930T100819' 'VSCODE_IPC_HOOK=/Users/igor/Library/Application Support/Code/1.38.1-main.sock' VSCODE_PID=83050 AWS_HOME=/Users/igor/.aws LC_CTYPE= LESS=-R LSCOLORS=Gxfxcxdxbxegedabagacad NVM_BIN=/Users/igor/.nvm/versions/node/v10.13.0/bin NVM_CD_FLAGS=-q NVM_DIR=/Users/igor/.nvm OLDPWD=/ PAGER=less PWD=/ PYENV_ROOT=/Users/igor/.pyenv PYENV_SHELL=zsh SHLVL=0 ZSH=/Users/igor/.oh-my-zsh '_=/Applications/Visual Studio Code.app/Contents/MacOS/Electron' AMD_ENTRYPOINT=vs/workbench/services/extensions/node/extensionHostProcess PIPE_LOGGING=true VERBOSE_LOGGING=true VSCODE_IPC_HOOK_EXTHOST=/var/folders/bm/wby56bk53dj4fbbtrvqsslqw0000gn/T/vscode-ipc-6d648d60-2fad-4ed4-a2c2-832c5f1c6a16.sock VSCODE_HANDLES_UNCAUGHT_ERRORS=true VSCODE_LOG_STACK=false VSCODE_PREVENT_FOREIGN_INSPECT=true ELECTRON_RUN_AS_NODE=1 APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL=true PATH=/Users/igor/.pyenv/shims:/Users/igor/.pyenv/bin:/Users/igor/.nvm/versions/node/v10.13.0/bin:/Users/igor/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/lib:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/brew:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/common-aliases:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/git:/Users/igor/.antigen/bundles/zsh-users/zsh-syntax-highlighting:/Users/igor/.antigen/bundles/zsh-users/zsh-completions:/Users/igor/.antigen/bundles/zsh-users/zsh-autosuggestions:/Users/igor/.antigen/bundles/mafredri/zsh-async:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/pip:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/command-not-found PYTHONIOENCODING=UTF-8 PYTHONUNBUFFERED=1 /Users/igor/.pyenv/versions/3.6.4/bin/python /Users/igor/.vscode/extensions/ms-python.python-2019.9.34911/pythonFiles/ptvsd_launcher.py --default --client --host localhost --port 56029 -m flask run --no-debugger --no-reload 
 3578  cd /Users/igor/dev/applications/app-templates/python-video/stream-video-browser ; env FLASK_APP=webstreaming TMPDIR=/var/folders/bm/wby56bk53dj4fbbtrvqsslqw0000gn/T/ __CF_USER_TEXT_ENCODING=0x1F5:0x0:0x0 SHELL=/bin/zsh HOME=/Users/igor Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.DaIBLPsZbX/Render SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.iP8vIb8Upq/Listeners LOGNAME=igor XPC_SERVICE_NAME=com.microsoft.VSCode.5952 USER=igor XPC_FLAGS=0x0 'VSCODE_NLS_CONFIG={"locale":"en-us","availableLanguages":{},"_languagePackSupport":true}' 'VSCODE_NODE_CACHED_DATA_DIR=/Users/igor/Library/Application Support/Code/CachedData/b37e54c98e1a74ba89e03073e5a3761284e3ffb0' 'VSCODE_LOGS=/Users/igor/Library/Application Support/Code/logs/20190930T100819' 'VSCODE_IPC_HOOK=/Users/igor/Library/Application Support/Code/1.38.1-main.sock' VSCODE_PID=83050 AWS_HOME=/Users/igor/.aws LC_CTYPE= LESS=-R LSCOLORS=Gxfxcxdxbxegedabagacad NVM_BIN=/Users/igor/.nvm/versions/node/v10.13.0/bin NVM_CD_FLAGS=-q NVM_DIR=/Users/igor/.nvm OLDPWD=/ PAGER=less PWD=/ PYENV_ROOT=/Users/igor/.pyenv PYENV_SHELL=zsh SHLVL=0 ZSH=/Users/igor/.oh-my-zsh '_=/Applications/Visual Studio Code.app/Contents/MacOS/Electron' AMD_ENTRYPOINT=vs/workbench/services/extensions/node/extensionHostProcess PIPE_LOGGING=true VERBOSE_LOGGING=true VSCODE_IPC_HOOK_EXTHOST=/var/folders/bm/wby56bk53dj4fbbtrvqsslqw0000gn/T/vscode-ipc-6d648d60-2fad-4ed4-a2c2-832c5f1c6a16.sock VSCODE_HANDLES_UNCAUGHT_ERRORS=true VSCODE_LOG_STACK=false VSCODE_PREVENT_FOREIGN_INSPECT=true ELECTRON_RUN_AS_NODE=1 APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL=true PATH=/Users/igor/.pyenv/shims:/Users/igor/.pyenv/bin:/Users/igor/.nvm/versions/node/v10.13.0/bin:/Users/igor/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/lib:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/brew:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/common-aliases:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/git:/Users/igor/.antigen/bundles/zsh-users/zsh-syntax-highlighting:/Users/igor/.antigen/bundles/zsh-users/zsh-completions:/Users/igor/.antigen/bundles/zsh-users/zsh-autosuggestions:/Users/igor/.antigen/bundles/mafredri/zsh-async:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/pip:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/command-not-found PYTHONIOENCODING=UTF-8 PYTHONUNBUFFERED=1 /Users/igor/.pyenv/versions/3.6.4/bin/python /Users/igor/.vscode/extensions/ms-python.python-2019.9.34911/pythonFiles/ptvsd_launcher.py --default --client --host localhost --port 56056 -m flask run --no-debugger --no-reload 
 3579  cd /Users/igor/dev/applications/app-templates/python-video/stream-video-browser ; env FLASK_APP=webstreaming TMPDIR=/var/folders/bm/wby56bk53dj4fbbtrvqsslqw0000gn/T/ __CF_USER_TEXT_ENCODING=0x1F5:0x0:0x0 SHELL=/bin/zsh HOME=/Users/igor Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.DaIBLPsZbX/Render SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.iP8vIb8Upq/Listeners LOGNAME=igor XPC_SERVICE_NAME=com.microsoft.VSCode.5952 USER=igor XPC_FLAGS=0x0 'VSCODE_NLS_CONFIG={"locale":"en-us","availableLanguages":{},"_languagePackSupport":true}' 'VSCODE_NODE_CACHED_DATA_DIR=/Users/igor/Library/Application Support/Code/CachedData/b37e54c98e1a74ba89e03073e5a3761284e3ffb0' 'VSCODE_LOGS=/Users/igor/Library/Application Support/Code/logs/20190930T100819' 'VSCODE_IPC_HOOK=/Users/igor/Library/Application Support/Code/1.38.1-main.sock' VSCODE_PID=83050 AWS_HOME=/Users/igor/.aws LC_CTYPE= LESS=-R LSCOLORS=Gxfxcxdxbxegedabagacad NVM_BIN=/Users/igor/.nvm/versions/node/v10.13.0/bin NVM_CD_FLAGS=-q NVM_DIR=/Users/igor/.nvm OLDPWD=/ PAGER=less PWD=/ PYENV_ROOT=/Users/igor/.pyenv PYENV_SHELL=zsh SHLVL=0 ZSH=/Users/igor/.oh-my-zsh '_=/Applications/Visual Studio Code.app/Contents/MacOS/Electron' AMD_ENTRYPOINT=vs/workbench/services/extensions/node/extensionHostProcess PIPE_LOGGING=true VERBOSE_LOGGING=true VSCODE_IPC_HOOK_EXTHOST=/var/folders/bm/wby56bk53dj4fbbtrvqsslqw0000gn/T/vscode-ipc-6d648d60-2fad-4ed4-a2c2-832c5f1c6a16.sock VSCODE_HANDLES_UNCAUGHT_ERRORS=true VSCODE_LOG_STACK=false VSCODE_PREVENT_FOREIGN_INSPECT=true ELECTRON_RUN_AS_NODE=1 APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL=true PATH=/Users/igor/.pyenv/shims:/Users/igor/.pyenv/bin:/Users/igor/.nvm/versions/node/v10.13.0/bin:/Users/igor/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/lib:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/brew:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/common-aliases:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/git:/Users/igor/.antigen/bundles/zsh-users/zsh-syntax-highlighting:/Users/igor/.antigen/bundles/zsh-users/zsh-completions:/Users/igor/.antigen/bundles/zsh-users/zsh-autosuggestions:/Users/igor/.antigen/bundles/mafredri/zsh-async:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/pip:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/command-not-found PYTHONIOENCODING=UTF-8 PYTHONUNBUFFERED=1 /Users/igor/.pyenv/versions/3.6.4/bin/python /Users/igor/.vscode/extensions/ms-python.python-2019.9.34911/pythonFiles/ptvsd_launcher.py --default --client --host localhost --port 56076 -m flask run --no-debugger --no-reload 
 3580  python webstreaming.py --ip 127.0.0.1 --port 8000
 3581  cd /Users/igor/dev/applications/app-templates/python-video/stream-video-browser ; env FLASK_APP=webstreaming FLASK_ENV=development FLASK_DEBUG=1 TMPDIR=/var/folders/bm/wby56bk53dj4fbbtrvqsslqw0000gn/T/ __CF_USER_TEXT_ENCODING=0x1F5:0x0:0x0 SHELL=/bin/zsh HOME=/Users/igor Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.DaIBLPsZbX/Render SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.iP8vIb8Upq/Listeners LOGNAME=igor XPC_SERVICE_NAME=com.microsoft.VSCode.5952 USER=igor XPC_FLAGS=0x0 'VSCODE_NLS_CONFIG={"locale":"en-us","availableLanguages":{},"_languagePackSupport":true}' 'VSCODE_NODE_CACHED_DATA_DIR=/Users/igor/Library/Application Support/Code/CachedData/b37e54c98e1a74ba89e03073e5a3761284e3ffb0' 'VSCODE_LOGS=/Users/igor/Library/Application Support/Code/logs/20190930T100819' 'VSCODE_IPC_HOOK=/Users/igor/Library/Application Support/Code/1.38.1-main.sock' VSCODE_PID=83050 AWS_HOME=/Users/igor/.aws LC_CTYPE= LESS=-R LSCOLORS=Gxfxcxdxbxegedabagacad NVM_BIN=/Users/igor/.nvm/versions/node/v10.13.0/bin NVM_CD_FLAGS=-q NVM_DIR=/Users/igor/.nvm OLDPWD=/ PAGER=less PWD=/ PYENV_ROOT=/Users/igor/.pyenv PYENV_SHELL=zsh SHLVL=0 ZSH=/Users/igor/.oh-my-zsh '_=/Applications/Visual Studio Code.app/Contents/MacOS/Electron' AMD_ENTRYPOINT=vs/workbench/services/extensions/node/extensionHostProcess PIPE_LOGGING=true VERBOSE_LOGGING=true VSCODE_IPC_HOOK_EXTHOST=/var/folders/bm/wby56bk53dj4fbbtrvqsslqw0000gn/T/vscode-ipc-6d648d60-2fad-4ed4-a2c2-832c5f1c6a16.sock VSCODE_HANDLES_UNCAUGHT_ERRORS=true VSCODE_LOG_STACK=false VSCODE_PREVENT_FOREIGN_INSPECT=true ELECTRON_RUN_AS_NODE=1 APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL=true PATH=/Users/igor/.pyenv/shims:/Users/igor/.pyenv/bin:/Users/igor/.nvm/versions/node/v10.13.0/bin:/Users/igor/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/lib:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/brew:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/common-aliases:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/git:/Users/igor/.antigen/bundles/zsh-users/zsh-syntax-highlighting:/Users/igor/.antigen/bundles/zsh-users/zsh-completions:/Users/igor/.antigen/bundles/zsh-users/zsh-autosuggestions:/Users/igor/.antigen/bundles/mafredri/zsh-async:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/pip:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/command-not-found PYTHONIOENCODING=UTF-8 PYTHONUNBUFFERED=1 /Users/igor/.pyenv/versions/3.6.4/bin/python /Users/igor/.vscode/extensions/ms-python.python-2019.9.34911/pythonFiles/ptvsd_launcher.py --default --client --host localhost --port 56480 -m flask run --no-debugger --no-reload --ip 127.0.0.1 --port 8000 
 3582  cd /Users/igor/dev/applications/app-templates/python-video/stream-video-browser ; env FLASK_APP=webstreaming FLASK_ENV=development FLASK_DEBUG=1 TMPDIR=/var/folders/bm/wby56bk53dj4fbbtrvqsslqw0000gn/T/ __CF_USER_TEXT_ENCODING=0x1F5:0x0:0x0 SHELL=/bin/zsh HOME=/Users/igor Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.DaIBLPsZbX/Render SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.iP8vIb8Upq/Listeners LOGNAME=igor XPC_SERVICE_NAME=com.microsoft.VSCode.5952 USER=igor XPC_FLAGS=0x0 'VSCODE_NLS_CONFIG={"locale":"en-us","availableLanguages":{},"_languagePackSupport":true}' 'VSCODE_NODE_CACHED_DATA_DIR=/Users/igor/Library/Application Support/Code/CachedData/b37e54c98e1a74ba89e03073e5a3761284e3ffb0' 'VSCODE_LOGS=/Users/igor/Library/Application Support/Code/logs/20190930T100819' 'VSCODE_IPC_HOOK=/Users/igor/Library/Application Support/Code/1.38.1-main.sock' VSCODE_PID=83050 AWS_HOME=/Users/igor/.aws LC_CTYPE= LESS=-R LSCOLORS=Gxfxcxdxbxegedabagacad NVM_BIN=/Users/igor/.nvm/versions/node/v10.13.0/bin NVM_CD_FLAGS=-q NVM_DIR=/Users/igor/.nvm OLDPWD=/ PAGER=less PWD=/ PYENV_ROOT=/Users/igor/.pyenv PYENV_SHELL=zsh SHLVL=0 ZSH=/Users/igor/.oh-my-zsh '_=/Applications/Visual Studio Code.app/Contents/MacOS/Electron' AMD_ENTRYPOINT=vs/workbench/services/extensions/node/extensionHostProcess PIPE_LOGGING=true VERBOSE_LOGGING=true VSCODE_IPC_HOOK_EXTHOST=/var/folders/bm/wby56bk53dj4fbbtrvqsslqw0000gn/T/vscode-ipc-6d648d60-2fad-4ed4-a2c2-832c5f1c6a16.sock VSCODE_HANDLES_UNCAUGHT_ERRORS=true VSCODE_LOG_STACK=false VSCODE_PREVENT_FOREIGN_INSPECT=true ELECTRON_RUN_AS_NODE=1 APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL=true PATH=/Users/igor/.pyenv/shims:/Users/igor/.pyenv/bin:/Users/igor/.nvm/versions/node/v10.13.0/bin:/Users/igor/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/lib:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/brew:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/common-aliases:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/git:/Users/igor/.antigen/bundles/zsh-users/zsh-syntax-highlighting:/Users/igor/.antigen/bundles/zsh-users/zsh-completions:/Users/igor/.antigen/bundles/zsh-users/zsh-autosuggestions:/Users/igor/.antigen/bundles/mafredri/zsh-async:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/pip:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/command-not-found PYTHONIOENCODING=UTF-8 PYTHONUNBUFFERED=1 /Users/igor/.pyenv/versions/3.6.4/bin/python /Users/igor/.vscode/extensions/ms-python.python-2019.9.34911/pythonFiles/ptvsd_launcher.py --default --client --host localhost --port 56535 -m flask run --no-debugger --no-reload ip 127.0.0.1 port 8000 
 3583  cd /Users/igor/dev/applications/app-templates/python-video/stream-video-browser ; env FLASK_APP=webstreaming FLASK_ENV=development FLASK_DEBUG=1 TMPDIR=/var/folders/bm/wby56bk53dj4fbbtrvqsslqw0000gn/T/ __CF_USER_TEXT_ENCODING=0x1F5:0x0:0x0 SHELL=/bin/zsh HOME=/Users/igor Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.DaIBLPsZbX/Render SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.iP8vIb8Upq/Listeners LOGNAME=igor XPC_SERVICE_NAME=com.microsoft.VSCode.5952 USER=igor XPC_FLAGS=0x0 'VSCODE_NLS_CONFIG={"locale":"en-us","availableLanguages":{},"_languagePackSupport":true}' 'VSCODE_NODE_CACHED_DATA_DIR=/Users/igor/Library/Application Support/Code/CachedData/b37e54c98e1a74ba89e03073e5a3761284e3ffb0' 'VSCODE_LOGS=/Users/igor/Library/Application Support/Code/logs/20190930T100819' 'VSCODE_IPC_HOOK=/Users/igor/Library/Application Support/Code/1.38.1-main.sock' VSCODE_PID=83050 AWS_HOME=/Users/igor/.aws LC_CTYPE= LESS=-R LSCOLORS=Gxfxcxdxbxegedabagacad NVM_BIN=/Users/igor/.nvm/versions/node/v10.13.0/bin NVM_CD_FLAGS=-q NVM_DIR=/Users/igor/.nvm OLDPWD=/ PAGER=less PWD=/ PYENV_ROOT=/Users/igor/.pyenv PYENV_SHELL=zsh SHLVL=0 ZSH=/Users/igor/.oh-my-zsh '_=/Applications/Visual Studio Code.app/Contents/MacOS/Electron' AMD_ENTRYPOINT=vs/workbench/services/extensions/node/extensionHostProcess PIPE_LOGGING=true VERBOSE_LOGGING=true VSCODE_IPC_HOOK_EXTHOST=/var/folders/bm/wby56bk53dj4fbbtrvqsslqw0000gn/T/vscode-ipc-6d648d60-2fad-4ed4-a2c2-832c5f1c6a16.sock VSCODE_HANDLES_UNCAUGHT_ERRORS=true VSCODE_LOG_STACK=false VSCODE_PREVENT_FOREIGN_INSPECT=true ELECTRON_RUN_AS_NODE=1 APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL=true PATH=/Users/igor/.pyenv/shims:/Users/igor/.pyenv/bin:/Users/igor/.nvm/versions/node/v10.13.0/bin:/Users/igor/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/lib:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/brew:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/common-aliases:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/git:/Users/igor/.antigen/bundles/zsh-users/zsh-syntax-highlighting:/Users/igor/.antigen/bundles/zsh-users/zsh-completions:/Users/igor/.antigen/bundles/zsh-users/zsh-autosuggestions:/Users/igor/.antigen/bundles/mafredri/zsh-async:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/pip:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/command-not-found PYTHONIOENCODING=UTF-8 PYTHONUNBUFFERED=1 /Users/igor/.pyenv/versions/3.6.4/bin/python /Users/igor/.vscode/extensions/ms-python.python-2019.9.34911/pythonFiles/ptvsd_launcher.py --default --client --host localhost --port 56557 -m flask run --ip 127.0.0.1 --port 8000 --no-debugger --no-reload 
 3584  cd /Users/igor/dev/applications/app-templates/python-video/stream-video-browser ; env FLASK_APP=webstreaming FLASK_ENV=development FLASK_DEBUG=1 TMPDIR=/var/folders/bm/wby56bk53dj4fbbtrvqsslqw0000gn/T/ __CF_USER_TEXT_ENCODING=0x1F5:0x0:0x0 SHELL=/bin/zsh HOME=/Users/igor Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.DaIBLPsZbX/Render SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.iP8vIb8Upq/Listeners LOGNAME=igor XPC_SERVICE_NAME=com.microsoft.VSCode.5952 USER=igor XPC_FLAGS=0x0 'VSCODE_NLS_CONFIG={"locale":"en-us","availableLanguages":{},"_languagePackSupport":true}' 'VSCODE_NODE_CACHED_DATA_DIR=/Users/igor/Library/Application Support/Code/CachedData/b37e54c98e1a74ba89e03073e5a3761284e3ffb0' 'VSCODE_LOGS=/Users/igor/Library/Application Support/Code/logs/20190930T100819' 'VSCODE_IPC_HOOK=/Users/igor/Library/Application Support/Code/1.38.1-main.sock' VSCODE_PID=83050 AWS_HOME=/Users/igor/.aws LC_CTYPE= LESS=-R LSCOLORS=Gxfxcxdxbxegedabagacad NVM_BIN=/Users/igor/.nvm/versions/node/v10.13.0/bin NVM_CD_FLAGS=-q NVM_DIR=/Users/igor/.nvm OLDPWD=/ PAGER=less PWD=/ PYENV_ROOT=/Users/igor/.pyenv PYENV_SHELL=zsh SHLVL=0 ZSH=/Users/igor/.oh-my-zsh '_=/Applications/Visual Studio Code.app/Contents/MacOS/Electron' AMD_ENTRYPOINT=vs/workbench/services/extensions/node/extensionHostProcess PIPE_LOGGING=true VERBOSE_LOGGING=true VSCODE_IPC_HOOK_EXTHOST=/var/folders/bm/wby56bk53dj4fbbtrvqsslqw0000gn/T/vscode-ipc-6d648d60-2fad-4ed4-a2c2-832c5f1c6a16.sock VSCODE_HANDLES_UNCAUGHT_ERRORS=true VSCODE_LOG_STACK=false VSCODE_PREVENT_FOREIGN_INSPECT=true ELECTRON_RUN_AS_NODE=1 APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL=true PATH=/Users/igor/.pyenv/shims:/Users/igor/.pyenv/bin:/Users/igor/.nvm/versions/node/v10.13.0/bin:/Users/igor/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/lib:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/brew:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/common-aliases:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/git:/Users/igor/.antigen/bundles/zsh-users/zsh-syntax-highlighting:/Users/igor/.antigen/bundles/zsh-users/zsh-completions:/Users/igor/.antigen/bundles/zsh-users/zsh-autosuggestions:/Users/igor/.antigen/bundles/mafredri/zsh-async:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/pip:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/command-not-found PYTHONIOENCODING=UTF-8 PYTHONUNBUFFERED=1 /Users/igor/.pyenv/versions/3.6.4/bin/python /Users/igor/.vscode/extensions/ms-python.python-2019.9.34911/pythonFiles/ptvsd_launcher.py --default --client --host localhost --port 56571 -m flask run --no-debugger --no-reload 
 3585  cd /Users/igor/dev/applications/app-templates/python-video/stream-video-browser ; env FLASK_APP=webapp TMPDIR=/var/folders/bm/wby56bk53dj4fbbtrvqsslqw0000gn/T/ __CF_USER_TEXT_ENCODING=0x1F5:0x0:0x0 SHELL=/bin/zsh HOME=/Users/igor Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.DaIBLPsZbX/Render SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.iP8vIb8Upq/Listeners LOGNAME=igor XPC_SERVICE_NAME=com.microsoft.VSCode.5952 USER=igor XPC_FLAGS=0x0 'VSCODE_NLS_CONFIG={"locale":"en-us","availableLanguages":{},"_languagePackSupport":true}' 'VSCODE_NODE_CACHED_DATA_DIR=/Users/igor/Library/Application Support/Code/CachedData/b37e54c98e1a74ba89e03073e5a3761284e3ffb0' 'VSCODE_LOGS=/Users/igor/Library/Application Support/Code/logs/20190930T100819' 'VSCODE_IPC_HOOK=/Users/igor/Library/Application Support/Code/1.38.1-main.sock' VSCODE_PID=83050 AWS_HOME=/Users/igor/.aws LC_CTYPE= LESS=-R LSCOLORS=Gxfxcxdxbxegedabagacad NVM_BIN=/Users/igor/.nvm/versions/node/v10.13.0/bin NVM_CD_FLAGS=-q NVM_DIR=/Users/igor/.nvm OLDPWD=/ PAGER=less PWD=/ PYENV_ROOT=/Users/igor/.pyenv PYENV_SHELL=zsh SHLVL=0 ZSH=/Users/igor/.oh-my-zsh '_=/Applications/Visual Studio Code.app/Contents/MacOS/Electron' AMD_ENTRYPOINT=vs/workbench/services/extensions/node/extensionHostProcess PIPE_LOGGING=true VERBOSE_LOGGING=true VSCODE_IPC_HOOK_EXTHOST=/var/folders/bm/wby56bk53dj4fbbtrvqsslqw0000gn/T/vscode-ipc-6d648d60-2fad-4ed4-a2c2-832c5f1c6a16.sock VSCODE_HANDLES_UNCAUGHT_ERRORS=true VSCODE_LOG_STACK=false VSCODE_PREVENT_FOREIGN_INSPECT=true ELECTRON_RUN_AS_NODE=1 APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL=true PATH=/Users/igor/.pyenv/shims:/Users/igor/.pyenv/bin:/Users/igor/.nvm/versions/node/v10.13.0/bin:/Users/igor/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/lib:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/brew:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/common-aliases:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/git:/Users/igor/.antigen/bundles/zsh-users/zsh-syntax-highlighting:/Users/igor/.antigen/bundles/zsh-users/zsh-completions:/Users/igor/.antigen/bundles/zsh-users/zsh-autosuggestions:/Users/igor/.antigen/bundles/mafredri/zsh-async:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/pip:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/command-not-found PYTHONIOENCODING=UTF-8 PYTHONUNBUFFERED=1 /Users/igor/.pyenv/versions/3.6.4/bin/python /Users/igor/.vscode/extensions/ms-python.python-2019.9.34911/pythonFiles/ptvsd_launcher.py --default --client --host localhost --port 56578 -m flask run --no-debugger --no-reload 
 3586  cd /Users/igor/dev/applications/app-templates/python-video/stream-video-browser ; env FLASK_APP=webstreaming FLASK_ENV=development FLASK_DEBUG=1 TMPDIR=/var/folders/bm/wby56bk53dj4fbbtrvqsslqw0000gn/T/ __CF_USER_TEXT_ENCODING=0x1F5:0x0:0x0 SHELL=/bin/zsh HOME=/Users/igor Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.DaIBLPsZbX/Render SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.iP8vIb8Upq/Listeners LOGNAME=igor XPC_SERVICE_NAME=com.microsoft.VSCode.5952 USER=igor XPC_FLAGS=0x0 'VSCODE_NLS_CONFIG={"locale":"en-us","availableLanguages":{},"_languagePackSupport":true}' 'VSCODE_NODE_CACHED_DATA_DIR=/Users/igor/Library/Application Support/Code/CachedData/b37e54c98e1a74ba89e03073e5a3761284e3ffb0' 'VSCODE_LOGS=/Users/igor/Library/Application Support/Code/logs/20190930T100819' 'VSCODE_IPC_HOOK=/Users/igor/Library/Application Support/Code/1.38.1-main.sock' VSCODE_PID=83050 AWS_HOME=/Users/igor/.aws LC_CTYPE= LESS=-R LSCOLORS=Gxfxcxdxbxegedabagacad NVM_BIN=/Users/igor/.nvm/versions/node/v10.13.0/bin NVM_CD_FLAGS=-q NVM_DIR=/Users/igor/.nvm OLDPWD=/ PAGER=less PWD=/ PYENV_ROOT=/Users/igor/.pyenv PYENV_SHELL=zsh SHLVL=0 ZSH=/Users/igor/.oh-my-zsh '_=/Applications/Visual Studio Code.app/Contents/MacOS/Electron' AMD_ENTRYPOINT=vs/workbench/services/extensions/node/extensionHostProcess PIPE_LOGGING=true VERBOSE_LOGGING=true VSCODE_IPC_HOOK_EXTHOST=/var/folders/bm/wby56bk53dj4fbbtrvqsslqw0000gn/T/vscode-ipc-6d648d60-2fad-4ed4-a2c2-832c5f1c6a16.sock VSCODE_HANDLES_UNCAUGHT_ERRORS=true VSCODE_LOG_STACK=false VSCODE_PREVENT_FOREIGN_INSPECT=true ELECTRON_RUN_AS_NODE=1 APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL=true PATH=/Users/igor/.pyenv/shims:/Users/igor/.pyenv/bin:/Users/igor/.nvm/versions/node/v10.13.0/bin:/Users/igor/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/lib:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/brew:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/common-aliases:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/git:/Users/igor/.antigen/bundles/zsh-users/zsh-syntax-highlighting:/Users/igor/.antigen/bundles/zsh-users/zsh-completions:/Users/igor/.antigen/bundles/zsh-users/zsh-autosuggestions:/Users/igor/.antigen/bundles/mafredri/zsh-async:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/pip:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/command-not-found PYTHONIOENCODING=UTF-8 PYTHONUNBUFFERED=1 /Users/igor/.pyenv/versions/3.6.4/bin/python /Users/igor/.vscode/extensions/ms-python.python-2019.9.34911/pythonFiles/ptvsd_launcher.py --default --client --host localhost --port 56757 -m flask run --host 0.0.0.0 --no-debugger --no-reload 
 3587  cd /Users/igor/dev/applications/app-templates/python-video/stream-video-browser ; env FLASK_APP=webstreaming FLASK_ENV=development FLASK_DEBUG=1 TMPDIR=/var/folders/bm/wby56bk53dj4fbbtrvqsslqw0000gn/T/ __CF_USER_TEXT_ENCODING=0x1F5:0x0:0x0 SHELL=/bin/zsh HOME=/Users/igor Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.DaIBLPsZbX/Render SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.iP8vIb8Upq/Listeners LOGNAME=igor XPC_SERVICE_NAME=com.microsoft.VSCode.5952 USER=igor XPC_FLAGS=0x0 'VSCODE_NLS_CONFIG={"locale":"en-us","availableLanguages":{},"_languagePackSupport":true}' 'VSCODE_NODE_CACHED_DATA_DIR=/Users/igor/Library/Application Support/Code/CachedData/b37e54c98e1a74ba89e03073e5a3761284e3ffb0' 'VSCODE_LOGS=/Users/igor/Library/Application Support/Code/logs/20190930T100819' 'VSCODE_IPC_HOOK=/Users/igor/Library/Application Support/Code/1.38.1-main.sock' VSCODE_PID=83050 AWS_HOME=/Users/igor/.aws LC_CTYPE= LESS=-R LSCOLORS=Gxfxcxdxbxegedabagacad NVM_BIN=/Users/igor/.nvm/versions/node/v10.13.0/bin NVM_CD_FLAGS=-q NVM_DIR=/Users/igor/.nvm OLDPWD=/ PAGER=less PWD=/ PYENV_ROOT=/Users/igor/.pyenv PYENV_SHELL=zsh SHLVL=0 ZSH=/Users/igor/.oh-my-zsh '_=/Applications/Visual Studio Code.app/Contents/MacOS/Electron' AMD_ENTRYPOINT=vs/workbench/services/extensions/node/extensionHostProcess PIPE_LOGGING=true VERBOSE_LOGGING=true VSCODE_IPC_HOOK_EXTHOST=/var/folders/bm/wby56bk53dj4fbbtrvqsslqw0000gn/T/vscode-ipc-6d648d60-2fad-4ed4-a2c2-832c5f1c6a16.sock VSCODE_HANDLES_UNCAUGHT_ERRORS=true VSCODE_LOG_STACK=false VSCODE_PREVENT_FOREIGN_INSPECT=true ELECTRON_RUN_AS_NODE=1 APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL=true PATH=/Users/igor/.pyenv/shims:/Users/igor/.pyenv/bin:/Users/igor/.nvm/versions/node/v10.13.0/bin:/Users/igor/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/lib:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/brew:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/common-aliases:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/git:/Users/igor/.antigen/bundles/zsh-users/zsh-syntax-highlighting:/Users/igor/.antigen/bundles/zsh-users/zsh-completions:/Users/igor/.antigen/bundles/zsh-users/zsh-autosuggestions:/Users/igor/.antigen/bundles/mafredri/zsh-async:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/pip:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/command-not-found PYTHONIOENCODING=UTF-8 PYTHONUNBUFFERED=1 /Users/igor/.pyenv/versions/3.6.4/bin/python /Users/igor/.vscode/extensions/ms-python.python-2019.9.34911/pythonFiles/ptvsd_launcher.py --default --client --host localhost --port 56789 -m flask run --host 0.0.0.0 --port 8000 --no-debugger --no-reload 
 3588  cd /Users/igor/dev/applications/app-templates/python-video/stream-video-browser ; env FLASK_APP=webstreaming FLASK_ENV=development FLASK_DEBUG=1 TMPDIR=/var/folders/bm/wby56bk53dj4fbbtrvqsslqw0000gn/T/ __CF_USER_TEXT_ENCODING=0x1F5:0x0:0x0 SHELL=/bin/zsh HOME=/Users/igor Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.DaIBLPsZbX/Render SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.iP8vIb8Upq/Listeners LOGNAME=igor XPC_SERVICE_NAME=com.microsoft.VSCode.5952 USER=igor XPC_FLAGS=0x0 'VSCODE_NLS_CONFIG={"locale":"en-us","availableLanguages":{},"_languagePackSupport":true}' 'VSCODE_NODE_CACHED_DATA_DIR=/Users/igor/Library/Application Support/Code/CachedData/b37e54c98e1a74ba89e03073e5a3761284e3ffb0' 'VSCODE_LOGS=/Users/igor/Library/Application Support/Code/logs/20190930T100819' 'VSCODE_IPC_HOOK=/Users/igor/Library/Application Support/Code/1.38.1-main.sock' VSCODE_PID=83050 AWS_HOME=/Users/igor/.aws LC_CTYPE= LESS=-R LSCOLORS=Gxfxcxdxbxegedabagacad NVM_BIN=/Users/igor/.nvm/versions/node/v10.13.0/bin NVM_CD_FLAGS=-q NVM_DIR=/Users/igor/.nvm OLDPWD=/ PAGER=less PWD=/ PYENV_ROOT=/Users/igor/.pyenv PYENV_SHELL=zsh SHLVL=0 ZSH=/Users/igor/.oh-my-zsh '_=/Applications/Visual Studio Code.app/Contents/MacOS/Electron' AMD_ENTRYPOINT=vs/workbench/services/extensions/node/extensionHostProcess PIPE_LOGGING=true VERBOSE_LOGGING=true VSCODE_IPC_HOOK_EXTHOST=/var/folders/bm/wby56bk53dj4fbbtrvqsslqw0000gn/T/vscode-ipc-6d648d60-2fad-4ed4-a2c2-832c5f1c6a16.sock VSCODE_HANDLES_UNCAUGHT_ERRORS=true VSCODE_LOG_STACK=false VSCODE_PREVENT_FOREIGN_INSPECT=true ELECTRON_RUN_AS_NODE=1 APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL=true PATH=/Users/igor/.pyenv/shims:/Users/igor/.pyenv/bin:/Users/igor/.nvm/versions/node/v10.13.0/bin:/Users/igor/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/lib:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/brew:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/common-aliases:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/git:/Users/igor/.antigen/bundles/zsh-users/zsh-syntax-highlighting:/Users/igor/.antigen/bundles/zsh-users/zsh-completions:/Users/igor/.antigen/bundles/zsh-users/zsh-autosuggestions:/Users/igor/.antigen/bundles/mafredri/zsh-async:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/pip:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/command-not-found PYTHONIOENCODING=UTF-8 PYTHONUNBUFFERED=1 /Users/igor/.pyenv/versions/3.6.4/bin/python /Users/igor/.vscode/extensions/ms-python.python-2019.9.34911/pythonFiles/ptvsd_launcher.py --default --client --host localhost --port 56817 -m flask run --host 0.0.0.0 --port 8000 --no-debugger --no-reload 
 3589  cd /Users/igor/dev/applications/app-templates/python-video/stream-video-browser ; env FLASK_APP=webstreaming FLASK_ENV=development FLASK_DEBUG=1 TMPDIR=/var/folders/bm/wby56bk53dj4fbbtrvqsslqw0000gn/T/ __CF_USER_TEXT_ENCODING=0x1F5:0x0:0x0 SHELL=/bin/zsh HOME=/Users/igor Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.DaIBLPsZbX/Render SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.iP8vIb8Upq/Listeners LOGNAME=igor XPC_SERVICE_NAME=com.microsoft.VSCode.5952 USER=igor XPC_FLAGS=0x0 'VSCODE_NLS_CONFIG={"locale":"en-us","availableLanguages":{},"_languagePackSupport":true}' 'VSCODE_NODE_CACHED_DATA_DIR=/Users/igor/Library/Application Support/Code/CachedData/b37e54c98e1a74ba89e03073e5a3761284e3ffb0' 'VSCODE_LOGS=/Users/igor/Library/Application Support/Code/logs/20190930T100819' 'VSCODE_IPC_HOOK=/Users/igor/Library/Application Support/Code/1.38.1-main.sock' VSCODE_PID=83050 AWS_HOME=/Users/igor/.aws LC_CTYPE= LESS=-R LSCOLORS=Gxfxcxdxbxegedabagacad NVM_BIN=/Users/igor/.nvm/versions/node/v10.13.0/bin NVM_CD_FLAGS=-q NVM_DIR=/Users/igor/.nvm OLDPWD=/ PAGER=less PWD=/ PYENV_ROOT=/Users/igor/.pyenv PYENV_SHELL=zsh SHLVL=0 ZSH=/Users/igor/.oh-my-zsh '_=/Applications/Visual Studio Code.app/Contents/MacOS/Electron' AMD_ENTRYPOINT=vs/workbench/services/extensions/node/extensionHostProcess PIPE_LOGGING=true VERBOSE_LOGGING=true VSCODE_IPC_HOOK_EXTHOST=/var/folders/bm/wby56bk53dj4fbbtrvqsslqw0000gn/T/vscode-ipc-6d648d60-2fad-4ed4-a2c2-832c5f1c6a16.sock VSCODE_HANDLES_UNCAUGHT_ERRORS=true VSCODE_LOG_STACK=false VSCODE_PREVENT_FOREIGN_INSPECT=true ELECTRON_RUN_AS_NODE=1 APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL=true PATH=/Users/igor/.pyenv/shims:/Users/igor/.pyenv/bin:/Users/igor/.nvm/versions/node/v10.13.0/bin:/Users/igor/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/lib:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/brew:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/common-aliases:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/git:/Users/igor/.antigen/bundles/zsh-users/zsh-syntax-highlighting:/Users/igor/.antigen/bundles/zsh-users/zsh-completions:/Users/igor/.antigen/bundles/zsh-users/zsh-autosuggestions:/Users/igor/.antigen/bundles/mafredri/zsh-async:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/pip:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/command-not-found PYTHONIOENCODING=UTF-8 PYTHONUNBUFFERED=1 /Users/igor/.pyenv/versions/3.6.4/bin/python /Users/igor/.vscode/extensions/ms-python.python-2019.9.34911/pythonFiles/ptvsd_launcher.py --default --client --host localhost --port 56842 -m flask run --host 0.0.0.0 --port 8000 --no-debugger --no-reload 
 3590  cd /Users/igor/dev/applications/app-templates/python-video/stream-video-browser ; env FLASK_APP=webstreaming FLASK_ENV=development FLASK_DEBUG=1 TMPDIR=/var/folders/bm/wby56bk53dj4fbbtrvqsslqw0000gn/T/ __CF_USER_TEXT_ENCODING=0x1F5:0x0:0x0 SHELL=/bin/zsh HOME=/Users/igor Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.DaIBLPsZbX/Render SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.iP8vIb8Upq/Listeners LOGNAME=igor XPC_SERVICE_NAME=com.microsoft.VSCode.5952 USER=igor XPC_FLAGS=0x0 'VSCODE_NLS_CONFIG={"locale":"en-us","availableLanguages":{},"_languagePackSupport":true}' 'VSCODE_NODE_CACHED_DATA_DIR=/Users/igor/Library/Application Support/Code/CachedData/b37e54c98e1a74ba89e03073e5a3761284e3ffb0' 'VSCODE_LOGS=/Users/igor/Library/Application Support/Code/logs/20190930T100819' 'VSCODE_IPC_HOOK=/Users/igor/Library/Application Support/Code/1.38.1-main.sock' VSCODE_PID=83050 AWS_HOME=/Users/igor/.aws LC_CTYPE= LESS=-R LSCOLORS=Gxfxcxdxbxegedabagacad NVM_BIN=/Users/igor/.nvm/versions/node/v10.13.0/bin NVM_CD_FLAGS=-q NVM_DIR=/Users/igor/.nvm OLDPWD=/ PAGER=less PWD=/ PYENV_ROOT=/Users/igor/.pyenv PYENV_SHELL=zsh SHLVL=0 ZSH=/Users/igor/.oh-my-zsh '_=/Applications/Visual Studio Code.app/Contents/MacOS/Electron' AMD_ENTRYPOINT=vs/workbench/services/extensions/node/extensionHostProcess PIPE_LOGGING=true VERBOSE_LOGGING=true VSCODE_IPC_HOOK_EXTHOST=/var/folders/bm/wby56bk53dj4fbbtrvqsslqw0000gn/T/vscode-ipc-6d648d60-2fad-4ed4-a2c2-832c5f1c6a16.sock VSCODE_HANDLES_UNCAUGHT_ERRORS=true VSCODE_LOG_STACK=false VSCODE_PREVENT_FOREIGN_INSPECT=true ELECTRON_RUN_AS_NODE=1 APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL=true PATH=/Users/igor/.pyenv/shims:/Users/igor/.pyenv/bin:/Users/igor/.nvm/versions/node/v10.13.0/bin:/Users/igor/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/lib:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/brew:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/common-aliases:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/git:/Users/igor/.antigen/bundles/zsh-users/zsh-syntax-highlighting:/Users/igor/.antigen/bundles/zsh-users/zsh-completions:/Users/igor/.antigen/bundles/zsh-users/zsh-autosuggestions:/Users/igor/.antigen/bundles/mafredri/zsh-async:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/pip:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/command-not-found PYTHONIOENCODING=UTF-8 PYTHONUNBUFFERED=1 /Users/igor/.pyenv/versions/3.6.4/bin/python /Users/igor/.vscode/extensions/ms-python.python-2019.9.34911/pythonFiles/ptvsd_launcher.py --default --client --host localhost --port 56871 -m flask run --host 0.0.0.0 --port 8000 --no-debugger --no-reload 
 3591  cd /Users/igor/dev/applications/app-templates/python-video/stream-video-browser ; env FLASK_APP=webstreaming FLASK_ENV=development FLASK_DEBUG=1 TMPDIR=/var/folders/bm/wby56bk53dj4fbbtrvqsslqw0000gn/T/ __CF_USER_TEXT_ENCODING=0x1F5:0x0:0x0 SHELL=/bin/zsh HOME=/Users/igor Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.DaIBLPsZbX/Render SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.iP8vIb8Upq/Listeners LOGNAME=igor XPC_SERVICE_NAME=com.microsoft.VSCode.5952 USER=igor XPC_FLAGS=0x0 'VSCODE_NLS_CONFIG={"locale":"en-us","availableLanguages":{},"_languagePackSupport":true}' 'VSCODE_NODE_CACHED_DATA_DIR=/Users/igor/Library/Application Support/Code/CachedData/b37e54c98e1a74ba89e03073e5a3761284e3ffb0' 'VSCODE_LOGS=/Users/igor/Library/Application Support/Code/logs/20190930T100819' 'VSCODE_IPC_HOOK=/Users/igor/Library/Application Support/Code/1.38.1-main.sock' VSCODE_PID=83050 AWS_HOME=/Users/igor/.aws LC_CTYPE= LESS=-R LSCOLORS=Gxfxcxdxbxegedabagacad NVM_BIN=/Users/igor/.nvm/versions/node/v10.13.0/bin NVM_CD_FLAGS=-q NVM_DIR=/Users/igor/.nvm OLDPWD=/ PAGER=less PWD=/ PYENV_ROOT=/Users/igor/.pyenv PYENV_SHELL=zsh SHLVL=0 ZSH=/Users/igor/.oh-my-zsh '_=/Applications/Visual Studio Code.app/Contents/MacOS/Electron' AMD_ENTRYPOINT=vs/workbench/services/extensions/node/extensionHostProcess PIPE_LOGGING=true VERBOSE_LOGGING=true VSCODE_IPC_HOOK_EXTHOST=/var/folders/bm/wby56bk53dj4fbbtrvqsslqw0000gn/T/vscode-ipc-6d648d60-2fad-4ed4-a2c2-832c5f1c6a16.sock VSCODE_HANDLES_UNCAUGHT_ERRORS=true VSCODE_LOG_STACK=false VSCODE_PREVENT_FOREIGN_INSPECT=true ELECTRON_RUN_AS_NODE=1 APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL=true PATH=/Users/igor/.pyenv/shims:/Users/igor/.pyenv/bin:/Users/igor/.nvm/versions/node/v10.13.0/bin:/Users/igor/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/lib:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/brew:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/common-aliases:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/git:/Users/igor/.antigen/bundles/zsh-users/zsh-syntax-highlighting:/Users/igor/.antigen/bundles/zsh-users/zsh-completions:/Users/igor/.antigen/bundles/zsh-users/zsh-autosuggestions:/Users/igor/.antigen/bundles/mafredri/zsh-async:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/pip:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/command-not-found PYTHONIOENCODING=UTF-8 PYTHONUNBUFFERED=1 /Users/igor/.pyenv/versions/3.6.4/bin/python /Users/igor/.vscode/extensions/ms-python.python-2019.9.34911/pythonFiles/ptvsd_launcher.py --default --client --host localhost --port 57231 -m flask run --host 0.0.0.0 --port 8000 --no-debugger --no-reload 
 3592  cp ~/Downloads/test_video.mp4 .
 3593  cd /Users/igor/dev/applications/app-templates/python-video/stream-video-browser ; env FLASK_APP=webstreaming FLASK_ENV=development FLASK_DEBUG=1 TMPDIR=/var/folders/bm/wby56bk53dj4fbbtrvqsslqw0000gn/T/ __CF_USER_TEXT_ENCODING=0x1F5:0x0:0x0 SHELL=/bin/zsh HOME=/Users/igor Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.DaIBLPsZbX/Render SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.iP8vIb8Upq/Listeners LOGNAME=igor XPC_SERVICE_NAME=com.microsoft.VSCode.5952 USER=igor XPC_FLAGS=0x0 'VSCODE_NLS_CONFIG={"locale":"en-us","availableLanguages":{},"_languagePackSupport":true}' 'VSCODE_NODE_CACHED_DATA_DIR=/Users/igor/Library/Application Support/Code/CachedData/b37e54c98e1a74ba89e03073e5a3761284e3ffb0' 'VSCODE_LOGS=/Users/igor/Library/Application Support/Code/logs/20190930T100819' 'VSCODE_IPC_HOOK=/Users/igor/Library/Application Support/Code/1.38.1-main.sock' VSCODE_PID=83050 AWS_HOME=/Users/igor/.aws LC_CTYPE= LESS=-R LSCOLORS=Gxfxcxdxbxegedabagacad NVM_BIN=/Users/igor/.nvm/versions/node/v10.13.0/bin NVM_CD_FLAGS=-q NVM_DIR=/Users/igor/.nvm OLDPWD=/ PAGER=less PWD=/ PYENV_ROOT=/Users/igor/.pyenv PYENV_SHELL=zsh SHLVL=0 ZSH=/Users/igor/.oh-my-zsh '_=/Applications/Visual Studio Code.app/Contents/MacOS/Electron' AMD_ENTRYPOINT=vs/workbench/services/extensions/node/extensionHostProcess PIPE_LOGGING=true VERBOSE_LOGGING=true VSCODE_IPC_HOOK_EXTHOST=/var/folders/bm/wby56bk53dj4fbbtrvqsslqw0000gn/T/vscode-ipc-6d648d60-2fad-4ed4-a2c2-832c5f1c6a16.sock VSCODE_HANDLES_UNCAUGHT_ERRORS=true VSCODE_LOG_STACK=false VSCODE_PREVENT_FOREIGN_INSPECT=true ELECTRON_RUN_AS_NODE=1 APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL=true PATH=/Users/igor/.pyenv/shims:/Users/igor/.pyenv/bin:/Users/igor/.nvm/versions/node/v10.13.0/bin:/Users/igor/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/lib:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/brew:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/common-aliases:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/git:/Users/igor/.antigen/bundles/zsh-users/zsh-syntax-highlighting:/Users/igor/.antigen/bundles/zsh-users/zsh-completions:/Users/igor/.antigen/bundles/zsh-users/zsh-autosuggestions:/Users/igor/.antigen/bundles/mafredri/zsh-async:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/pip:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/command-not-found PYTHONIOENCODING=UTF-8 PYTHONUNBUFFERED=1 /Users/igor/.pyenv/versions/3.6.4/bin/python /Users/igor/.vscode/extensions/ms-python.python-2019.9.34911/pythonFiles/ptvsd_launcher.py --default --client --host localhost --port 57485 -m flask run --host 0.0.0.0 --port 8000 --no-debugger --no-reload 
 3594  python webstreaming.py --ip 127.0.0.1 --port 8000
 3595  cd /Users/igor/dev/applications/app-templates/python-video/stream-video-browser ; env FLASK_APP=webstreaming FLASK_ENV=development FLASK_DEBUG=1 TMPDIR=/var/folders/bm/wby56bk53dj4fbbtrvqsslqw0000gn/T/ __CF_USER_TEXT_ENCODING=0x1F5:0x0:0x0 SHELL=/bin/zsh HOME=/Users/igor Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.DaIBLPsZbX/Render SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.iP8vIb8Upq/Listeners LOGNAME=igor XPC_SERVICE_NAME=com.microsoft.VSCode.5952 USER=igor XPC_FLAGS=0x0 'VSCODE_NLS_CONFIG={"locale":"en-us","availableLanguages":{},"_languagePackSupport":true}' 'VSCODE_NODE_CACHED_DATA_DIR=/Users/igor/Library/Application Support/Code/CachedData/b37e54c98e1a74ba89e03073e5a3761284e3ffb0' 'VSCODE_LOGS=/Users/igor/Library/Application Support/Code/logs/20190930T100819' 'VSCODE_IPC_HOOK=/Users/igor/Library/Application Support/Code/1.38.1-main.sock' VSCODE_PID=83050 AWS_HOME=/Users/igor/.aws LC_CTYPE= LESS=-R LSCOLORS=Gxfxcxdxbxegedabagacad NVM_BIN=/Users/igor/.nvm/versions/node/v10.13.0/bin NVM_CD_FLAGS=-q NVM_DIR=/Users/igor/.nvm OLDPWD=/ PAGER=less PWD=/ PYENV_ROOT=/Users/igor/.pyenv PYENV_SHELL=zsh SHLVL=0 ZSH=/Users/igor/.oh-my-zsh '_=/Applications/Visual Studio Code.app/Contents/MacOS/Electron' AMD_ENTRYPOINT=vs/workbench/services/extensions/node/extensionHostProcess PIPE_LOGGING=true VERBOSE_LOGGING=true VSCODE_IPC_HOOK_EXTHOST=/var/folders/bm/wby56bk53dj4fbbtrvqsslqw0000gn/T/vscode-ipc-6d648d60-2fad-4ed4-a2c2-832c5f1c6a16.sock VSCODE_HANDLES_UNCAUGHT_ERRORS=true VSCODE_LOG_STACK=false VSCODE_PREVENT_FOREIGN_INSPECT=true ELECTRON_RUN_AS_NODE=1 APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL=true PATH=/Users/igor/.pyenv/shims:/Users/igor/.pyenv/bin:/Users/igor/.nvm/versions/node/v10.13.0/bin:/Users/igor/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/lib:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/brew:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/common-aliases:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/git:/Users/igor/.antigen/bundles/zsh-users/zsh-syntax-highlighting:/Users/igor/.antigen/bundles/zsh-users/zsh-completions:/Users/igor/.antigen/bundles/zsh-users/zsh-autosuggestions:/Users/igor/.antigen/bundles/mafredri/zsh-async:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/pip:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/command-not-found PYTHONIOENCODING=UTF-8 PYTHONUNBUFFERED=1 /Users/igor/.pyenv/versions/3.6.4/bin/python /Users/igor/.vscode/extensions/ms-python.python-2019.9.34911/pythonFiles/ptvsd_launcher.py --default --client --host localhost --port 57519 -m flask run --host 0.0.0.0 --port 8000 --no-debugger --no-reload 
 3596  python webstreaming.py --ip 127.0.0.1 --port 8000
 3597  cp ~/Downloads/MainconceptLogo_MotionJPEG_1920x1080.mjpg .
 3598  python webstreaming.py --ip 127.0.0.1 --port 8000
 3599  cp ~/Downloads/dolbycanyon.mpg .
 3600  python webstreaming.py --ip 127.0.0.1 --port 8000
 3601  cp ~/Downloads/file-video-stream/videos/jurassic_park_intro.mp4 .
 3602  python webstreaming.py --ip 127.0.0.1 --port 8000
 3603  cp ~/Downloads/file-video-stream/read_frames_slow.py .
 3604  python read_frames_slow.py --video jurassic_park_intro.mp4
 3605  python webstreaming.py --ip 127.0.0.1 --port 8000
 3606  mkdir video
 3607  mv jurassic_park_intro.mp4 video
 3608  python webstreaming.py --ip 127.0.0.1 --port 8000
 3609  cp ~/Downloads/key_event_demo.gif video
 3610  python webstreaming.py --ip 127.0.0.1 --port 8000
 3611  cd /Users/igor/dev/applications/app-templates/python-video/stream-video-browser ; env FLASK_APP=webstreaming FLASK_ENV=development FLASK_DEBUG=1 TMPDIR=/var/folders/bm/wby56bk53dj4fbbtrvqsslqw0000gn/T/ __CF_USER_TEXT_ENCODING=0x1F5:0x0:0x0 SHELL=/bin/zsh HOME=/Users/igor Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.DaIBLPsZbX/Render SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.iP8vIb8Upq/Listeners LOGNAME=igor XPC_SERVICE_NAME=com.microsoft.VSCode.5952 USER=igor XPC_FLAGS=0x0 'VSCODE_NLS_CONFIG={"locale":"en-us","availableLanguages":{},"_languagePackSupport":true}' 'VSCODE_NODE_CACHED_DATA_DIR=/Users/igor/Library/Application Support/Code/CachedData/b37e54c98e1a74ba89e03073e5a3761284e3ffb0' 'VSCODE_LOGS=/Users/igor/Library/Application Support/Code/logs/20190930T100819' 'VSCODE_IPC_HOOK=/Users/igor/Library/Application Support/Code/1.38.1-main.sock' VSCODE_PID=83050 AWS_HOME=/Users/igor/.aws LC_CTYPE= LESS=-R LSCOLORS=Gxfxcxdxbxegedabagacad NVM_BIN=/Users/igor/.nvm/versions/node/v10.13.0/bin NVM_CD_FLAGS=-q NVM_DIR=/Users/igor/.nvm OLDPWD=/ PAGER=less PWD=/ PYENV_ROOT=/Users/igor/.pyenv PYENV_SHELL=zsh SHLVL=0 ZSH=/Users/igor/.oh-my-zsh '_=/Applications/Visual Studio Code.app/Contents/MacOS/Electron' AMD_ENTRYPOINT=vs/workbench/services/extensions/node/extensionHostProcess PIPE_LOGGING=true VERBOSE_LOGGING=true VSCODE_IPC_HOOK_EXTHOST=/var/folders/bm/wby56bk53dj4fbbtrvqsslqw0000gn/T/vscode-ipc-6d648d60-2fad-4ed4-a2c2-832c5f1c6a16.sock VSCODE_HANDLES_UNCAUGHT_ERRORS=true VSCODE_LOG_STACK=false VSCODE_PREVENT_FOREIGN_INSPECT=true ELECTRON_RUN_AS_NODE=1 APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL=true PATH=/Users/igor/.pyenv/shims:/Users/igor/.pyenv/bin:/Users/igor/.nvm/versions/node/v10.13.0/bin:/Users/igor/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/lib:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/brew:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/common-aliases:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/git:/Users/igor/.antigen/bundles/zsh-users/zsh-syntax-highlighting:/Users/igor/.antigen/bundles/zsh-users/zsh-completions:/Users/igor/.antigen/bundles/zsh-users/zsh-autosuggestions:/Users/igor/.antigen/bundles/mafredri/zsh-async:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/pip:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/command-not-found PYTHONIOENCODING=UTF-8 PYTHONUNBUFFERED=1 /Users/igor/.pyenv/versions/3.6.4/bin/python /Users/igor/.vscode/extensions/ms-python.python-2019.9.34911/pythonFiles/ptvsd_launcher.py --default --client --host localhost --port 60563 -m flask run --host 0.0.0.0 --port 8000 --no-debugger --no-reload 
 3612  cd /Users/igor/dev/applications/app-templates/python-video/stream-video-browser ; env FLASK_APP=webstreaming FLASK_ENV=development FLASK_DEBUG=1 TMPDIR=/var/folders/bm/wby56bk53dj4fbbtrvqsslqw0000gn/T/ __CF_USER_TEXT_ENCODING=0x1F5:0x0:0x0 SHELL=/bin/zsh HOME=/Users/igor Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.DaIBLPsZbX/Render SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.iP8vIb8Upq/Listeners LOGNAME=igor XPC_SERVICE_NAME=com.microsoft.VSCode.5952 USER=igor XPC_FLAGS=0x0 'VSCODE_NLS_CONFIG={"locale":"en-us","availableLanguages":{},"_languagePackSupport":true}' 'VSCODE_NODE_CACHED_DATA_DIR=/Users/igor/Library/Application Support/Code/CachedData/b37e54c98e1a74ba89e03073e5a3761284e3ffb0' 'VSCODE_LOGS=/Users/igor/Library/Application Support/Code/logs/20190930T100819' 'VSCODE_IPC_HOOK=/Users/igor/Library/Application Support/Code/1.38.1-main.sock' VSCODE_PID=83050 AWS_HOME=/Users/igor/.aws LC_CTYPE= LESS=-R LSCOLORS=Gxfxcxdxbxegedabagacad NVM_BIN=/Users/igor/.nvm/versions/node/v10.13.0/bin NVM_CD_FLAGS=-q NVM_DIR=/Users/igor/.nvm OLDPWD=/ PAGER=less PWD=/ PYENV_ROOT=/Users/igor/.pyenv PYENV_SHELL=zsh SHLVL=0 ZSH=/Users/igor/.oh-my-zsh '_=/Applications/Visual Studio Code.app/Contents/MacOS/Electron' AMD_ENTRYPOINT=vs/workbench/services/extensions/node/extensionHostProcess PIPE_LOGGING=true VERBOSE_LOGGING=true VSCODE_IPC_HOOK_EXTHOST=/var/folders/bm/wby56bk53dj4fbbtrvqsslqw0000gn/T/vscode-ipc-6d648d60-2fad-4ed4-a2c2-832c5f1c6a16.sock VSCODE_HANDLES_UNCAUGHT_ERRORS=true VSCODE_LOG_STACK=false VSCODE_PREVENT_FOREIGN_INSPECT=true ELECTRON_RUN_AS_NODE=1 APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL=true PATH=/Users/igor/.pyenv/shims:/Users/igor/.pyenv/bin:/Users/igor/.nvm/versions/node/v10.13.0/bin:/Users/igor/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/lib:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/brew:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/common-aliases:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/git:/Users/igor/.antigen/bundles/zsh-users/zsh-syntax-highlighting:/Users/igor/.antigen/bundles/zsh-users/zsh-completions:/Users/igor/.antigen/bundles/zsh-users/zsh-autosuggestions:/Users/igor/.antigen/bundles/mafredri/zsh-async:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/pip:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/command-not-found PYTHONIOENCODING=UTF-8 PYTHONUNBUFFERED=1 /Users/igor/.pyenv/versions/3.6.4/bin/python /Users/igor/.vscode/extensions/ms-python.python-2019.9.34911/pythonFiles/ptvsd_launcher.py --default --client --host localhost --port 60575 -m flask run --host 0.0.0.0 --port 8000 --no-debugger --no-reload 
 3613  python webstreaming.py --ip 127.0.0.1 --port 8000
 3614  cp ~/Downloads/video_mjpeg.avi video
 3615  ls video
 3616  python webstreaming.py --ip 127.0.0.1 --port 8000
 3617  cd /Users/igor/dev/applications/app-templates/python-video/stream-video-browser ; env FLASK_APP=webstreaming FLASK_ENV=development FLASK_DEBUG=1 TMPDIR=/var/folders/bm/wby56bk53dj4fbbtrvqsslqw0000gn/T/ __CF_USER_TEXT_ENCODING=0x1F5:0x0:0x0 SHELL=/bin/zsh HOME=/Users/igor Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.DaIBLPsZbX/Render SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.iP8vIb8Upq/Listeners LOGNAME=igor XPC_SERVICE_NAME=com.microsoft.VSCode.5952 USER=igor XPC_FLAGS=0x0 'VSCODE_NLS_CONFIG={"locale":"en-us","availableLanguages":{},"_languagePackSupport":true}' 'VSCODE_NODE_CACHED_DATA_DIR=/Users/igor/Library/Application Support/Code/CachedData/b37e54c98e1a74ba89e03073e5a3761284e3ffb0' 'VSCODE_LOGS=/Users/igor/Library/Application Support/Code/logs/20190930T100819' 'VSCODE_IPC_HOOK=/Users/igor/Library/Application Support/Code/1.38.1-main.sock' VSCODE_PID=83050 AWS_HOME=/Users/igor/.aws LC_CTYPE= LESS=-R LSCOLORS=Gxfxcxdxbxegedabagacad NVM_BIN=/Users/igor/.nvm/versions/node/v10.13.0/bin NVM_CD_FLAGS=-q NVM_DIR=/Users/igor/.nvm OLDPWD=/ PAGER=less PWD=/ PYENV_ROOT=/Users/igor/.pyenv PYENV_SHELL=zsh SHLVL=0 ZSH=/Users/igor/.oh-my-zsh '_=/Applications/Visual Studio Code.app/Contents/MacOS/Electron' AMD_ENTRYPOINT=vs/workbench/services/extensions/node/extensionHostProcess PIPE_LOGGING=true VERBOSE_LOGGING=true VSCODE_IPC_HOOK_EXTHOST=/var/folders/bm/wby56bk53dj4fbbtrvqsslqw0000gn/T/vscode-ipc-6d648d60-2fad-4ed4-a2c2-832c5f1c6a16.sock VSCODE_HANDLES_UNCAUGHT_ERRORS=true VSCODE_LOG_STACK=false VSCODE_PREVENT_FOREIGN_INSPECT=true ELECTRON_RUN_AS_NODE=1 APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL=true PATH=/Users/igor/.pyenv/shims:/Users/igor/.pyenv/bin:/Users/igor/.nvm/versions/node/v10.13.0/bin:/Users/igor/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/lib:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/brew:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/common-aliases:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/git:/Users/igor/.antigen/bundles/zsh-users/zsh-syntax-highlighting:/Users/igor/.antigen/bundles/zsh-users/zsh-completions:/Users/igor/.antigen/bundles/zsh-users/zsh-autosuggestions:/Users/igor/.antigen/bundles/mafredri/zsh-async:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/pip:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/command-not-found PYTHONIOENCODING=UTF-8 PYTHONUNBUFFERED=1 /Users/igor/.pyenv/versions/3.6.4/bin/python /Users/igor/.vscode/extensions/ms-python.python-2019.9.34911/pythonFiles/ptvsd_launcher.py --default --client --host localhost --port 64273 -m flask run --host 0.0.0.0 --port 8000 --no-debugger --no-reload 
 3618  cd /Users/igor/dev/applications/app-templates/python-video/stream-video-browser ; env FLASK_APP=webstreaming FLASK_ENV=development FLASK_DEBUG=1 TMPDIR=/var/folders/bm/wby56bk53dj4fbbtrvqsslqw0000gn/T/ __CF_USER_TEXT_ENCODING=0x1F5:0x0:0x0 SHELL=/bin/zsh HOME=/Users/igor Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.DaIBLPsZbX/Render SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.iP8vIb8Upq/Listeners LOGNAME=igor XPC_SERVICE_NAME=com.microsoft.VSCode.5952 USER=igor XPC_FLAGS=0x0 'VSCODE_NLS_CONFIG={"locale":"en-us","availableLanguages":{},"_languagePackSupport":true}' 'VSCODE_NODE_CACHED_DATA_DIR=/Users/igor/Library/Application Support/Code/CachedData/b37e54c98e1a74ba89e03073e5a3761284e3ffb0' 'VSCODE_LOGS=/Users/igor/Library/Application Support/Code/logs/20190930T100819' 'VSCODE_IPC_HOOK=/Users/igor/Library/Application Support/Code/1.38.1-main.sock' VSCODE_PID=83050 AWS_HOME=/Users/igor/.aws LC_CTYPE= LESS=-R LSCOLORS=Gxfxcxdxbxegedabagacad NVM_BIN=/Users/igor/.nvm/versions/node/v10.13.0/bin NVM_CD_FLAGS=-q NVM_DIR=/Users/igor/.nvm OLDPWD=/ PAGER=less PWD=/ PYENV_ROOT=/Users/igor/.pyenv PYENV_SHELL=zsh SHLVL=0 ZSH=/Users/igor/.oh-my-zsh '_=/Applications/Visual Studio Code.app/Contents/MacOS/Electron' AMD_ENTRYPOINT=vs/workbench/services/extensions/node/extensionHostProcess PIPE_LOGGING=true VERBOSE_LOGGING=true VSCODE_IPC_HOOK_EXTHOST=/var/folders/bm/wby56bk53dj4fbbtrvqsslqw0000gn/T/vscode-ipc-6d648d60-2fad-4ed4-a2c2-832c5f1c6a16.sock VSCODE_HANDLES_UNCAUGHT_ERRORS=true VSCODE_LOG_STACK=false VSCODE_PREVENT_FOREIGN_INSPECT=true ELECTRON_RUN_AS_NODE=1 APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL=true PATH=/Users/igor/.pyenv/shims:/Users/igor/.pyenv/bin:/Users/igor/.nvm/versions/node/v10.13.0/bin:/Users/igor/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/lib:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/brew:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/common-aliases:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/git:/Users/igor/.antigen/bundles/zsh-users/zsh-syntax-highlighting:/Users/igor/.antigen/bundles/zsh-users/zsh-completions:/Users/igor/.antigen/bundles/zsh-users/zsh-autosuggestions:/Users/igor/.antigen/bundles/mafredri/zsh-async:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/pip:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/command-not-found PYTHONIOENCODING=UTF-8 PYTHONUNBUFFERED=1 /Users/igor/.pyenv/versions/3.6.4/bin/python /Users/igor/.vscode/extensions/ms-python.python-2019.9.34911/pythonFiles/ptvsd_launcher.py --default --client --host localhost --port 64326 -m flask run --host 0.0.0.0 --port 8000 --no-debugger --no-reload 
 3619  cd /Users/igor/dev/applications/app-templates/python-video/stream-video-browser ; env FLASK_APP=webstreaming FLASK_ENV=development FLASK_DEBUG=1 TMPDIR=/var/folders/bm/wby56bk53dj4fbbtrvqsslqw0000gn/T/ __CF_USER_TEXT_ENCODING=0x1F5:0x0:0x0 SHELL=/bin/zsh HOME=/Users/igor Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.DaIBLPsZbX/Render SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.iP8vIb8Upq/Listeners LOGNAME=igor XPC_SERVICE_NAME=com.microsoft.VSCode.5952 USER=igor XPC_FLAGS=0x0 'VSCODE_NLS_CONFIG={"locale":"en-us","availableLanguages":{},"_languagePackSupport":true}' 'VSCODE_NODE_CACHED_DATA_DIR=/Users/igor/Library/Application Support/Code/CachedData/b37e54c98e1a74ba89e03073e5a3761284e3ffb0' 'VSCODE_LOGS=/Users/igor/Library/Application Support/Code/logs/20190930T100819' 'VSCODE_IPC_HOOK=/Users/igor/Library/Application Support/Code/1.38.1-main.sock' VSCODE_PID=83050 AWS_HOME=/Users/igor/.aws LC_CTYPE= LESS=-R LSCOLORS=Gxfxcxdxbxegedabagacad NVM_BIN=/Users/igor/.nvm/versions/node/v10.13.0/bin NVM_CD_FLAGS=-q NVM_DIR=/Users/igor/.nvm OLDPWD=/ PAGER=less PWD=/ PYENV_ROOT=/Users/igor/.pyenv PYENV_SHELL=zsh SHLVL=0 ZSH=/Users/igor/.oh-my-zsh '_=/Applications/Visual Studio Code.app/Contents/MacOS/Electron' AMD_ENTRYPOINT=vs/workbench/services/extensions/node/extensionHostProcess PIPE_LOGGING=true VERBOSE_LOGGING=true VSCODE_IPC_HOOK_EXTHOST=/var/folders/bm/wby56bk53dj4fbbtrvqsslqw0000gn/T/vscode-ipc-6d648d60-2fad-4ed4-a2c2-832c5f1c6a16.sock VSCODE_HANDLES_UNCAUGHT_ERRORS=true VSCODE_LOG_STACK=false VSCODE_PREVENT_FOREIGN_INSPECT=true ELECTRON_RUN_AS_NODE=1 APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL=true PATH=/Users/igor/.pyenv/shims:/Users/igor/.pyenv/bin:/Users/igor/.nvm/versions/node/v10.13.0/bin:/Users/igor/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/lib:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/brew:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/common-aliases:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/git:/Users/igor/.antigen/bundles/zsh-users/zsh-syntax-highlighting:/Users/igor/.antigen/bundles/zsh-users/zsh-completions:/Users/igor/.antigen/bundles/zsh-users/zsh-autosuggestions:/Users/igor/.antigen/bundles/mafredri/zsh-async:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/pip:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/command-not-found PYTHONIOENCODING=UTF-8 PYTHONUNBUFFERED=1 /Users/igor/.pyenv/versions/3.6.4/bin/python /Users/igor/.vscode/extensions/ms-python.python-2019.9.34911/pythonFiles/ptvsd_launcher.py --default --client --host localhost --port 64347 -m flask run --host 0.0.0.0 --port 8000 --no-debugger --no-reload 
 3620  cd /Users/igor/dev/applications/app-templates/python-video/stream-video-browser ; env FLASK_APP=webstreaming FLASK_ENV=development FLASK_DEBUG=1 TMPDIR=/var/folders/bm/wby56bk53dj4fbbtrvqsslqw0000gn/T/ __CF_USER_TEXT_ENCODING=0x1F5:0x0:0x0 SHELL=/bin/zsh HOME=/Users/igor Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.DaIBLPsZbX/Render SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.iP8vIb8Upq/Listeners LOGNAME=igor XPC_SERVICE_NAME=com.microsoft.VSCode.5952 USER=igor XPC_FLAGS=0x0 'VSCODE_NLS_CONFIG={"locale":"en-us","availableLanguages":{},"_languagePackSupport":true}' 'VSCODE_NODE_CACHED_DATA_DIR=/Users/igor/Library/Application Support/Code/CachedData/b37e54c98e1a74ba89e03073e5a3761284e3ffb0' 'VSCODE_LOGS=/Users/igor/Library/Application Support/Code/logs/20190930T100819' 'VSCODE_IPC_HOOK=/Users/igor/Library/Application Support/Code/1.38.1-main.sock' VSCODE_PID=83050 AWS_HOME=/Users/igor/.aws LC_CTYPE= LESS=-R LSCOLORS=Gxfxcxdxbxegedabagacad NVM_BIN=/Users/igor/.nvm/versions/node/v10.13.0/bin NVM_CD_FLAGS=-q NVM_DIR=/Users/igor/.nvm OLDPWD=/ PAGER=less PWD=/ PYENV_ROOT=/Users/igor/.pyenv PYENV_SHELL=zsh SHLVL=0 ZSH=/Users/igor/.oh-my-zsh '_=/Applications/Visual Studio Code.app/Contents/MacOS/Electron' AMD_ENTRYPOINT=vs/workbench/services/extensions/node/extensionHostProcess PIPE_LOGGING=true VERBOSE_LOGGING=true VSCODE_IPC_HOOK_EXTHOST=/var/folders/bm/wby56bk53dj4fbbtrvqsslqw0000gn/T/vscode-ipc-6d648d60-2fad-4ed4-a2c2-832c5f1c6a16.sock VSCODE_HANDLES_UNCAUGHT_ERRORS=true VSCODE_LOG_STACK=false VSCODE_PREVENT_FOREIGN_INSPECT=true ELECTRON_RUN_AS_NODE=1 APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL=true PATH=/Users/igor/.pyenv/shims:/Users/igor/.pyenv/bin:/Users/igor/.nvm/versions/node/v10.13.0/bin:/Users/igor/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/lib:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/brew:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/common-aliases:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/git:/Users/igor/.antigen/bundles/zsh-users/zsh-syntax-highlighting:/Users/igor/.antigen/bundles/zsh-users/zsh-completions:/Users/igor/.antigen/bundles/zsh-users/zsh-autosuggestions:/Users/igor/.antigen/bundles/mafredri/zsh-async:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/pip:/Users/igor/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/command-not-found PYTHONIOENCODING=UTF-8 PYTHONUNBUFFERED=1 /Users/igor/.pyenv/versions/3.6.4/bin/python /Users/igor/.vscode/extensions/ms-python.python-2019.9.34911/pythonFiles/ptvsd_launcher.py --default --client --host localhost --port 64409 -m flask run --host 0.0.0.0 --port 8000 --no-debugger --no-reload 
 3621  python webstreaming.py --ip 127.0.0.1 --port 8000
 3622  pwd
 3623  cd ~dev/demo
 3624  cd ~/dev/demo
 3625  cd ~/demo
 3626  ls
 3627  brew update
 3628  brew install azure-cli
 3629  az
 3630  az login
 3631  az vm
 3632  az vm list
 3633  az group
 3634  az group list
 3635  az ad sp create-for-rbac --name ServicePrincipalName --sdk-auth > azure.auth
 3636  ls -lrt
 3637  cat azure.auth
 3638  stern -n automation-hub . --tail 20 --exclude /ping --template '{{ .PodName }} {{ .Message}}'
 3639  az login
 3640  az group list
 3641  cat azure.auth
 3642  pwd
 3643  ls
 3644  ls -lrt
 3645  cat agilstack2.pem
 3646  cat agilestacks.pem
 3647  ssh-keygen -m RFC4716 
 3648  ls -lrt
 3649  cat test1az.pub
 3650  az list-principals
 3651  az ad sp list --show-mine --query '[].{"id":"appId", "tenant":"appOwnerTenantId"}'
 3652  az role assignment list
 3653  az ad sp create-for-rbac --name ServicePrincipalName1 --sdk-auth
 3654  az role assignment list
 3655  cat azure.auth
 3656  ls -lrt
 3657  pwd
 3658  ls -lrt
 3659  cat azure.auth
 3660  history
 3661  ls -lrt
 3662  cat test1az.pub
 3663  cat test1az
 3664  cat azure.auth
 3665  python webstreaming.py --ip 127.0.0.1 --port 8000
 3666  python webstreaming.py --ip 127.0.0.1 --port 8000 --source 1
 3667  history
 3668  pwd
 3669  docker build -t webstream .
 3670  cd /Users/igor/dev/applications/app-templates/python-video/stream-video-browser
 3671  pwd
 3672  ls
 3673  ls -lrt
 3674  cat __init__.py
 3675  docker build -t webstream .
 3676  docker run -ti -p 8000:8000 --rm webstream python3 webstreaming.py --source http://131.173.8.23/mjpg/video.mjpg
 3677  python webstreaming.py --ip 127.0.0.1 --port 8000
 3678  cp ~/Downloads/real-time-object-detection/* .
 3679  python real_time_object_detection.py --prototxt MobileNetSSD_deploy.prototxt.txt --model MobileNetSSD_deploy.caffemodel
 3680  python object_detection.py --prototxt MobileNetSSD_deploy.prototxt.txt --model MobileNetSSD_deploy.caffemodel
 3681  python object_detection.py --ip 127.0.0.1 --port 8000
 3682  python object_detection.py --ip 127.0.0.1 --port 8000 --prototxt MobileNetSSD_deploy.prototxt.txt --model MobileNetSSD_deploy.caffemodel
 3683  python real_time_object_detection.py --prototxt MobileNetSSD_deploy.prototxt.txt --model MobileNetSSD_deploy.caffemodel
 3684  python object_detection.py --ip 127.0.0.1 --port 8000 --prototxt MobileNetSSD_deploy.prototxt.txt --model MobileNetSSD_deploy.caffemodel
 3685  python object_detection.py --ip 127.0.0.1 --port 8000 --prototxt MobileNetSSD_deploy.prototxt.txt --model MobileNetSSD_deploy.caffemodel --source http://131.173.8.23/mjpg/video.mjpg
 3686  cp ~/Downloads/person-bicycle-car-detection.mp4 video/test_video.mp4
 3687  python object_detection.py --ip 127.0.0.1 --port 8000 --prototxt MobileNetSSD_deploy.prototxt.txt --model MobileNetSSD_deploy.caffemodel --source http://131.173.8.23/mjpg/video.mjpg
 3688  cp ~/Downloads/person-bicycle-car-detection.mp4 video/test_video.mp4
 3689  ls -lrt video
 3690  python object_detection.py --ip 127.0.0.1 --port 8000 --prototxt MobileNetSSD_deploy.prototxt.txt --model MobileNetSSD_deploy.caffemodel --source http://131.173.8.23/mjpg/video.mjpg
 3691  cp ~/Downloads/car-detection.mp4 video/test_video.mp4
 3692  python object_detection.py --ip 127.0.0.1 --port 8000 --prototxt MobileNetSSD_deploy.prototxt.txt --model MobileNetSSD_deploy.caffemodel --source http://131.173.8.23/mjpg/video.mjpg
 3693  cp ~/Downloads/car-detection.mp4 video/test_video.mp4
 3694  python object_detection.py --ip 127.0.0.1 --port 8000 --prototxt MobileNetSSD_deploy.prototxt.txt --model MobileNetSSD_deploy.caffemodel --source http://131.173.8.23/mjpg/video.mjpg
 3695  cp ~/Downloads/bottle-detection.mp4 video/test_video.mp4
 3696  python object_detection.py --ip 127.0.0.1 --port 8000 --prototxt MobileNetSSD_deploy.prototxt.txt --model MobileNetSSD_deploy.caffemodel --source http://131.173.8.23/mjpg/video.mjpg
 3697  cp ~/Downloads/bottle-detection.mp4 video/test_video.mp4
 3698  python object_detection.py --ip 127.0.0.1 --port 8000 --prototxt MobileNetSSD_deploy.prototxt.txt --model MobileNetSSD_deploy.caffemodel --source http://131.173.8.23/mjpg/video.mjpg
 3699  python webstreaming.py --ip 127.0.0.1 --port 8000
 3700  python webstreaming.py --ip 127.0.0.1 --port 8000 --source 1
 3701  python webstreaming.py --ip 127.0.0.1 --port 8000 --source 0
 3702  python object_detection.py --ip 127.0.0.1 --port 8000 --prototxt MobileNetSSD_deploy.prototxt.txt --model MobileNetSSD_deploy.caffemodel --source http://131.173.8.23/mjpg/video.mjpg
 3703  python object_detection.py --ip 127.0.0.1 --port 8000 --prototxt MobileNetSSD_deploy.prototxt.txt --model MobileNetSSD_deploy.caffemodel
 3704  python object_detection.py --ip 127.0.0.1 --port 8000 --prototxt MobileNetSSD_deploy.prototxt.txt --model MobileNetSSD_deploy.caffemodel --source http://131.173.8.23/mjpg/video.mjpg
 3705  az ad sp list
 3706  ls -lrt
 3707  az
 3708  az account
 3709  az account show
 3710  az security
 3711  az ad
 3712  az ad user
 3713  az ad user list
 3714  jq --version
 3715  brew update jq
 3716  brew upgrade jq
 3717  jq --version
 3718  pwd
 3719  cd ~/dev/agilestacks-components/sweeper
 3720  set ACCOUNTID=435841353077
 3721  aws s3 ls
 3722  ls
 3723  vi hist6.txt
 3724  export AWS_PROFILE=spec
 3725  aws s3 ls
 3726  vi ~/.aws/config
 3727  vi ~/.aws/credentials
 3728  export AWS_PROFILE=spec
 3729  aws s3 ls
 3730  ls
 3731  ./main.py sweep --account 435841353077
 3732  ls
 3733  history >hist_stage1.txt
 3734  vi hist_stage1.txt
 3735  cd ~/dev/agilestacks-components/stacks/stage
 3736  stern -n automation-hub . --tail 20 --exclude /ping --template '{{ .PodName }} {{ .Message}}'
 3737  pwd
 3738  kubectx purple.stage.agilestacks.i
 3739  vi .envrc
 3740  direnv allow
 3741  kubectx purple.stage.agilestacks.i
 3742  kubectx purple.stage.agilestacks.io
 3743  stern -n automation-hub . --tail 20 --exclude /ping --template '{{ .PodName }} {{ .Message}}'
 3744  pwd
 3745  cd ../stacks/prod
 3746  ls
 3747  stern -n automation-hub . --tail 20 --exclude /ping --template '{{ .PodName }} {{ .Message}}'
 3748  pwd
 3749  cd ../stacks/prod
 3750  cd ../prod
 3751  stern -n automation-hub . --tail 20 --exclude /ping --template '{{ .PodName }} {{ .Message}}'
 3752  vi .envrc
 3753  pwd
 3754  vi .envrc
 3755  stern -n automation-hub . --tail 20 --exclude /ping --template '{{ .PodName }} {{ .Message}}'
 3756  brew upgrade kubectl
 3757  stern -n automation-hub . --tail 20 --exclude /ping --template '{{ .PodName }} {{ .Message}}'
 3758  kubectl logs -f job/cloud-specs-deploy-o85zt
 3759  kubectl --version
 3760  kubectl logs -f job/cloud-specs-deploy-o85zt
 3761  kubectx red.agilestacks.io
 3762  kubectl logs -f job/cloud-specs-deploy-o85zt
 3763  kubectl version
 3764  kubectl get nodes
 3765  ls -lrt
 3766  ls
 3767  make kubeconfig
 3768  kubectl config delete-context red.agilestacks.io
 3769  make kubeconfig
 3770  kubectx red.agilestacks.io
 3771  kubectl get nodes
 3772  stern -n automation-hub . --tail 20 --exclude /ping --template '{{ .PodName }} {{ .Message}}'
 3773  kubectl -n automation-hub logs automation-hub-84cf86f845-r7vj7
 3774  cd ~/dev/agilestacks-components/sweeper
 3775  export AWS_PROFILE=demo05
 3776  aws s3 ls
 3777  ./main.py sweep --account 806215566201
 3778  aws s3 ls
 3779  aws s3 rm files.ml4.demo05.superhub.io
 3780  vi hist_stage1.txt
 3781  ./main.py sweep --account 806215566201 --region us-east1
 3782  ./main.py sweep --account 806215566201 --region us-east
 3783  ./main.py sweep --account 806215566201 --only us-east1
 3784  ./main.py sweep --account 806215566201 --only s3
 3785  kubectl -n automation-hub logs automation-hub-84cf86f845-r7vj7
 3786  ifconfig en0
 3787  kubectl -n automation-hub logs automation-hub-84cf86f845-r7vj7
 3788  cd ~/demo
 3789  ls -lrt
 3790  export AWS_PROFILE=poc01
 3791  aws s3 ls
 3792  vi ~/.aws/credentials
 3793  export AWS_PROFILE=poc01
 3794  aws s3 ls
 3795  ./main.py sweep --account 608332689354
 3796  aws s3 ls
 3797  aws s3 help
 3798  aws s3 rb agilestacks.swiftdemo-fra.superhub.io
 3799  aws s3 rb s3://agilestacks.swiftdemo-fra.superhub.io
 3800  aws s3 rb agilestacks.swiftdev01.superhub.io
 3801  aws s3 rb "agilestacks.swiftdev01.superhub.io"
 3802  aws s3 ls
 3803  ./main.py sweep --account 608332689354 --service s3
 3804  aws s3 ls
 3805  export AWS_PROFILE=sol01
 3806  aws s3 ls
 3807  vi ~/.aws/credentials
 3808  aws s3 ls
 3809  ./main.py sweep --account 938880336972
 3810  pwd
 3811  curl -vk https://api.letsb.smoke-akranga-aws01.dev.superhub.io:443
 3812  curl -vk https://api.letsb.smoke-akranga-aws01.dev.superhub.io
 3813  kubectl -n automation-hub logs automation-hub-84cf86f845-r7vj7
 3814  pwd
 3815  ls
 3816  cp ~/Downloads/kubeconfig.ml7.demo5.superhub.io.yaml .
 3817  export KUBECONFIG=/Users/igor/Downloads/kubeconfig.ml7.demo5.superhub.io.yaml
 3818  kubectl get nodes
 3819  kubectl describe node ip-10-0-33-125.ec2.internal
 3820  kubectl describe node ip-10-0-35-169.ec2.internal
 3821  ls
 3822  vu his3.txt
 3823  vi his3.txt
 3824  ls
 3825  kubectl describe node ip-10-0-35-169.ec2.internal
 3826  ssh -i agilestacks.pem core@34.201.252.229
 3827  kubectl get nodes
 3828  kubectl describe node ip-10-0-ip-10-0-35-169.ec2.internal
 3829  kubectl describe node ip-10-0-35-169.ec2.internal
 3830  ssh -i agilestacks.pem core@34.201.252.229
 3831  docker system df
 3832  kubectl get nodes
 3833  kubectl describe node ip-10-0-39-219.ec2.internal
 3834  ssh -i agilestacks.pem core@35.173.220.74
 3835  export AWS_PROFILE=demo05
 3836  aws s3 ls
 3837  ./main.py sweep --account 806215566201
 3838  aws s3 ls
 3839  export AWS_PROFILE=demo06
 3840  aws s3 ls
 3841  vi ~/.aws/credentials
 3842  export AWS_PROFILE=demo06
 3843  vi ~/.aws/credentials
 3844  aws s3 ls
 3845  ls -lrt
 3846  cat agilestacks.pem
 3847  export AWS_PROFILE=demo10
 3848  aws s3 ls
 3849  export KUBECONFIG=/Users/igor/Downloads/kubeconfig.dev1.demo10.superhub.io.yaml
 3850  kubectl get nodes
 3851  kubectl describe node ip-10-0-32-206.ec2.internal
 3852  ssh -i agilestacks.pem core@54.145.89.1
 3853  kubectl get pods --all-namespaces
 3854  cat agilestacks.pem
 3855  ssh -i agilestacks.pem core@54.145.89.1
 3856  kubectl get nodes
 3857  kubectl describe node ip-10-0-32-206.ec2.internal
 3858  pwd
 3859  ls
 3860  history
 3861  cd ~/dev/agilestacks-components/stacks/prod
 3862  kubectl get nodes
 3863  kubectx blue.agilestacks.io
 3864  ls -lrt
 3865  vi params.yaml
 3866  history
 3867  vi .envrc
 3868  direnv allow
 3869  make kubeconfig
 3870  kubectx blue.agilestacks.io
 3871  kubectl get nodes
 3872  stern -n automation-hub . --tail 20 --exclude /ping --template '{{ .PodName }} {{ .Message}}'
 3873  kubectl get nodes
 3874  ssh -i agilestacks.pem core@54.145.89.1
 3875  cd ~/dev/demo
 3876  cd ~/demo
 3877  ls
 3878  ssh -i agilestacks.pem core@54.145.89.1
 3879  kubectl get nodes
 3880  pwd
 3881  ls -lrt ..
 3882  direnv
 3883  cd ~/demo
 3884  ls
 3885  cd ~/dev/demo
 3886  history
 3887  cd ~/demo
 3888  pwd
 3889  ls
 3890  ls -lrt
 3891  pwd
 3892  ls
 3893  cd work
 3894  ls
 3895  mkdir ekskf
 3896  cd ekskf
 3897  cd ~/demo
 3898  ls
 3899  vi ~/.aws/credentials
 3900  pwd
 3901  curl https://eksworkshop.com/kubeflow/kubeflow.files/mnist-training.yaml
 3902  cd ~/dev/agilestacks-components/sweeper
 3903  export AWS_PROFILE=spec
 3904  ./main.py sweep --account 435841353077
 3905  aws s3 ls
 3906  aws list-ssh-public-keys
 3907  aws ec2 list-ssh-public-keys
 3908  aws ec2 describe-key-pairs
 3909  aws ec2 describe-load-balancers
 3910  aws describe-load-balancers
 3911  aws alb describe-load-balancers
 3912  aws elb describe-load-balancers
 3913  aws elbv2 describe-load-balancers
 3914  aws s3 ls
 3915  aws elb describe-load-balancers
 3916  aws ec2 describe-load-balancers
 3917  aws ec2 list-ssh-public-keys
 3918  aws ec2 describe-key-pairs
 3919  ./main.py sweep --account 435841353077
 3920  aws s3 ls
 3921  pwd
 3922  cd ~/work
 3923  ls -lrt
 3924  mkdir awsapp
 3925  cd awsapp
 3926  export AWS_DEFAULT_REGION=eu-west-1\nexport AWS_ACCESS_KEY_ID=ASIA6I5FWRDSTE3VAT6J\nexport AWS_SECRET_ACCESS_KEY=rCtRz4Mz8A6suG9MrEuMc733BK/9uFExAI43iegB\nexport AWS_SESSION_TOKEN=FwoGZXIvYXdzEPv//////////wEaDMobunWY1PpeNKBp6CKuAcsroQ9gmiRblaPZs3FSo2zLuKXm3BVPnRe4wEySuFPpG8WbBMdIdug6nJz4tQg3TY/UT32Z4CdNA5CDIVWxKE6ohBnUL6SoRe6Sodd12YJUa5wuZeQhKnJVXzmgRp5zU7BPnEv1up+8BDlnnwpK5mKWoZEtf1M2Yy2RvOFqHqbtokwMTa8sOn2Zj+6MWyczBM+L6TIRACLRJ+8nXWDSPFn6UPKipgkKIBR/3XbsMCiVu5rvBTItsQHG2/LvZej7dx0aj4Of47ofdvCfWH4Yuam46NGoJcD4gJ37kuP5GHyQ+Iav
 3927  aws s3 ls
 3928  aws cloudformation 
 3929  aws cloudformation help
 3930  aws cloudformation list-stacks
 3931  ls
 3932  git clone -b python https://github.com/aws-samples/aws-modern-application-workshop.git
 3933  aws s3 ls
 3934  aws cloudformation list-stacks
 3935  cd ~/environment/aws-modern-application-workshop/module-2/app
 3936  aws ecr describe-images --repository-name mythicalmysfits/service
 3937  pwd
 3938  cd ..
 3939  mkdir awsml
 3940  cd awsml
 3941  git clone https://github.com/rthamman/reinvent-2019/
 3942  pwd
 3943  export AWS_DEFAULT_REGION=us-east-1\nexport AWS_ACCESS_KEY_ID=ASIAQCPYJW52FM7ZKRZI\nexport AWS_SECRET_ACCESS_KEY=K9fF6qqlFAMRsGh/JZ/P580XmkCDnhqxwt8pnUuZ\nexport AWS_SESSION_TOKEN=FwoGZXIvYXdzEC0aDBq+yIZ8RDdoBFs6fCKuAbkTNR+ib0ruSpNhdRRGgr9DxDS3iVGBzT/CqUinW79lqNu3B0IKhQit/enNI9tF9JUx/ck34H+Cyr2MVlWhBb5pweg7YYix8AkV18fxJCwCq6+2WXCVVaiyhYkJT7aCo4KVkVM9Gn7AW6AIjUaOMOTOJd0zOc1JwLgR92OApNJThuwvXkUNPP2/2eOAtqlGjCEyq1uVFQ6pzc2WnlCdqg9Ps3rpYACpnoDLuQ8QxSjqv6XvBTIt1K6bPRP/oNJ01B2St2Ck3F3xvLuDcAcuYgajpq8x0RNFB7lXyqT9BMkPv5I1\n
 3944  aws s3 ls
 3945  aws ec2 list-ssh-public-keys
 3946  ls -lrt
 3947  pwd
 3948  cp ~/Downloads/ee-default-keypair.pem .
 3949  rm ~/Downloads/ee-default-keypair.pem
 3950  virtualenv --python=python3.6 test_env_p36
 3951  source test_env_p36/bin/activate
 3952  chmod 400 ee-default-keypair.pem
 3953  ssh -i "ee-default-keypair.pem" ubuntu@ec2-52-90-20-158.compute-1.amazonaws.com
 3954  cd ~/work/awsml
 3955  ls
 3956  ssh -i "ee-default-keypair.pem" ubuntu@ec2-34-204-196-112.compute-1.amazonaws.com\n
 3957  ssh -A -i "ee-default-keypair.pem" ubuntu@ec2-52-90-20-158.compute-1.amazonaws.com
 3958  ssh -i "ee-default-keypair.pem" ./ee--default-keypair.pem ubuntu@ec2-52-90-20-158.compute-1.amazonaws.com
 3959  scp -i "ee-default-keypair.pem" ./ee-default-keypair.pem ubuntu@ec2-52-90-20-158.compute-1.amazonaws.com
 3960  ssh -i "ee-default-keypair.pem" ./ee--default-keypair.pem ubuntu@ec2-52-90-20-158.compute-1.amazonaws.com
 3961  ssh -i "ee-default-keypair.pem" ubuntu@ec2-52-90-20-158.compute-1.amazonaws.com
 3962  ssh -i "ee-default-keypair.pem" ubuntu@ec2-34-204-196-112.compute-1.amazonaws.com\n
 3963  cd ~/work/awsml
 3964  ssh -i "ee-default-keypair.pem" ubuntu@ec2-34-204-196-112.compute-1.amazonaws.com\n
 3965  pwd
 3966  ls
 3967  git clone https://github.com/aws-samples/aws-sagemaker-build.git
 3968  ls -lrt
 3969  pw
 3970  pwd
 3971  cd ~/work/awsml/aws-sagemaker-build
 3972  ls -lrt
 3973  aws s3 cp https://s3.amazonaws.com/aws-machine-learning-blog/artifacts/sagebuild/v1/template.json ./cftemplate.json
 3974  aws s3 cp s3://aws-machine-learning-blog/artifacts/sagebuild/v1/template.json ./cftemplate.json
 3975  ls -lrt
 3976  pwd
 3977  rm cftemplate.json
 3978  aws s3 cp s3://aws-machine-learning-blog/artifacts/sagebuild/v1/template.json ./cftemplate.json
 3979  pwd
 3980  ls
 3981  cd aws-sagemaker-build
 3982  ls
 3983  export AWS_PROFILE=spec
 3984  aws s3 ls
 3985  pwd
 3986  aws s3 ls
 3987  ls
 3988  cp config.js.example config.js
 3989  ls
 3990  npm install
 3991  ls -lrt
 3992  aws s3 mb s3://asisagebuild
 3993  aws s3 ls
 3994  npm run up
 3995  ls -lrt
 3996  npm install
 3997  npm run up
 3998  xcode-select --install
 3999  npm run up
 4000  aws s3 ls s3://asisagebuild/artifacts/blog
 4001  npm run up
 4002  aws s3 ls s3://asisagebuild/artifacts/blog
 4003  npm run up
 4004  pwd
 4005  ls -lrt
 4006  cd ..
 4007  git clone https://git-codecommit.us-east-1.amazonaws.com/v1/repos/SageBuild
 4008  ls -lrt
 4009  rm -r SageBuild
 4010  rm -r SageBuild/*
 4011  ls -lrt
 4012  rm -ar SageBuild
 4013  rm -rf SageBuild
 4014  ls -lrt
 4015  cd aws-sagemaker-build
 4016  ls -lrt
 4017  npm run up
 4018  aws s3 ls s3://asisagebuild/artifacts/
 4019  aws s3 ls s3://aws-machine-learning-blog/
 4020  aws s3 ls s3://aws-machine-learning-blog/artifacts
 4021  aws s3 ls s3://aws-machine-learning-blog/artifacts/sagebuild
 4022  aws s3 ls s3://aws-machine-learning-blog/artifacts/sagebuild/V1
 4023  aws s3 ls s3://aws-machine-learning-blog/artifacts/sagebuild/V1/template.json
 4024  aws s3 ls s3://sagebuild/artifacts/blog
 4025  aws s3 ls s3://sagebuild/
 4026  aws s3 ls s3://asisagebuild/
 4027  npm run up
 4028  npm run down
 4029  npm run up
 4030  ls -lrt
 4031  npm run up
 4032  aws cloudformation list-stacks --region us-east-1 
 4033  aws cloudformation list-stacks
 4034  pwd
 4035  cd aws-sagemaker-build
 4036  ls -lrt
 4037  export AWS_PROFILE=spec
 4038  ls -lrt
 4039  cd build
 4040  ls -lrt
 4041  ls -lrt *
 4042  aws cloudformation list-stacks
 4043  vi ~/.aws/credentials
 4044  vi ~/.aws/config
 4045  export AWS_PROFILE=spec
 4046  aws cloudformation list-stacks
 4047  export AWS_PROFILE=spec
 4048  aws cloudformation list-stacks
 4049  aws s3 ls
 4050  node l -lrt
 4051  ls -lrt
 4052  ls -lr build
 4053  ls -lr build/templates
 4054  vi build/templates/main.json
 4055  npm run down
 4056  aws cloudformation list-stacks
 4057  npm run up
 4058  aws cloudformation list-stacks
 4059  npm run down
 4060  aws s3 ls
 4061  cd ~/dev/agilestacks-components/sweeper
 4062  aws s3 ls
 4063  export AWS_PROFILE=spec
 4064  export AWS_PROFILE=dev
 4065  aws s3 ls
 4066  export AWS_PROFILE=default
 4067  aws s3 ls
 4068  aws cloudformation list-stacks
 4069  aws s3 ls
 4070  aws cloudformation list-stacks
 4071  ls -lrt
 4072  history
 4073  ls -lrt
 4074  vi ~/.aws/config
 4075  vi ~/.aws/
 4076  vi ~/.aws/credentials
 4077  export AWS_DEFAULT_REGION=us-east-1
 4078  export AWS_PROFILE=spec
 4079  export AWS_ACCESS_KEY_ID=AKIAWK6RLIV2SC6VPIHH
 4080  export AWS_SECRET_ACCESS_KEY=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
 4081  aws cloudformation list-stacks
 4082  npm run up
 4083  cd ~/work/awsml/aws-sagemaker-build
 4084  export AWS_PROFILE=default
 4085  aws cloudformation list-stacks
 4086  aws cloudformation list-stacks --region us-east-1 
 4087  aws cloudformation list-stacks
 4088  npm run down
 4089  vi ~/.aws/credentials
 4090  export AWS_PROFILE=default
 4091  aws cloudformation list-stacks
 4092  npm run up
 4093  npm run down
 4094  ls -lrt
 4095  npm run up
 4096  aws s3 mb s3://spec-sagebuild --region us-east-1
 4097  aws s3api put-bucket-versioning --bucket spec-sagebuildÂ --versioning-configuration Status=Enabled
 4098  aws s3api put-bucket-versioning --bucket "spec-sagebuild"Â --versioning-configuration Status=Enabled
 4099  aws s3 rb s3://spec-sagebuild --region us-east-1
 4100  aws s3 mb s3://specsagebuild --region us-east-1
 4101  aws s3api put-bucket-versioning --bucket specsagebuildÂ --versioning-configuration Status=Enabled
 4102  aws s3api put-bucket-versioning --bucket specsagebuild --versioning-configuration Status=Enabled
 4103  npm run up
 4104  npm run down
 4105  aws s3 rb s3://asisagebuild --region us-east-1
 4106  aws s3 rb s3://asisagebuild
 4107  aws s3 rb s3://asisagebuild --force
 4108  aws cloudformation list-stacks
 4109  aws s3 ls
 4110  ls -lrt
 4111  ls examples
 4112  ls examples/activo
 4113  cd ~/dev/agilestacks-components/sweeper
 4114  export AWS_PROFILE=demo10
 4115  aws s3 ls
 4116  ./main.py sweep --account 299380738002
 4117  aws s3 ls
 4118  aws s3 rb s3://thanos-main-cicd.demo10.superhub.io
 4119  aws s3 rb s3://thanos-main-cicd.demo10.superhub.io --force
 4120  aws s3 ls
 4121  vi ~/.aws/credentials
 4122  export AWS_PROFILE=iddqd
 4123  aws s3 ls
 4124  aws iam list-users
 4125  aws iam update-login-profile --user-name arkadi --password z56wJ~C$7/5~6Un[
 4126  aws iam update-login-profile --user-name arkadi --password "z56wJ~C$7/5~6Un["
 4127  aws iam update-login-profile --user-name igor --password "w4PkgTDL_'8uKA%d"
 4128  aws iam update-login-profile --user-name arkadi --password "z56wJFC$7/5C6Un1"
 4129  aws iam update-login-profile --user-name arkadi --password "z56wJFC$7/5C%6Un1"
 4130  export AWS_PROFILE=spec
 4131  aws s3 ls
 4132  aws s3 ls s3://specs-kf1
 4133  aws s3 ls s3://specs-kf1/latest
 4134  vi ~/.aws/credentials
 4135  export AWS_PROFILE=demo04
 4136  aws s3 ls
 4137  pwd
 4138  ./main.py sweep --account 976312427958
 4139  export AWS_PROFILE=demo03
 4140  ./main.py sweep --account 630344061260
 4141  vi ~/.aws/credentials
 4142  export AWS_PROFILE=demo03
 4143  aws s3 ls
 4144  vi ~/.aws/credentials
 4145  export AWS_PROFILE=demo03
 4146  aws s3 ls
 4147  ./main.py sweep --account 630344061260
 4148  export AWS_PROFILE=demo05
 4149  ./main.py sweep --account 806215566201
 4150  aws s3 ls
 4151  aws s3 ls s3://demo05ghsumm5s3
 4152  aws s3 ls s3://demo05ghsumm5s3/latest
 4153  aws s3 ls s3://demo05ghsumm5s3/latest/*
 4154  aws s3 ls -r s3://demo05ghsumm5s3/
 4155  cd ~/dev
 4156  ls -l *yolo*
 4157  ls -l *detection*
 4158  ls -l object-detection
 4159  ls -lrt object-detection/*
 4160  find . -name "train.py" -print
 4161  cd ~/dev
 4162  vi ./keras-yolo3/train.py
 4163  vi ./yolo1/components/training/src/train.py
 4164  vi ./keras-yolo3/train.py
 4165  find ~/Downloads -name "train.py" -print
 4166  find ~/demo -name "train.py" -print
 4167  vi /Users/igor/demo/dls-versions/dls-vert/python/train.py
 4168  pwd
 4169  brew install cloc
 4170  cloc
 4171  pwd
 4172  ls
 4173  cd components
 4174  cd ..
 4175  cloc components
 4176  cloc components agilestacks-components
 4177  cloc components/acm
 4178  cloc ml-stack-1735
 4179  cd ~/dev/agilestacks-components/sweeper
 4180  export AWS_PROFILE=spec
 4181  aws s3 ls
 4182  ./main.py sweep --account 435841353077
 4183  aws s3 ls
 4184  cd /Users/igor/dev/python2
 4185  git status
 4186  ls -lrt
 4187  ls -alrt
 4188  cd .git
 4189  ls
 4190  ls -lrt
 4191  grep github *
 4192  killall -9 coreaudiod
 4193  kill all -9 coreaudiod
 4194  beep
 4195  ssh agilestacks@tcp://0.tcp.ngrok.io -p 16863
 4196  ssh agilestacks@tcp://0.tcp.ngrok.io -p 13061
 4197  pwd
 4198  cd ~/work/awsml/aws-sagemaker-build
 4199  ls -lrt
 4200  git status
 4201  ls -lrt
 4202  hostory >sage_hist.txt
 4203  history >sage_hist.txt
 4204  vi sage_hist.txt
 4205  pwd
 4206  ls -lrt
 4207  wget https://s3.amazonaws.com/aws-machine-learning-blog/artifacts/sagebuild/v1/template.json
 4208  diff template.json cftemplate.json
 4209  ls
 4210  export AWS_PROFILE=demo05
 4211  aws s3 ls
 4212  aws s3 ls -r s3://agilestacks.demo05.superhub.io
 4213  aws cloudformation describe-stack-events --stack-name sg4
 4214  aws s3 ls
 4215  aws cloudformation describe-stack-events --stack-name sg1
 4216  aws s3 ls
 4217  aws s3 ls s3://aws-machine-learning-blog
 4218  brew install openssl
 4219  pwd
 4220  hub
 4221  export AWS_PROFILE=demo05
 4222  hub
 4223  git clone https://git-codecommit.us-east-1.amazonaws.com/v1/repos/sage1
 4224  curl -I https://docs.agilestacks.io
 4225  curl -I http://docs.agilestacks.io
 4226  dig api.agilestacks.io
 4227  dig docs.agilestacks.io
 4228  pwd
 4229  cd ~/work/
 4230  mkdir hub
 4231  cd ~/work/hub
 4232  git clone https://github.com/agilestacks/base-stack
 4233  pwd
 4234  cd ~/dev/stack-apps/apps/python-flask
 4235  k get pods --previous
 4236  kubectl get pods
 4237  hub-context
 4238  cd ~/work/hub
 4239  ls
 4240  wget https://github.com/github/hub/releases/download/v2.11.2/hub-darwin-amd64-2.11.2.tgz
 4241  l
 4242  wget https://github.com/github/hub/releases/download/v2.11.2/hub-darwin-amd64-2.11.2.tgz -O - | tar -C /tmp -xz
 4243  ls -lrt
 4244  rm *
 4245  ls
 4246  ls -a
 4247  rm *
 4248  ls -lrt /tmp
 4249  ls -lrt /tmp/*
 4250  rm -r /tmp/hub-darwin-amd64-2.11.2
 4251  rm -r /tmp/hub-darwin-amd64-2.11.2/*
 4252  curl -O https://controlplane.agilestacks.io/dist/hub-cli/hub.darwin_amd64
 4253  ls -lrt
 4254  mv hub.darwin_amd64 hub
 4255  chmod +x hub
 4256  sudo mv hub /usr/local/bin
 4257  ls
 4258  hub
 4259  hub version
 4260  hub-context
 4261  curl -O https://raw.githubusercontent.com/agilestacks/toolbox/master/toolbox-run 
 4262  chmod +x toolbox-run 
 4263  ./toolbox-run
 4264  cd ~/work/hub
 4265  export AWS_PROFILE=demo05
 4266  kubectl get nodes
 4267  ssh agilestacks@tcp://0.tcp.ngrok.io -p 13061
 4268  ssh agilestacks@tcp://0.tcp.ngrok.io -p 14331
 4269  pwd
 4270  ls
 4271  cd ..
 4272  ls
 4273  git clone https://github.com/agilestacks/stack-apps.git
 4274  ls -lrt
 4275  cd stack-apps/apps/python-flask
 4276  hub login
 4277  echo $HUB_TOKEN
 4278  export HUB_API=https://api.agilestacks.io
 4279  export HUB_TOKEN=b3d9c7ecba6e2542978f03f511081cc91e6596b85f84ddff6e98846767cf3d3add6f2407527a5fa9b5929f58f03fe347e94876ef2794cfa1a4388ced31e249216a8d60dfcfcf4c13288269bb7dfc1a702336bc278ec4f6db076f477b3ab218d996b56be0
 4280  echo $HUB_TOKEN
 4281  hub-ls -p harbor -p kubernetes
 4282  pwd
 4283  cd ~/work
 4284  ls -lrt
 4285  cd ~/dev/stack-apps/apps/python-flask
 4286  git status
 4287  git pull
 4288  export AWS_PROFILE=demo05
 4289  export KUBECONFIG=/Users/igor/Downloads/kubeconfig.ml1.demo51.superhub.io.yaml
 4290  kubectl get nodes
 4291  ls -lrt ~/dev/releases/scripts/hub*
 4292  cp -lrt ~/dev/releases/scripts/hub* /usr/local/bin
 4293  cp ~/dev/releases/scripts/hub* /usr/local/bin
 4294  ls
 4295  pwd
 4296  hub login
 4297  pwd
 4298  ls -lrt
 4299  ls -alrt
 4300  cd .hub
 4301  ls -lrt
 4302  pwd
 4303  cd ~/work
 4304  curl -O https://controlplane.agilestacks.io/dist/hub-cli/hub.darwin_amd64
 4305  mv hub.darwin_amd64 hub
 4306  chmod +x hub
 4307  sudo mv hub /usr/local/bin
 4308  ls -lrt
 4309  ./hub
 4310  ./hub --help
 4311  curl -O https://controlplane.agilestacks.io/dist/hub-cli/hub.darwin_amd64
 4312  ls
 4313  ls -lrt
 4314  pwd
 4315  rm *
 4316  curl -O https://controlplane.agilestacks.io/dist/hub-cli/hub.darwin_amd64
 4317  mv hub.darwin_amd64 hub
 4318  ls -lrt
 4319  chmod +x hub
 4320  sudo mv hub /usr/local/bin
 4321  hub
 4322  pwf
 4323  pwd
 4324  cd ..
 4325  pwd
 4326  hub login
 4327  export HUB_API=https://api.agilestacks.io
 4328  export HUB_TOKEN=d3a15eb27f05a444bc9e43ed4660e6daa39a717d43a07d9dfa50f736c57970262a5faf1031b89aee51ceec2fee9c9a6257808b78ad10bbe209a342f26cd43c1be1657e533c1ec26dbef503e514c201da3c3d7718a382cf97bedc66f7bd5d3df85dd4cef7
 4329  echo $HUB_TOKEN
 4330  hub-ls -p harbor -p kubernetes
 4331  hub-configure -s ml1.demo51.superhub.io
 4332  hub-context
 4333  hub-cofigure
 4334  code \\n  --install-extension "googlecloudtools.cloudcode" \\n  --install-extension "heptio.jsonnet" \\n  --install-extension "ms-azuretools.vscode-docker" \\n  --install-extension "ms-kubernetes-tools.vscode-kubernetes-tools" \\n  --install-extension "ms-python.python" \\n  --install-extension "redhat.vscode-yaml" \\n  --install-extension "xrc-inc.jsonnet-formatter"
 4335  code
 4336  pwd
 4337  cd ~/dev/stack-apps/apps/python-flask
 4338  code
 4339  code \\n  --install-extension "googlecloudtools.cloudcode" \\n  --install-extension "heptio.jsonnet" \\n  --install-extension "ms-azuretools.vscode-docker" \\n  --install-extension "ms-kubernetes-tools.vscode-kubernetes-tools" \\n  --install-extension "ms-python.python" \\n  --install-extension "redhat.vscode-yaml" \\n  --install-extension "xrc-inc.jsonnet-formatter"
 4340  code -n .
 4341  hub-context -s ml1.demo51.superhub.io
 4342  eval $(source .hub/current-context)
 4343  kubectl get nodes
 4344  hub login
 4345  export KUBECONFIG=/Users/igor/Downloads/kubeconfig.ml1.demo51.superhub.io.yaml
 4346  export AWS_PROFILE=demo05
 4347  hub login
 4348  export HUB_API=https://api.agilestacks.io
 4349  export HUB_TOKEN=d3a15eb27f05a444bc9e43ed4660e6daa39a717d43a07d9dfa50f736c57970262a5faf1031b89aee51ceec2fee9c9a6257808b78ad10bbe209a342f26cd43c1be1657e533c1ec26dbef503e514c201da3c3d7718a382cf97bedc66f7bd5d3df85dd4cef7
 4350  echo $HUB_TOKEN
 4351  hub-ls -p harbor -p kubernetes
 4352  hub-context -s ml1.demo51.superhub.io
 4353  eval $(source .hub/current-context)
 4354  source .hub/current
 4355  pwd
 4356  ls
 4357  ls -a
 4358  kubectl cluster-info
 4359  make generate
 4360  echo $HUB_TOKEN
 4361  hub-ls -p harbor -p kubernetes
 4362  hub login
 4363  HUB_API=https://api.agilestacks.io
 4364  export HUB_TOKEN=c049dbdbd16901a0a703e04125f0d4cea7260ef3e002b4c997645a10858e128b4910d8eb9bc35dd7c7058fc95016d5fdee18f264c6453d2df1d026c2d340b5e3c2cadd89c96f5a3187a8a469455ddd45ef79e61ba74286ac384a1eb1caaa7dd97d529b28
 4365  hub-ls -p harbor -p kubernetes
 4366  hub-context -s ml1.demo51.superhub.io
 4367  source .hub/current
 4368  history
 4369  which context
 4370  hub context
 4371  hub-context
 4372  which hub-context
 4373  pwd
 4374  history
 4375  cd ~/work
 4376  cd ~/dev/releases
 4377  git pull
 4378  cp ~/dev/releases/scripts/hub* /usr/local/bin
 4379  hub-configure
 4380  ls ~/dev/releases/scripts/hub*
 4381  cp ~/dev/releases/scripts/hub* /usr/local/bin
 4382  ls ~/dev/releases/scripts/hub*
 4383  hub-configure
 4384  hub-configure -s ml1.demo51.superhub.io
 4385  source .hub/current
 4386  ls -lrt .hub/current
 4387  cat .hub/current
 4388  cat /Users/igor/dev/stack-apps/apps/python-flask/.hub/env/ml1.demo51.superhub.io
 4389  hub-ls -p harbor -p kubernetes
 4390  hub-configure -s ml1.demo51.superhub.io
 4391  hub-configure -s ml1.demo51.superhub.io -f 
 4392  vim $(which hub-configure)
 4393  hub-configure -s ml1.demo51.superhub.io -f 
 4394  hub-show -s ml1.demo51.superhub.io
 4395  source .hub/current
 4396  kubectl cluster-info
 4397  make -C ".hub" generate
 4398  brew install yq
 4399  make -C ".hub" generate
 4400  brew install jsonnet
 4401  make -C ".hub" generate
 4402  make -C ".hub" clean generate
 4403  brew install skaffold
 4404  make -C ".hub" clean generate
 4405  pwd
 4406  cd ~/dev/stack-apps/apps/python-flask
 4407  ls -lrt
 4408  code -n .
 4409  code .
 4410  source .hub/current
 4411  make -C ".hub" clean generate
 4412  source .hub/current
 4413  hub-ls -p harbor -p kubernetes
 4414  hub login
 4415  unset HUB_API
 4416  hub login
 4417  export HUB_API=https://api.agilestacks.io
 4418  export HUB_TOKEN=be7a53178d122bd052c73d85313ff292a3fb8b7626b34edc72416db98f99516e8216b8aedcf4bb81e51c2996199d805f9e973aad064a6f44f950f94e16290026eb73c4073e17f99f4384c77a5f9637983dfd5068d686a33a36e5146c28d0ed5ce788e6b4
 4419  hub-ls -p harbor -p kubernetes
 4420  make -C ".hub" clean generate
 4421  hub-configure -s ml1.demo51.superhub.io -f 
 4422  make -C ".hub" clean generate
 4423  source .hub/current
 4424  make -C ".hub" clean generate
 4425  skaffold dev
 4426  make -C ".hub" clean generate
 4427  skaffold dev -p incluster
 4428  "/usr/local/bin/kubectl" describe ingress rubik --namespace default --kubeconfig=/Users/igor/dev/stack-apps/apps/python-flask/.hub/env//kubeconfig.ml1.demo51.superhub.io.yaml
 4429  skaffold dev -p incluster
 4430  pwd
 4431  cd ~/dev/stack-apps/apps/python-flask
 4432  export AWS_PROFILE=demo05
 4433  aws cloudformation describe-stack-events --stack-name sagemaker
 4434  cd ~/dev/stack-apps/apps/python-flask
 4435  export AWS_PROFILE=demo05
 4436  export KUBECONFIG=/Users/igor/Downloads/kubeconfig.ml1.demo51.superhub.io.yaml
 4437  hub-ls -p harbor -p kubernetes
 4438  hub login
 4439  unset HUB_API
 4440  vi ~/.bash_profile
 4441  hub login
 4442  hub-ls -p harbor -p kubernetes
 4443  export HUB_API=https://api.agilestacks.io
 4444  export HUB_TOKEN=e1d93be338623647095460bc302624d23671519fa522262e0d7c824899e9e1ef94281ab032617d270a588b350aa6c5d27660656dfae71533576f2ed9467d27ce69561e9778d0cda5fd20ed853c22af20bd8a03a7ed75867494ef6bb8f95b0e9a50d11217
 4445  hub-ls -p harbor -p kubernetes
 4446  hub-configure -s ml1.demo51.superhub.io
 4447  source .hub/current
 4448  kubectl cluster-info
 4449  ls .hub/env
 4450  make -C ".hub" generate
 4451  cat .hub/dockerconfig.jso
 4452  cat .hub/dockerconfig.json
 4453  code -n .
 4454  kubectl get ingress --all-namespaces
 4455  hub-ls -p harbor -p kubernetes
 4456  cd ~/dev/stack-apps/apps/python-flask
 4457  code -n .
 4458  python3 --version
 4459  which python3
 4460  ls ~/.pyenv/versions/
 4461  pyenv install 3.8
 4462  pyenv install --list
 4463  pyenv install 3.8
 4464  pwd
 4465  cd ~/work/hub
 4466  hub login demo05@superhub.io
 4467  hub login
 4468  export HUB_API=https://api.agilestacks.io
 4469  export HUB_TOKEN=552fc178cccfac8224fde755370f312b8c0cbe61dbee7249bf1f9a086ef7149bb59140833c50b8ef42e7d4b1580c4c2f3702b6a885c5b885b731737ed3e2429893dc4c5fef136e94e1c6def6145c5c3d7519b77a09cba6695a9bb75b99b7ab222435ee67
 4470  hub-ls -p harbor -p kubernetes
 4471  hub api cloudaccount onboard -w im-demo01.superhub.io aws us-east-2
 4472  hub api cloudaccount get
 4473  hub api environment create Dev01 im-demo01.superhub.io
 4474  hub api environment get
 4475  cd ~/dev/stack-apps/apps/python-flask
 4476  code -n .
 4477  ls
 4478  vi template.json
 4479  hub api template create < template.json
 4480  hub api template init kubernetes-1
 4481  ls
 4482  hub api template get
 4483  export AWS_PROFILE=demo05
 4484  hub api template init kubernetes-1
 4485  hub api template init kubernetes-2
 4486  hub api template get
 4487  hub api instance create <<EOF\n{\n    "name": "cluster-01",\n    "environment": "Dev01",\n    "template": "kubernetes-1"\n}\nEOF
 4488  hub api instance deploy -w cluster-01.my-domain-01.superhub.io
 4489  hub api instance deploy -w cluster-01.in-demo01.superhub.io
 4490  hub api instance deploy -w cluster-01.im-demo01.superhub.io
 4491  hub api instance get cluster-01.in-demo01.superhub.io
 4492  hub api instance get cluster-01.im-demo01.superhub.io
 4493  hub api instance undeploy -w cluster-01.im-demo01.superhub.io
 4494  hub api instance delete -w cluster-01.im-demo01.superhub.io
 4495  hub api instance delete cluster-01.im-demo01.superhub.io
 4496  hub api template get kubernetes-1
 4497  hub api template delete kubernetes-1
 4498  hub api environment get\n
 4499  hub api environment delete Dev01\n
 4500  hub api cloudaccount onboard
 4501  hub api cloudaccount
 4502  hub api cloudaccount delete
 4503  hub api cloudaccount delete -w im-demo01.superhub.io
 4504  hub api cloudaccount delete im-demo01.superhub.io
 4505  hub api cloudaccount onboard 
 4506  echo $AWS_PROFILE
 4507  vi ~/.aws/credentials
 4508  pwd
 4509  ls
 4510  cd demo
 4511  ls
 4512  ls -lrt
 4513  hub login -u demo05@superhub.io
 4514  export HUB_TOKEN=189639019e84e12a878d09560efd6de177584809a469cd9c0a47fdc6ee586ba5b817726d8950d3630fa2a5193cf447c190ee4d988cb536bde4ce2fd0eec6d7efc0b594fa0d0be6d07704908eabcdeeec27e43963d05466d3a608015fc557a9db33a85009
 4515  hub api cloudaccount onboard -w im-demo02..superhub.io aws us-east-2
 4516  hub api cloudaccount onboard -w im-demo02.superhub.io aws us-east-2
 4517  tree --dirsfirst
 4518  cd ~/dev/kubeflow-extensions
 4519  tree --dirsfirst
 4520  ls
 4521  cd applications/keras-seq2seq
 4522  tree --dirsfirst
 4523  pwd
 4524  cd ~/dev/agilestacks-components/sweeper
 4525  export AWS_PROFILE=spec
 4526  aws s3 ls
 4527  ls
 4528  vi hist_stage1.txt
 4529  ./main.py sweep --account 435841353077
 4530  aws s3 ls
 4531  pwd
 4532  cd ~/dev/stack-apps/apps/python-flask
 4533  ls -lrt
 4534  hub-ls -p harbor -p kubernetes
 4535  hub login -u demo05@superhub.io
 4536  export HUB_API=https://api.agilestacks.io
 4537  hub login -u demo05@superhub.io
 4538  export HUB_TOKEN=44097da9d2e47becf6f2938e594e29be793b28c38f3c54c6e12792e4cb1c2a08dcba651a650e66da86a6932d06e0088f33196ff625046ae270963ec77ac87314773fae72d111eb2d7ff76ee3c5d8b7ffbb1caeecc352b041d730bb63340474c91fab3c6f
 4539  hub-ls -p harbor -p kubernetes
 4540  hub-configure -s ml1.demo51.superhub.io
 4541  source .hub/current
 4542  kubectl cluster-info
 4543  make -C ".hub" generate
 4544  make -C ".hub" clean generate
 4545  make -C ".hub" generate
 4546  code -n .
 4547  export HUB_TOKEN=44097da9d2e47becf6f2938e594e29be793b28c38f3c54c6e12792e4cb1c2a08dcba651a650e66da86a6932d06e0088f33196ff625046ae270963ec77ac87314773fae72d111eb2d7ff76ee3c5d8b7ffbb1caeecc352b041d730bb63340474c91fab3c6f
 4548  hub-ls -p harbor -p kubernetes
 4549  hub-configure -s ml1.demo51.superhub.io
 4550  make -C ".hub" generate
 4551  make -C ".hub" clean generate
 4552  ls -lrt
 4553  pwd
 4554  cd ..
 4555  rm python-flask
 4556  rm -r python-flask
 4557  rm -ar python-flask
 4558  rm -rfv python-flask
 4559  pwd
 4560  ls
 4561  cd python-flask
 4562  ls
 4563  git pull
 4564  ls -lrt
 4565  pwd
 4566  cd ~
 4567  cd ~/dev/stack-apps/apps/python-flask
 4568  export HUB_TOKEN=44097da9d2e47becf6f2938e594e29be793b28c38f3c54c6e12792e4cb1c2a08dcba651a650e66da86a6932d06e0088f33196ff625046ae270963ec77ac87314773fae72d111eb2d7ff76ee3c5d8b7ffbb1caeecc352b041d730bb63340474c91fab3c6f
 4569  hub-ls -p harbor -p kubernetes
 4570  export HUB_API=https://api.agilestacks.io
 4571  hub-ls -p harbor -p kubernetes
 4572  hub-configure -s ml1.demo51.superhub.io
 4573  source .hub/current
 4574  hub-show
 4575  cd ~/dev/releases
 4576  cd ~/dev/hub-extensions
 4577  ls -lrt
 4578  cp ~/dev/hub-extensions/hub* /usr/local/bin
 4579  cat README.md
 4580  hub-ls -p harbor -p kubernetes
 4581  hub-configure -s ml1.demo51.superhub.io
 4582  hub show
 4583  code -n .
 4584  cd ~/dev/releases
 4585  ls
 4586  cp ~/dev/releases/scripts/hub* /usr/local/bin
 4587  hub-ls -p harbor -p kubernetes
 4588  hub-configure -s ml1.demo51.superhub.io
 4589  pwd
 4590  cd ~/dev/hub-extensions
 4591  cp ~/dev/hub-extensions/hub* /usr/local/bin
 4592  hub-configure -s ml1.demo51.superhub.io
 4593  vi ~/.bash_profile
 4594  ls /usr/bin/hub*
 4595  ls /usr/local/bin/hub*
 4596  rm /usr/local/bin/hub*
 4597  ls
 4598  cp ~/Downloads/hub.darwin_amd64 .
 4599  ls -lrt
 4600  mv hub.darwin_amd64 hub
 4601  chmod +x hub
 4602  cp hub /usr/local/bin
 4603  hub
 4604  hub extensions install --help
 4605  pwd
 4606  hub extensions install
 4607  hub ls
 4608  export HUB_API=https://api.agilestacks.io
 4609  export HUB_TOKEN=44097da9d2e47becf6f2938e594e29be793b28c38f3c54c6e12792e4cb1c2a08dcba651a650e66da86a6932d06e0088f33196ff625046ae270963ec77ac87314773fae72d111eb2d7ff76ee3c5d8b7ffbb1caeecc352b041d730bb63340474c91fab3c6f
 4610  hub ls -p harbor -p kubernetes
 4611  hub login -u demo05@superhub.io
 4612  export HUB_TOKEN=a3ee1f123b08344830f520ae7758f7ca47e90fd1a82fc22c528741a37cb1c106f110d064ae4b986dd4707ca3e1500b883924362d5288573e9cfc8e1e262d783b65407e35235f3eae3a64ce65ccc270bc188d80aa8bb7140139f873198ff74d54031f21d4
 4613  hub ls -p harbor -p kubernetes
 4614  hub --version
 4615  hub version
 4616  export AWS_PROFILE=demo05
 4617  aws s3 ls
 4618  hub login -u demo05@superhub.io
 4619  export HUB_TOKEN=297d733ce9dbf29809b10139bd93d03598a17bb8805cbcfc2e3fb3184aa1995c1d9e9a4fec99ddaef20744918582b495fd38013591b82a4e6fcd44e6e88d3a99a33a4cff4f37e427091103a32bcdd0691dba3d73234ccabccf70893ed8bbe7f40fb634d4
 4620  hub extensions install
 4621  rm -rfv .hub
 4622  hub extensions install
 4623  rmdir .hub
 4624  rm -rfv /Users/igor/.hub
 4625  hub extensions install
 4626  hub ls -p harbor -p kubernetes
 4627  hub-ls -p harbor -p kubernetes
 4628  npm install -g npm
 4629  rm -rfv /Users/igor/.hub
 4630  hub version
 4631  aws s3 ls
 4632  hub extensions install
 4633  hub login -u demo05@superhub.io
 4634  export HUB_TOKEN=cfdca72d4d10a72eef57e0adeaba5a5d20a40b0530aedfada22171814a599d9326acfecda2ef699bb4f5b274239535acfdd79a3b48a2bd498421332a9778e3f6da4a083132dd08272c85d48531bf02990ebc3bd8f933c6e03c83217c2eef6de3fbaf972e
 4635  hub ls -p harbor -p kubernetes
 4636  hub ls -v -p harbor -p kubernetes
 4637  hub ls -help
 4638  hub
 4639  hub -v ls
 4640  hub ls -v -p harbor -p kubernetes
 4641  hub -v ls -p harbor -p kubernetes
 4642  hub api environment get
 4643  hub ls
 4644  hub configure -s ml1.demo51.superhub.io
 4645  hub-ls
 4646  export HUB_API=https://api.stage.agilestacks.io
 4647  hub login -u demo05@superhub.io
 4648  pwd
 4649  ls -lrt
 4650  git checkout master
 4651  git pull
 4652  git status
 4653  git checkout --
 4654  git status
 4655  git checkout HEAD .hub
 4656  git status
 4657  export HUB_API=https://api.stage.agilestacks.io
 4658  hub login -u demo05@superhub.io
 4659  export HUB_TOKEN=bb265b4949d9592225b94753742341ebea81468232c3b570ae9ef867308d3181fc37a3a450a72448af8574adbcac805c6572873adda3c09205f176659a215bffc31ea2aadf26b9efe6bb4aa939bf598458e536d7e230215f7b50e719db1759c041c6a70e
 4660  hub-ls -p harbor -p kubernetes
 4661  hub ls -p harbor -p kubernetes
 4662  hub configure -s app@k8s-rs.specs2.superhub.io
 4663  hub configure -s k8s-rs.specs2.superhub.io
 4664  export AWS_PROFILE=spec
 4665  hub ls -p harbor -p kubernetes
 4666  hub configure -s k8s-rs.specs2.superhub.io
 4667  source .hub/current
 4668  source .env
 4669  kubectl cluster-info
 4670  hub api environment get
 4671  source .env
 4672  aws s3 ls
 4673  hub configure -s -f k8s-rs.specs2.superhub.io
 4674  hub configure -sf k8s-rs.specs2.superhub.io
 4675  hub configure -fs k8s-rs.specs2.superhub.io
 4676  hub configure -s k8s-rs.specs2.superhub.io -f
 4677  hub ls -p harbor -p kubernetes
 4678  hub configure -s k8s-rs.specs2.superhub.io -f
 4679  hub configure -s k8s-rs.specs2.superhub.io -f -v
 4680  hub ls -p harbor -p kubernetes
 4681  hub configure -s app1@k8s-rs.specs2.superhub.io -f -v
 4682  hub extensions install
 4683  rm -rfv /Users/igor/.hub
 4684  hub extensions install
 4685  hub ls -p harbor -p kubernetes
 4686  hub configure -s app1@k8s-rs.specs2.superhub.io -f -v
 4687  hub show -c -M -R -s app1@k8s-rs.specs2.superhub.io
 4688  hub show app1@k8s-rs.specs2.superhub.io
 4689  hub show -s app1@k8s-rs.specs2.superhub.io
 4690  hub show -c -s app1@k8s-rs.specs2.superhub.io
 4691  hub show -s app1@k8s-rs.specs2.superhub.io -c
 4692  hub show -s app1@k8s-rs.specs2.superhub.io
 4693  hub show -s app1@k8s-rs.specs2.superhub.io -M
 4694  pwd
 4695  cp /Users/igor/.hub hubinspect
 4696  cp -r /Users/igor/.hub hubinspect
 4697  hub show -c -M -R -s app1@k8s-rs.specs2.superhub.io -q '.parameters.dns.domain'
 4698  hub show -s app1@k8s-rs.specs2.superhub.io -q '.parameters.dns.domain' -c -M -R
 4699  hub show -s app1@k8s-rs.specs2.superhub.io -q '.parameters.dns.domain' -c -M -r
 4700  hub show -s app1@k8s-rs.specs2.superhub.io -q '.parameters.dns.domain' -c -M -R
 4701  hub show -s app1@k8s-rs.specs2.superhub.io -c -M -r -q '.parameters.dns.domain'
 4702  cp /Users/igor/dev/stack-apps/apps/python-flask/hubinspect/hub-configure /Users/igor/.hub/hub-configure
 4703  hub configure -s app1@k8s-rs.specs2.superhub.io -f -v
 4704  rm -rfv /Users/igor/.hub
 4705  rm -rfv hubinspect
 4706  curl -Lo hub https://controlplane.agilestacks.io/dist/hub-cli/hub.darwin_amd64
 4707  chmod +x hub
 4708  sudo mv hub /usr/local/bin
 4709  hub extensions install
 4710  hub --help
 4711  hub version
 4712  curl -Lo hub https://controlplane.stage.agilestacks.io/dist/hub-cli/hub.darwin_amd64
 4713  chmod +x hub
 4714  sudo mv hub /usr/local/bin
 4715  hub version
 4716  hub extensions install
 4717  hub login -u demo05@superhub.io
 4718  export HUB_API=https://api.stage.agilestacks.io
 4719  export HUB_TOKEN=ef713960c56f20cae9d9ff7168167628f617b029756bc133d9ad15b95dc8bcd38381e2dc1b5b01e30784dc2c8317306a8c63e6ae657a345c40ed8bf13f29ba72706e8c2fcec44a87b0c157058eec7cf1d16dab838af5f662d412c7a4bc249ccb72b32c43
 4720  hub-ls -p harbor -p kubernetes
 4721  hub ls -p harbor -p kubernetes
 4722  hub configure -s app1@k8s-rs.specs2.superhub.io -f -v
 4723  hub version
 4724  cp -r /Users/igor/.hub hubinspect
 4725  echo $HUB_EXTENSIONS
 4726  which hub-configure
 4727  ls
 4728  ls -lrt ~/.hub/
 4729  rm -rfv hubinspect
 4730  rm -rfv ~/.hub
 4731  hub extensions install
 4732  hub ls -p harbor -p kubernetes
 4733  hub configure -s app1@k8s-rs.specs2.superhub.io -f -v
 4734  source .hub/current
 4735  source .env
 4736  kubectl cluster-info
 4737  ls -lrt .hub
 4738  ls .hub/k8s
 4739  ls .hub/env
 4740  source .hub/env/configure
 4741  kubectl cluster-info
 4742  source .hub/env/configure
 4743  cat .hub/env/configure
 4744  hub ls -p harbor -p kubernetes
 4745  hub configure -s app1@k8s-rs.specs2.superhub.io -f -v
 4746  source .env
 4747  kubectl cluster-info
 4748  ls -ef
 4749  hub ls
 4750  hub configure -s app1@k8s-rs.specs2.superhub.io -f
 4751  ls -lrt /Users/igor/.hub
 4752  hub extensions update
 4753  ls -lrt /Users/igor/.hub
 4754  hub configure -s app1@k8s-rs.specs2.superhub.io -f
 4755  source .env
 4756  kubectl cluster-info
 4757  make -C ".hub" generate FORCE=1
 4758  make -C ".hub" clean generate
 4759  hub configure -s app1@k8s-rs.specs2.superhub.io -f
 4760  source .env
 4761  kubectl cluster-info
 4762  make -C ".hub" clean generate
 4763  code -n .
 4764  pwd
 4765  cd ..
 4766  cp -r python-flask python-flask1
 4767  cd python-flask1
 4768  ls
 4769  hub ls -p harbor -p kubernetes
 4770  hub configure -s app1@k8s-rs.specs2.superhub.io -f
 4771  source .env
 4772  kubectl cluster-info
 4773  make -C ".hub" clean generate
 4774  code -n .
 4775  cd ..
 4776  cd python-flask
 4777  code -n .
 4778  ls -lrt
 4779  history
 4780  make -C ".hub" generate FORCE=1
 4781  make -C ".hub" clean generate
 4782  cd ~/dev/stack-apps/apps/python-flask
 4783  make -C ".hub" clean generate
 4784  pwd
 4785  history
 4786  hub configure -s app1@k8s-rs.specs2.superhub.io -f
 4787  source .env
 4788  kubectl cluster-info
 4789  make -C ".hub" generate FORCE=1
 4790  code -n .
 4791  echo $HUB_APP_NAME
 4792  export uuid=$(uuidgen | tr '[:upper:]' '[:lower:]' | tr -d - | cut -c-4)
 4793  echo $uuid
 4794  echo $HUB_APP_NAME
 4795  make -C ".hub" generate FORCE=1
 4796  echo $HUB_APP_NAME
 4797  cd ..
 4798  cd python-flask1
 4799  code -n .
 4800  make -C ".hub" clean generate
 4801  code -n .
 4802  ffmpeg
 4803  brew install ffmpeg 
 4804  ls
 4805  pwd
 4806  cd ~/work/hub
 4807  ls
 4808  cp "/Users/igor/Library/Mobile\ Documents/com~apple~QuickTimePlayerX/Documents/flask-app1.mov" .
 4809  cp ~/Library/Mobile\ Documents/com\~apple\~QuickTimePlayerX/Documents/flask-app1.mov .
 4810  ls -lrt
 4811  brew cask install xquartz #dependency for gifsicle, only required for mountain-lion and above
 4812  open /usr/local/Cellar/x-quartz/2.7.4/XQuartz.pkg
 4813  open /usr/local/Caskroom/xquartz/2.7.11/XQuartz.pkg
 4814  brew install gifsicle
 4815  ls
 4816  cp ~/Library/Mobile\ Documents/com\~apple\~QuickTimePlayerX/Documents/flask-app2.mov .
 4817  ls
 4818  ls -lrt
 4819  ffmpeg -i flask-app2.mov -s 600x400 -pix_fmt rgb24 -r 10 -f gif - | gifsicle --optimize=3 --delay=3 > out.gif
 4820  ls -lrt
 4821  mv out.gif flask-app.gif
 4822  pwd
 4823  kubectl get ingress --all-namespaces
 4824  cmake
 4825  make
 4826  hub ls -p harbor -p kubernetes
 4827  pwd
 4828  cd ..
 4829  ls
 4830  rm -rfv python-flask1
 4831  cp -r python-flask python-flask1
 4832  cd python-flask1
 4833  ls -lrt
 4834  code -n .
 4835  skaffold
 4836  pwd
 4837  hub login -u dandi1@mac.com
 4838  export HUB_API=https://api.agilestacks.io
 4839  hub login -u dandi1@mac.com
 4840  export HUB_TOKEN=affce988916109dfeedf9e5c4cf75b520bc76940437f476d4386994a33ed905613fb96d36565ea0a73ede3b230cf6af8625260d9e867a06fa392845681bde1290ee240ee2d0e6ab7379cfab7bac17c6750eacea4
 4841  hub ls -p harbor -p kubernetes
 4842  hub login -u dandi1@mac.com
 4843  export HUB_TOKEN=14209888ebc3441fa4d0bd89473c07b7f32286930898a5dbbc08436d65d5fa307e524ae415326e85687b8fdd2171449fdf31390156c4183804191c5cf0abca68342d415693298f589918dfe611d1d05d969a4508
 4844  hub ls -p harbor -p kubernetes
 4845  hub configure -s missionx.showroom.superhub.io -f
 4846  source .env
 4847  kubectl cluster-info
 4848  hub configure -s missionx.showroom.superhub.io -f
 4849  hub configure -s missionx.showroom.superhub.io -f -v
 4850  hub extensions update
 4851  hub login -u dandi1@mac.com
 4852  export HUB_TOKEN=47a5ba6dbedd36a50f0500c581308cb8f155745435145434ba3e975ad06fd28556fc3f8ce2be37cf5552f7f7e7688d859e786b7219facd1670de8c17f8aae1604b3729fc91f638a60b6a5c326bc70655375f23c7
 4853  hub ls -p harbor -p kubernetes
 4854  hub configure -s missionx.showroom.superhub.io -f -v
 4855  hub login -u demo05@superhub.io
 4856  export HUB_TOKEN=2a852a559c3725bd50fb8ea244e08dcd3eec214e9b0c1cf79d1ad28d016aaefc3c05e6c37407336ca313497fa1f30306804d197cf623ed947b03eb4a02bbb7f75ef6e64d3894114cd9994d78d23660a34564d7dc204fd36843ffe8c562d12cb3a1106a11
 4857  hub ls -p harbor -p kubernetes
 4858  hub configure -s ml1.demo51.superhub.io -f -v
 4859  source .env
 4860  kubectl cluster-info
 4861  make -C ".hub" generate
 4862  make -C ".hub" clean generate
 4863  code \\n  --install-extension "googlecloudtools.cloudcode" \\n  --install-extension "heptio.jsonnet" \\n  --install-extension "ms-azuretools.vscode-docker" \\n  --install-extension "ms-kubernetes-tools.vscode-kubernetes-tools" \\n  --install-extension "ms-python.python" \\n  --install-extension "redhat.vscode-yaml" \\n  --install-extension "xrc-inc.jsonnet-formatter"
 4864  code -n .
 4865  ls -lrt
 4866  vi skaffold.yaml
 4867  make -C ".hub" clean generate
 4868  code -n .
 4869  pwd
 4870  export HUB_API=https://api.stage.agilestacks.io
 4871  hub login -u dandi1@mac.com
 4872  export HUB_TOKEN=02d2323bb11e01f7e2e91fcdf747157147839f186d6ad35403941973f9e5e4c52b4bff424e8e23411f011010fada30c24bca0174865ded8ee6597489118f108fd3755bed391f13f32ed9f1fc5505c5689d12e595d6d78abd63d128283abfd48d6c4919c1
 4873  ls -lrt
 4874  hub ls -p harbor -p kubernetes
 4875  hub configure -s app1@k8s-rs.specs2.superhub.io -f
 4876  source .env
 4877  kubectl cluster-info
 4878  make -C ".hub" clean generate
 4879  code -n .
 4880  export HUB_API=https://api.agilestacks.io
 4881  hub login -u admin@agilestacks.io
 4882  export HUB_TOKEN=0c2e4d10ea7ff9bb95e62cf2e19032892b509783949a03151c28c44f6283a1593132f1f79f530a62694438e69c9b7b7783fc4db494160ab715f442c10fddda7bbdef7a64a7b9d395f94e3b8d864b9ed4194e298f2cc3b5f0ae93ae5a04c6ac018d998c94
 4883  hub ls -p harbor -p kubernetes
 4884  hub configure -s missionx.showroom.superhub.io -f
 4885  source .env
 4886  kubectl cluster-info
 4887  make -C ".hub" clean generate
 4888  code -n .
 4889  kubectl get ingress --all-namespaces
 4890  ping 192.168.193.1
 4891  telnet 192.168.193.1
 4892  ssh 192.168.193.1
 4893  ping 192.168.193.1
 4894  hub login -u dandi1@mac.com
 4895  export HUB_TOKEN=7af5c7fbf995dad55bfa8aee2280c961df857503e5f14f145955a69a024e9baa75992ef4caec4d2bb34fab143c604827d640e148bbdf110cd42a83d375b1feff14c9b7d32a9db6f289822864519a337d602a1f185c52ef55e4c407aa90ab3a39aeb83149
 4896  hub ls -p harbor -p kubernetes
 4897  hub login -u demo05@superhub.io
 4898  export HUB_TOKEN=5352fe590b31f3c030bd6b8592e8cd74a14a976e755c4aef574e109f74d813acfd63f510ad08e26307be02e9f54cf3021b6e7705c3400115411ce42c3da04e9bfe1595459c3f068fc80bf48086699b9ac98dd8c51b0372c61387f5950d68857b76bc1022
 4899  hub ls -p harbor -p kubernetes
 4900  hub configure -s ml1.demo51.superhub.io -f
 4901  source .env
 4902  kubectl cluster-info
 4903  hub extensions update
 4904  hub configure -s ml1.demo51.superhub.io -f
 4905  hub login -u demo05@superhub.io
 4906  export HUB_TOKEN=914e8a34215012d9dd709683774eedd0a2269351b70c8c70ef64348010a6be82b4f6f0a95a35f6bbb4bfdaf29056b5564988eb76853c0f5ca7ff5dd25769a24632f5a9d20a46f66111220c10180b4bdf5289142df45a9126abeeef2d70187a02aeb8c9d2
 4907  hub ls -p harbor -p kubernetes
 4908  hub configure -s ml1.demo51.superhub.io -f
 4909  pwd
 4910  ls -lrt
 4911  pwd
 4912  ls .hub
 4913  hub login -u demo05@superhub.io
 4914  export HUB_TOKEN=4d7cb68bcdfcc3a84d92e7a6879c25f66e34a83756ff6e14d497e9d6ed5690f1040f386925bd83f93eaed89994c695222064f68badc85cd42d35f70ad84a53e1678f729bb97c1ae7fe8a95d22f256521b2e0bee9385cc6dc5696bc7c6f5f7ee1d90b852c
 4915  hub ls -p harbor -p kubernetes
 4916  hub configure -s ml1.demo51.superhub.io -f
 4917  source .env
 4918  kubectl cluster-info
 4919  make -C ".hub" clean generate
 4920  code -n .
 4921  cd ~/dev/agilestacks-components/sweeper
 4922  export AWS_PROFILE=poc01
 4923  aws s3 ls
 4924  ./main.py sweep --account 608332689354
 4925  aws s3 ls
 4926  ./main.py sweep --account 608332689354
 4927  aws s3 ls
 4928  /usr/local/bin/python3 /Users/igor/dev/stack-apps/apps/python-flask1/src/train.py
 4929  export AWS_PROFILE=sol01
 4930  aws s3 ls
 4931  vi ~/.aws/credentials
 4932  vi ~/.aws/config
 4933  ./main.py sweep --account 938880336972
 4934  export AWS_PROFILE=demo10
 4935  aws s3 ls
 4936  ./main.py sweep --account 299380738002
 4937  aws s3 ls
 4938  ./main.py sweep --account 299380738002
 4939  aws s3 ls
 4940  hub ls
 4941  hub login -u demo05@superhub.io
 4942  export HUB_API=https://api.agilestacks.io
 4943  hub login -u demo05@superhub.io
 4944  export HUB_TOKEN=800105da1a44c28f71b5690a246574ff54e6023527118342904630752aa75cf9efd41c2d03c8883dbda728b4f2e9995d9c26eb979b843158e0502f22f2015ace389ba1764c5bc0c457ed46f805f1fb2d059cc38315088cf770ef3119cda28a91b200ebe6
 4945  hub ls
 4946  pwd
 4947  cd ~/work/hub
 4948  ls
 4949  cd ~/demo
 4950  ls -lrt
 4951  cat agilestacks.pem
 4952  pwd
 4953  export AWS_PROFILE=specs
 4954  aws s3 ls
 4955  export AWS_PROFILE=spec
 4956  aws s3 ls
 4957  aws ec2 describe-instances
 4958  aws ec2 ec2-describe-instances --region us-east
 4959  aws ec2 describe-instances --region us-east
 4960  aws ec2 describe-instances --region us-east-1
 4961  history
 4962  cd /Users/igor/dev/stack-apps/apps/python-flask/
 4963  ls
 4964  hub login -u sol01@agilestacks.io
 4965  export HUB_TOKEN=c6529a91ee5e9097c7d2a8a4b86da5f3c999c8cf33420078f52e7ee6b057c3d146b605f9aaa4f7be97030b49cceccb995672c77f46e70a811fe00ca4d9383dd0f0a21aab90bd236c6dfcbee71ec77841b4352f993e09026e1aa80e33f75be9396d96917a
 4966  hub ls -p harbor -p kubernetes
 4967  hub configure -s harbor@rrasi.buzz.superhub.io
 4968  history >dev_hist.txt
 4969  vi dev_hist.txt
 4970  hub configure -s harbor@rrasi.buzz.superhub.io -f -v
 4971  export AWS_PROFILE=sol01
 4972  aws s3 ls
 4973  hub configure -s harbor@rrasi.buzz.superhub.io -f
 4974  source .env
 4975  kubectl cluster-info
 4976  make -C ".hub" clean generate
 4977  code -n .
 4978  pwd
 4979  cd /Users/igor/dev/stack-apps/apps/python-flask1
 4980  hub ls -p harbor -p kubernetes
 4981  hub configure -s devstack@redcluster.cirras.superhub.io
 4982  hub configure -s devstack@redcluster.cirras.superhub.io -f
 4983  source .env\n
 4984  kubectl cluster-info
 4985  source .env
 4986  kubectl get nodes
 4987  cat .env
 4988  cat .ev
 4989  cat .env
 4990  hub ls -p harbor -p kubernetes
 4991  hub configure -s redcluster.cirras.superhub.io
 4992  hub configure -s redcluster.cirras.superhub.io -f
 4993  source .env
 4994  kubectl get nodes
 4995  cat /Users/igor/dev/stack-apps/apps/python-flask1/.hub/env/kubeconfig.devstack@redcluster.cirras.superhub.io.yaml\n
 4996  sudo vi /etc/hosts
 4997  hub configure -s devstack@redcluster.cirras.superhub.io -f
 4998  source .env
 4999  kubectl cluster-info
 5000  kubectl get nodes
 5001  ping redcluster
 5002  sudo vi /etc/hosts
 5003  ping redcluster
 5004  kubectl get nodes
 5005  hub configure -s devstack@redcluster.cirras.superhub.io -f
 5006  source .env
 5007  kubectl get nodes
 5008  make -C ".hub" clean generate
 5009  code -n .
 5010  pwd
 5011  cd /Users/igor/dev/stack-apps/apps/python-flask1
 5012  cd /Users/igor/dev/stack-apps/apps/python-flask
 5013  export AWS_PROFILE=sol01
 5014  cd /Users/igor/dev/stack-apps/apps/python-flask
 5015  export AWS_PROFILE=sol01
 5016  pwd
 5017  cd /Users/igor/dev/stack-apps/apps/python-flask1
 5018  export AWS_PROFILE=sol01
 5019  pwd
 5020  hub ls -p harbor -p kubernetes
 5021  aws s3 ls
 5022  hub login -u sol01@agilestacks.io
 5023  export HUB_API=https://api.agilestacks.io
 5024  hub login -u sol01@agilestacks.io
 5025  export HUB_TOKEN=11df1084fbf01c951f04cabe18b39b42370422451e4bf1f3cee33657a41472658b30b8e19e6d6b562ab2b1deb5526b004809ed0adb0b1bda678051c895b2c7110893812a96a8ff8a5f033b8e160402cbb50700d16cf4ca2d58f15a7203a91061aa7861cb
 5026  export HUB_TOKEN=506fb5db5d9373513486f4b76414f5a2149ed9ed3fad87642476b795e0eef4fe21f112a361bec26220e2e110b34455fd8353fc2b78839f3b3a47db56ff5087f2f9b1bdf2e0e4876a4381862900db892834ec178cf15d1544379c85d32baaf2e1e1063ff5
 5027  hub ls -p harbor -p kubernetes
 5028  hub configure -s harbor@rrasi.buzz.superhub.io
 5029  source .env
 5030  kubectl cluster-info
 5031  make -C ".hub" clean generate
 5032  code -n .
 5033  hub ls -p harbor -p kubernetes
 5034  hub configure -s harbor@rrasi.buzz.superhub.io
 5035  source .env
 5036  kubectl cluster-info
 5037  kubectl get nodes
 5038  export AWS_PROFILE=sol01
 5039  hub login -u sol01@agilestacks.io
 5040  export HUB_TOKEN=dad32cc0bbcd5d569a69fd59e00bc405f808684568b7a52b7f213aec818bf61a57d5d98e6d5bdd68ff6f37728404d1169a8bb0a7de3d520e67f5ab0d43ebecdd549da48945bc8b888d913adde874bd45e335b1df7b45dc9d7009e7d240eb94a50268723e
 5041  hub ls -p harbor -p kubernetes
 5042  hub configure -s harbor@rrasi.buzz.superhub.io
 5043  source .env
 5044  kubectl get nodes
 5045  hub configure -s harbor@rrasi.buzz.superhub.io
 5046  source .env
 5047  kubectl get nodes
 5048  kubectl cluster-info
 5049  make -C ".hub" clean generate
 5050  code -n .
 5051  git status
 5052  ls
 5053  pwd
 5054  cd /Users/igor/dev/stack-apps/apps/python-flask1
 5055  export AWS_PROFILE=demo05
 5056  hub ls -p harbor -p kubernetes
 5057  cd /Users/igor/dev/stack-apps/apps/python-flask
 5058  hub login -u demo05@superhub.io
 5059  export HUB_API=https://api.agilestacks.io
 5060  hub login -u demo05@superhub.io
 5061  export HUB_TOKEN=166e52e3ad361dc866b699525629cc39bfb67a2939afb4f32a4d4cc5bc39c5e2ccf55b67ba2f2b828045309ec42b15e8556da1e2917943c05061259d268d18c2c4adaec8f0f1f035f6b6e94fa139ba5ec087c264b03050e7c8e7fc491ecee41fffff4d81
 5062  hub ls -p harbor -p kubernetes
 5063  hub configure -s ml1.demo51.superhub.io -f
 5064  source .env
 5065  kubectl get ingress --all-namespaces
 5066  kubectl get services --namespace=kubeflow
 5067  pwd
 5068  cd ..
 5069  ls
 5070  cp -r python-flask efficientnet1
 5071  cd efficientnet1
 5072  export AWS_PROFILE=demo05
 5073  hub login -u demo05@superhub.io
 5074  export HUB_TOKEN=96dbcc35b1f8500bb4f93f62426643b2d0392f660c1690c4de6d94fa71752637f96367124b69bfaf3767a4ddecd9039e64f4c23dd33a69c067200403a07bc543ec693c598d0b170e1987a34bf79ae09ccc59b0a605a9b701ecc89b4a688784803b78121f
 5075  hub ls -p harbor -p kubernetes
 5076  hub ls -p harbor
 5077  hub configure -s ml1.demo51.superhub.io -f
 5078  source .env
 5079  kubectl cluster-info
 5080  make -C ".hub" clean generate
 5081  code -n .
 5082  make -C ".hub" clean generate
 5083  code -n .
 5084  yq
 5085  cat .env
 5086  pwd
 5087  ls -lrt
 5088  ls -alrt
 5089  ls -alrt .hub
 5090  ls -alrt .git
 5091  pwd
 5092  cd ..
 5093  cp -r efficientnet1 ~/dev/efficientnet1/apps
 5094  rm -rfv ~/dev/efficientnet1/apps
 5095  cp -r efficientnet1 ~/dev/efficientnet1/apps/efficientnet1
 5096  mkdir ~/dev/efficientnet1/apps
 5097  cp -r efficientnet1 ~/dev/efficientnet1/apps/efficientnet1
 5098  cd ~/dev/efficientnet1/apps
 5099  ls
 5100  cd efficientnet1
 5101  ls -lrt
 5102  ls -alrt
 5103  cat .env
 5104  pwd
 5105  hub ls -p harbor -p kubernetes
 5106  hub configure -s ml1.demo51.superhub.io -f
 5107  source .env
 5108  kubectl cluster-info
 5109  make -C ".hub" clean generate
 5110  code -n .
 5111  pwd
 5112  git status
 5113  code -n .
 5114  make -C ".hub" clean generate
 5115  code -n .
 5116  pwd
 5117  cd /Users/igor/dev/stack-apps/apps/python-flask
 5118  code -n .
 5119  pwd
 5120  code -n .
 5121  pwd
 5122  cd ..
 5123  ls
 5124  cd efficientnet1
 5125  code -n .
 5126  pwd
 5127  cd ..
 5128  ls
 5129  cd python-flask
 5130  code -n .
 5131  pwd
 5132  hub configure -s ml1.demo51.superhub.io -f
 5133  source .env
 5134  kubectl cluster-info
 5135  make -C ".hub" clean generate
 5136  code -n .
 5137  pwd
 5138  make -C ".hub" clean generate
 5139  code -n .
 5140  ls -lrt 
 5141  ls -lrt k8s
 5142  ls -lrt k8s/*
 5143  make -C ".hub" clean generate
 5144  ls -lrt k8s/*
 5145  code -n .
 5146  cd ..
 5147  ls
 5148  pwd
 5149  cd efficientnet1
 5150  pwd
 5151  make -C ".hub" clean generate
 5152  pwd
 5153  ls
 5154  cd ..
 5155  ls
 5156  cd efficientnet1
 5157  make -C ".hub" clean generate
 5158  pwd
 5159  make -C ".hub" clean generate
 5160  code -n .
 5161  pwd
 5162  ls
 5163  rm -rfv ~/dev/efficientnet1/apps
 5164  ls
 5165  pwd
 5166  cp -r efficientnet1 ~/dev/efficientnet1/apps/efficientnet1
 5167  cd ..
 5168  ls
 5169  pwd
 5170  cd ~/dev/efficientnet1/
 5171  ls
 5172  mkdir ~/dev/efficientnet1/apps
 5173  ls
 5174  cp -r efficientnet1 ~/dev/efficientnet1/apps/efficientnet1
 5175  cd ..
 5176  cp -r efficientnet1 ~/dev/efficientnet1/apps/efficientnet1
 5177  cd apps
 5178  ls
 5179  cd efficientnet1
 5180  ls -lrt
 5181  rm dev_hist.txt
 5182  rm -rfv docs
 5183  ls -lrt
 5184  git status
 5185  kubectl cluster-info
 5186  code -n .
 5187  pyenv shell 3.6.4
 5188  pwd
 5189  ls -lrt
 5190  pwd
 5191  code -n .
 5192  pwd
 5193  ls -lrt
 5194  pwd
 5195  code -n .
 5196  pwd
 5197  cd /Users/igor/dev/stack-apps/apps/python-flask
 5198  hub ls -p harbor -p kubernetes
 5199  cd /Users/igor/dev/stack-apps/apps/python-flask/\n
 5200  cd /Users/igor/dev/stack-apps/apps/python-flask\n
 5201  cd /Users/igor/dev/stack-apps/apps/python-flask
 5202  hub login -u sol01@agilestacks.io
 5203  export HUB_API=https://api.agilestacks.io
 5204  hub login -u sol01@agilestacks.io
 5205  export HUB_TOKEN=756bdfba7372ebfe35bd286f412ac526751e80f19de97a6c46c36574ddc61746e7e006df974f56bfa23c1cda6fd1d484742682d5937d74211359cf4bb36b5ecd08f8586429b2d5ba52f7da5cd225ee4006eb4bfda66e7242b039dd73ca94c9fedf306c56
 5206  hub ls -p harbor -p kubernetes
 5207  hub configure -s harbor@rrasi.buzz.superhub.io
 5208  source .env
 5209  cat .env
 5210  kubectl cluster-info
 5211  make -C ".hub" clean generate
 5212  code -n .
 5213  rm -rf "$USER/.skaffold"
 5214  echo $HUB_TOKEN
 5215  hub ls -p harbor -p kubernetes
 5216  echo $HUB_TOKEN
 5217  hub ls -p harbor -p kubernetes
 5218  hub ls -p harbor
 5219  clear
 5220  export HUB_TOKEN=756bdfba7372ebfe35bd286f412ac526751e80f19de97a6c46c36574ddc61746e7e006df974f56bfa23c1cda6fd1d484742682d5937d74211359cf4bb36b5ecd08f8586429b2d5ba52f7da5cd225ee4006eb4bfda66e7242b039dd73ca94c9fedf306c56
 5221  echo $HUB_TOKEN
 5222  hub ls -p harbor
 5223  cd /Users/igor/dev/stack-apps/apps/python-flask
 5224  clear
 5225  export HUB_TOKEN=756bdfba7372ebfe35bd286f412ac526751e80f19de97a6c46c36574ddc61746e7e006df974f56bfa23c1cda6fd1d484742682d5937d74211359cf4bb36b5ecd08f8586429b2d5ba52f7da5cd225ee4006eb4bfda66e7242b039dd73ca94c9fedf306c56
 5226  cd /Users/igor/dev/stack-apps/apps/python-flask
 5227  hub ls -p harbor
 5228  hub configure -s harbor@rrasi.buzz.superhub.io
 5229  source .env
 5230  kubectl cluster-info
 5231  kubectl get nodes
 5232  make -C ".hub" clean generate
 5233  ls -lrt
 5234  code -n .
 5235  clear
 5236  export HUB_TOKEN=756bdfba7372ebfe35bd286f412ac526751e80f19de97a6c46c36574ddc61746e7e006df974f56bfa23c1cda6fd1d484742682d5937d74211359cf4bb36b5ecd08f8586429b2d5ba52f7da5cd225ee4006eb4bfda66e7242b039dd73ca94c9fedf306c56
 5237  cd /Users/igor/dev/stack-apps/apps/python-flask
 5238  hub ls -p harbor
 5239  hub configure -s harbor@rrasi.buzz.superhub.io
 5240  source .env
 5241  kubectl get nodes
 5242  kubectl cluster-info
 5243  make -C ".hub" clean generate
 5244  code -n .
 5245  clear
 5246  cd /Users/igor/dev/stack-apps/apps/python-flask
 5247  export HUB_TOKEN=756bdfba7372ebfe35bd286f412ac526751e80f19de97a6c46c36574ddc61746e7e006df974f56bfa23c1cda6fd1d484742682d5937d74211359cf4bb36b5ecd08f8586429b2d5ba52f7da5cd225ee4006eb4bfda66e7242b039dd73ca94c9fedf306c56
 5248  hub ls -p harbor
 5249  hub configure -s harbor@rrasi.buzz.superhub.io
 5250  source .env
 5251  kubectl cluster-info
 5252  kubectl get nodes
 5253  make -C ".hub" clean generate
 5254  code -n .
 5255  clear
 5256  export HUB_TOKEN=756bdfba7372ebfe35bd286f412ac526751e80f19de97a6c46c36574ddc61746e7e006df974f56bfa23c1cda6fd1d484742682d5937d74211359cf4bb36b5ecd08f8586429b2d5ba52f7da5cd225ee4006eb4bfda66e7242b039dd73ca94c9fedf306c56
 5257  hub ls -p harbor
 5258  hub configure -s harbor@rrasi.buzz.superhub.io
 5259  source .env
 5260  kubectl get nodes
 5261  make -C ".hub" clean generate
 5262  code -n .
 5263  clear
 5264  cd /Users/igor/dev/stack-apps/apps/python-flask
 5265  hub login -u sol01@agilestacks.io
 5266  export HUB_TOKEN=756bdfba7372ebfe35bd286f412ac526751e80f19de97a6c46c36574ddc61746e7e006df974f56bfa23c1cda6fd1d484742682d5937d74211359cf4bb36b5ecd08f8586429b2d5ba52f7da5cd225ee4006eb4bfda66e7242b039dd73ca94c9fedf306c56
 5267  hub ls -p harbor
 5268  hub configure -s harbor@rrasi.buzz.superhub.io
 5269  source .env
 5270  kubectl get nodes
 5271  kubectl get services --namespace=kubeflow
 5272  make -C ".hub" clean generate
 5273  code -n .
 5274  hub ls -p harbor
 5275  hub ls -p harbor -p kubernetes
 5276  hub configure -s rrasi.buzz.superhub.io
 5277  hub configure -s harbor@rrasi.buzz.superhub.io
 5278  hub configure -s rrasi.buzz.superhub.io
 5279  code -n .
 5280  clear
 5281  export HUB_TOKEN=756bdfba7372ebfe35bd286f412ac526751e80f19de97a6c46c36574ddc61746e7e006df974f56bfa23c1cda6fd1d484742682d5937d74211359cf4bb36b5ecd08f8586429b2d5ba52f7da5cd225ee4006eb4bfda66e7242b039dd73ca94c9fedf306c56
 5282  cd /Users/igor/dev/stack-apps/apps/python-flask
 5283  hub ls -p harbor -p kubernetes
 5284  hub configure -s rrasi.buzz.superhub.io
 5285  source .env
 5286  kubectl get nodes
 5287  kubectl cluster-info
 5288  make -C ".hub" clean generate
 5289  code -n .
 5290  c;ear
 5291  clear
 5292  export HUB_TOKEN=756bdfba7372ebfe35bd286f412ac526751e80f19de97a6c46c36574ddc61746e7e006df974f56bfa23c1cda6fd1d484742682d5937d74211359cf4bb36b5ecd08f8586429b2d5ba52f7da5cd225ee4006eb4bfda66e7242b039dd73ca94c9fedf306c56
 5293  hub ls -p harbor -p kubernetes
 5294  hub configure -s rrasi.buzz.superhub.io
 5295  source .env
 5296  kubectl cluster-info
 5297  kubectl get nodes
 5298  cd /Users/igor/dev/stack-apps/apps/python-flask
 5299  make -C ".hub" clean generate
 5300  code -n .
 5301  rm -rf "$USER/.skaffold"
 5302  hub configure -s harbor@rrasi.buzz.superhub.io
 5303  source .env
 5304  make -C ".hub" clean generate
 5305  code -n .
 5306  clear
 5307  export HUB_TOKEN=756bdfba7372ebfe35bd286f412ac526751e80f19de97a6c46c36574ddc61746e7e006df974f56bfa23c1cda6fd1d484742682d5937d74211359cf4bb36b5ecd08f8586429b2d5ba52f7da5cd225ee4006eb4bfda66e7242b039dd73ca94c9fedf306c56
 5308  hub ls -p harbor -p kubernetes
 5309  hub configure -s harbor@rrasi.buzz.superhub.io
 5310  source .env
 5311  kubectl get nodes
 5312  cd /Users/igor/dev/stack-apps/apps/python-flask
 5313  make -C ".hub" clean generate
 5314  code -n .
 5315  clear
 5316  code -n .
 5317  clear
 5318  hub login -u sol01@agilestacks.io
 5319  kubectl get services --all-namespaces
 5320  hub ls -p harbor -p kubernetes
 5321  hub configure -s harbor@rrasi.buzz.superhub.io
 5322  cat .env
 5323  hub login -u sol01@agilestacks.io
 5324  export HUB_TOKEN=756bdfba7372ebfe35bd286f412ac526751e80f19de97a6c46c36574ddc61746e7e006df974f56bfa23c1cda6fd1d484742682d5937d74211359cf4bb36b5ecd08f8586429b2d5ba52f7da5cd225ee4006eb4bfda66e7242b039dd73ca94c9fedf306c56
 5325  hub ls -p harbor -p kubernetes
 5326  hub configure -s harbor@rrasi.buzz.superhub.io
 5327  source .env
 5328  cat .env
 5329  kubectl get services --all-namespaces
 5330  kubectl get nodes
 5331  make -C ".hub" clean generate
 5332  code -n .
 5333  pwd
 5334  code -n .
 5335  pwd
 5336  git status
 5337  git add --force .hub/env/configure
 5338  hub extensions update
 5339  pwd
 5340  rm -rf /Users/igor/.hub
 5341  hub extensions update
 5342  hub extensions install
 5343  pwd
 5344  hub login -u demo05@superhub.io
 5345  hub ls -p harbor -p kubernetes
 5346  export HUB_API=https://api.agilestacks.io
 5347  hub login -u demo05@superhub.io
 5348  export HUB_TOKEN=cd21c9f0667a4ce9b72b442f100467820c546b29f38b5398c306f7021f96145be491a0ccb9dabb88570bbe4533acb7515987a3a347bb9c602a8f897fce3e12c6b67693c158e8f5bf826c6e7a344bd45edc370d1a4a675224a5f1a8fd0c920f7ce429a91c
 5349  hub ls -p harbor -p kubernetes
 5350  hub configure -s ml1.demo51.superhub.io -f
 5351  source .env
 5352  make -C ".hub" clean generate
 5353  code -n .
 5354  pwd
 5355  code -n .
 5356  echo HUB_APP_NAME
 5357  source .env
 5358  docker login "${DOCKER_HOST}" -u "${DOCKER_USER}" -p "${DOCKER_PASS}"
 5359  docker login "${HUB_DOCKER_HOST}" -u "${HUB_DOCKER_USER}" -p "${HUB_DOCKER_PASS}"
 5360  pwd
 5361  cat .env
 5362  source .env
 5363  docker login "${HUB_DOCKER_HOST}" -u "${HUB_DOCKER_USER}" -p "${HUB_DOCKER_PASS}"
 5364  code -n .
 5365  aws ec2 describe-instances
 5366  hub ls -c 'postgresql'
 5367  hub login -u demo05@superhub.io
 5368  export HUB_API=https://api.agilestacks.io
 5369  hub login -u demo05@superhub.io
 5370  export HUB_TOKEN=01ac43c67b0574e727110f0c64857c85a3190e66b24607d94c6354e7fa22f9b59c7b00b1327d9296fb1af90bf879ec5e9fd30da0c9d5ed4d5315e1d107312ef6f5abfa982719fa338fc4b39396002e4dd364e9e274172b8a818162a1c9802a476ed9a945
 5371  hub ls -c 'postgresql'
 5372  hub ls -p 'postgresql'
 5373  hub ls -c 'postgresql'
 5374  hub ls -c 'postgresql' | hub show
 5375  hub ls -c 'postgresql' | hub show -c 'postgresql'
 5376  hub ls -c 'postgresql' \\n| hub show -c 'postgresql' -q '.outputs.component.postgresql.host'
 5377  hub ls -c 'postgresql' hub show -c 'postgresql' -q '.outputs.component.postgresql.host'
 5378  hub ls -c 'postgresql' | hub show -c 'postgresql' -q '.outputs.component.postgresql.host'
 5379  code -n .
 5380  tree --dirsfirst
 5381  pwd
 5382  tree --dirsfirst -a
 5383  pwd
 5384  hub ls -c 'postgresql' hub show -c 'postgresql' -q '.outputs.component.postgresql.host'
 5385  hub ls -c 'postgresql' | hub show -c 'postgresql' -q '.outputs.component.postgresql.host'
 5386  hub ls -c 'postgresql'
 5387  hub ls -c 'postgresql' | hub show -c 'postgresql'
 5388  hub ls -c postgresql | hub-show -c postgresql -q '.outputs.component.postgresql.host'
 5389  hub ls -c postgresql | hub show -c postgresql -q '.outputs.component.postgresql.host'
 5390  hub show -q '.parameters.component.docker.auth.basic.password' | hub ext show-secret
 5391  hub show -q '.parameters.component.docker.auth.basic.password' | hub show secret
 5392  hub show -q '.parameters.component.docker.auth.basic.password' | hub show-secret
 5393  hub show -q '.parameters.component.docker.auth.basic.password' | hub ext show-secret
 5394  hub show -q '.parameters.component.docker.auth.basic.password' | hub-show-secret
 5395  hub extensions update
 5396  hub show -q '.parameters.component.docker.auth.basic.password' | hub ext show-secret
 5397  hub ext show-secret
 5398  hub show -q '.parameters.component.docker.auth.basic.password'
 5399  hub ls
 5400  hub configure -f -s database@ml1.demo51.superhub.io
 5401  hub show -q '.parameters.component.docker.auth.basic.password
 5402  hub show -q '.parameters.component.docker.auth.basic.password'
 5403  hub ls -c postgresql | hub show -c postgresql -q '.outputs.component.postgresql.host'
 5404  hub ls -c postgresql
 5405  hub configure -s database@ml1.demo51.superhub.io -f
 5406  hub ls -c postgresql | hub show -c postgresql -q '.parameters.component.postgresql.database'
 5407  cat .env
 5408  hub show -q '.parameters.component.docker.auth.host'
 5409  hub ls -c postgresql [ hub show -q '.parameters.component.docker.auth.basic.password'
 5410  hub ls -c postgresql | hub show -q '.parameters.component.docker.auth.basic.password'
 5411  hub show -q '.parameters.component.docker.auth.basic.username'
 5412  hub show -c postgresql -q '.parameters.component.docker.auth.basic.password' | hub ext show-secret
 5413  hub show -c postgresql -q '.parameters.component.docker.auth.basic.password'
 5414  hub ls -c postgresql | hub show -c postgresql -q '.parameters.component.docker.auth.basic.password'
 5415  hub show -q '.parameters.component.docker.auth.host'
 5416  hub ls -c postgresql | hub show -q '.parameters.component.docker.auth.host'
 5417  hub show -q '.parameters.component.docker.auth.basic.password'
 5418  export AWS_PROFILE=demo05
 5419  hub configure -s ml1.demo51.superhub.io -f
 5420  source .env
 5421  pwd
 5422  hub ls -c postgresql
 5423  hub configure -s ml1.demo51.superhub.io -f
 5424  hub configure -s database@ml1.demo51.superhub.io -f
 5425  source .env
 5426  hub configure -s ml1.demo51.superhub.io -f
 5427  source .env
 5428  hub show -q '.parameters.component.docker.auth.host'
 5429  hub ls -c postgresql | hub show -c postgresql -q '.parameters.component.postgresql.database'
 5430  hub ls -c postgresql
 5431  make -C ".hub" clean generate
 5432  hub ls
 5433  hub configure -s ml1.demo51.superhub.io -f
 5434  source .env
 5435  hub ls
 5436  make -C ".hub" clean generate
 5437  hub ls
 5438  make -C ".hub" clean generate
 5439  pwd
 5440  cd /Users/igor/demo
 5441  pwd
 5442  ls
 5443  mkdir flask
 5444  cd flask
 5445  git clone https://github.com/agilestacks/stack-apps.git
 5446  ls -lrt
 5447  cd stack-apps
 5448  ls
 5449  cd apps
 5450  ls
 5451  cd python-flask
 5452  hub ls -p harbor
 5453  hub login -u demo05@superhub.io
 5454  export HUB_TOKEN=4cd572c8225d19d7ee1685e213108c2926acf9c7b252f2ce995f24771698da0fcfe997f7cca63f41aaa6aed2b762e48596e41a5a61343d3200295a1ebd4cc2c0a635e6c84c07d0ca56e55c799abc509d5576d180c3e6c2e4a9d2225a93354d10eab1d324
 5455  hub ls -p harbor
 5456  hub configure -s ml1.demo51.superhub.io -f
 5457  source .env
 5458  kubectl cluster-info
 5459  make -C ".hub" clean generate
 5460  code -n .
 5461  docker-machine
 5462  docker
 5463  brew install jq yq jsonnet skaffold kubectl make docker
 5464  pwd
 5465  code -n .
 5466  pwd
 5467  cd src
 5468  export FLASK_APP=app.py
 5469  export FLASK_ENV=development
 5470  export FLASK_SKIP_DOTENV=1
 5471  flask db --help
 5472  flask db init
 5473  pip install flask-migrate --upgrade
 5474  flask db init
 5475  flask db --help
 5476  pwd
 5477  flask db init
 5478  pip install flask-json --upgrade
 5479  flask db init
 5480  pip install flask-json uptime --upgrade
 5481  flask db init
 5482  flask db revision -m datadef
 5483  flask db revision -m dataset
 5484  tree --dirsfirst -a
 5485  ls
 5486  cd..
 5487  cd ..
 5488  ls
 5489  skaffold render
 5490  skaffold
 5491  skaffold render
 5492  code -n .
 5493  skaffold render
 5494  code -n .
 5495  pwd
 5496  skaffold render
 5497  skaffold dev
 5498  code -n .
 5499  pwd
 5500  code -n .
 5501  pwd
 5502  code -n .
 5503  docker login "${HUB_DOCKER_HOST}" -u "${HUB_DOCKER_USER}" -p "${HUB_DOCKER_PASS}"
 5504  echo HUB_DOCKER_HOST
 5505  echo $HUB_DOCKER_HOST
 5506  skaffold dev
 5507  code -n .
 5508  pwd
 5509  cd /Users/igor/dev/stack-apps/apps/python-flask1
 5510  ls
 5511  code -n .
 5512  pwd
 5513  cd /Users/igor/dev/stack-apps/apps/efficientnet1
 5514  code -n .
 5515  pwd
 5516  cd /Users/igor/dev/stack-apps/apps/python-flask
 5517  ls -lrt
 5518  hub ls -p harbor
 5519  hub login -u demo05@superhub.io
 5520  export HUB_API=https://api.agilestacks.io
 5521  hub login -u demo05@superhub.io
 5522  export HUB_TOKEN=9dc5a0b55a9a389fd964e32760dab3f8ad97f4a6c6c3045b73badb3a5ecac932188039f7ae3314e96c71408bc9540aeeed04a3e0ecdcc1994becacd35c5a74874e2945aa516820670c3e2cf9ab576702f0f34bcfd5b6e22695af6b28bbafceb8035f2b16
 5523  hub ls -p harbor
 5524  hub configure -s ml1.demo51.superhub.io -f
 5525  source .env
 5526  kubectl cluster-info
 5527  make -C ".hub" clean generate
 5528  code -n .
 5529  cd /Users/igor/dev/stack-apps/apps/efficientnet1
 5530  code -n .
 5531  pwd
 5532  code -n .
 5533  cd src
 5534  flask db init
 5535  ls
 5536  flask db --help
 5537  ls -lrt
 5538  rm -rf migrations
 5539  flask db init
 5540  flask db revision -m datadef
 5541  pip install psycopg2
 5542  export FLASK_APP=app.py
 5543  export FLASK_ENV=development
 5544  export FLASK_SKIP_DOTENV=1 
 5545  flask db --help
 5546  flask db init
 5547  pip install psycopg2 --upgrade
 5548  sudo apt-get install libpq-dev
 5549  brew install postgresql
 5550  pip install psycopg2 --upgrade
 5551  flask db init
 5552  pwd
 5553  ls -lrt
 5554  rm -rf __pycache__
 5555  ls -lrt static
 5556  export FLASK_SKIP_DOTENV=1
 5557  cat app.py
 5558  flask db --help
 5559  flask db init
 5560  hub ls -p harbor
 5561  hub configure -s ml1.demo51.superhub.io -f
 5562  source .env
 5563  hub configure -s ml1.demo51.superhub.io -f
 5564  kubectl cluster-info
 5565  make -C ".hub" clean generate
 5566  cd ..
 5567  hub configure -s ml1.demo51.superhub.io -f
 5568  source .env
 5569  make -C ".hub" clean generate
 5570  cd src
 5571  export FLASK_APP=app.py
 5572  export FLASK_ENV=development
 5573  flask db --help
 5574  flask db init
 5575  code -n .
 5576  cd ..
 5577  code -n .
 5578  hub ls -c 'postgresql' | hub show -c 'postgresql'
 5579  hub ls -c 'postgresql' | hub show -c 'postgresql' -q '.outputs.component.postgresql.host'
 5580  code -n .
 5581  echo $HUB_DATABASE_URI
 5582  echo $SQLALCHEMY_DATABASE_URI
 5583  echo $HUB_DATABASE_URI
 5584  cd src
 5585  flask db init
 5586  flask db revision -m datadef
 5587  flask db --help
 5588  flask db current
 5589  env|grep svc.cluster.local
 5590  export HUB_DATABASE_URI=
 5591  env|grep svc.cluster.local
 5592  flask db init
 5593  hub configure -s ml1.demo51.superhub.io -f
 5594  ls -lrt
 5595  rm -rf __pycache__
 5596  cd ..
 5597  ls -lrt
 5598  hub configure -s ml1.demo51.superhub.io -f
 5599  hub ls -c postgresql | hub show -c postgresql -q '.outputs.component.postgresql.host'
 5600  source .env
 5601  hub ls -c postgresql | hub show -c postgresql
 5602  hub ls -c 'postgresql' | hub show
 5603  hub ls -c 'postgresql' | hub show -c 'postgresql' -q '.outputs.component.postgresql.host'
 5604  brew uninstall postgresql
 5605  ls -lrt
 5606  ls -lart
 5607  source .env
 5608  cat .env
 5609  make -C ".hub" clean generate
 5610  echo $SQLALCHEMY_DATABASE_URI
 5611  pwd
 5612  cd src
 5613  ls
 5614  flask db init
 5615  export FLASK_APP=app.py
 5616  export FLASK_SKIP_DOTENV=1
 5617  flask db init
 5618  pip uninstall psycopg2
 5619  flask db init
 5620  pip install psycopg2
 5621  which pg_config
 5622  pip install psycopg2-binary
 5623  flask db init
 5624  cd ..
 5625  ls
 5626  flask db init
 5627  cd src
 5628  ls
 5629  rm -rf __pycache__
 5630  flask db init
 5631  env
 5632  env|grep postg
 5633  history >dev_hist.txt
 5634  code -n .
 5635  rm dev_hist.txt
 5636  cd ..
 5637  history >dev_hist.txt
 5638  code -n .
 5639  pwd
 5640  cd /Users/igor/demo
 5641  ls
 5642  ls -lrt
 5643  cd flask
 5644  ls -lrt
 5645  cd stack-apps/apps/python-flask/
 5646  ls -lrt
 5647  cd src
 5648  ls
 5649  ls -lrt
 5650  cd ..
 5651  ls -lrt
 5652  code -n .
 5653  ls -ler
 5654  ls -lrt
 5655  hub ls -p harbor
 5656  hub login -u demo05@superhub.io
 5657  export HUB_TOKEN=ecfaaa6716145134339b6197eea3ae81da993330a2cf60beba8c897a791392ff33f1eb449cda3c9fc98cb695bec436f47afd131c29089f807ae63b1b4b408d7ea4da4f0d7213e689fd680e463448744f5fe513b925a4d4bbf17106e5f1422811a49b83a6
 5658  hub ls -p harbor
 5659  hub configure -s ml1.demo51.superhub.io -f
 5660  source .env
 5661  kubectl cluster-info
 5662  make -C ".hub" clean generate
 5663  cd src
 5664  export FLASK_APP=app.py
 5665  export FLASK_ENV=development
 5666  export FLASK_SKIP_DOTENV=1
 5667  flask db --help
 5668  flask db init
 5669  pwd
 5670  export FLASK_SKIP_DOTENV=1
 5671  flask db --help
 5672  flask db init
 5673  psql
 5674  brew install postgresql
 5675  psql
 5676  flask db init
 5677  pg_ctl -D /usr/local/var/postgres start
 5678  postgres -V
 5679  psql postgres
 5680  flask db init
 5681  service postgresql status
 5682  echo $SQLALCHEMY_DATABASE_URI
 5683  echo $HUB_DATABASE_URI
 5684  export HUB_DATABASE_URI=postgresql://postgres:postgres@localhost:5432/postgres
 5685  flask db init
 5686  initdb /usr/local/var/postgres
 5687  /usr/local/opt/postgres/bin/createuser -s postgres
 5688  pg_ctl -D /usr/local/var/postgres start
 5689  pg_ctl -D /usr/local/var/postgres stop
 5690  pg_ctl -D /usr/local/var/postgres start
 5691  flask db init
 5692  pwd
 5693  flask db revision -m datadef
 5694  flask db init
 5695  flask db
 5696  flask db current
 5697  flask db
 5698  flask db edit
 5699  flask db
 5700  flask db history
 5701  flask db
 5702  cd ..
 5703  source .env
 5704  cd src
 5705  flask db init
 5706  env|grep postg
 5707  flask db init
 5708  pwd
 5709  flask db init
 5710  echo $SQLALCHEMY_DATABASE_URI
 5711  echo $HUB_DATABASE_URI
 5712  source .env
 5713  cd ..
 5714  source .env
 5715  echo $HUB_DATABASE_URI
 5716  hub configure -s ml1.demo51.superhub.io -f
 5717  source .env
 5718  make -C ".hub" clean generate
 5719  echo $HUB_DATABASE_URI
 5720  hub ls -p harbor
 5721  hub configure -s ml1.demo51.superhub.io -f
 5722  source .env
 5723  pwd
 5724  echo $HUB_DATABASE_URI
 5725  pwd
 5726  hub configure -s ml1.demo51.superhub.io -f
 5727  source .env
 5728  make -C ".hub" clean generate
 5729  pwd
 5730  cd src/
 5731  pwd
 5732  export FLASK_APP=app.py
 5733  export FLASK_ENV=development
 5734  export FLASK_SKIP_DOTENV=1 
 5735  flask db init
 5736  echo $HUB_DATABASE_URI
 5737  make -C ".hub" clean generate
 5738  cd ..
 5739  make -C ".hub" clean generate
 5740  flask db init
 5741  cd src/
 5742  flask db init
 5743  pwd
 5744  cd ..
 5745  code -n .
 5746  pwd
 5747  cd src
 5748  flask db init
 5749  history >dev_hist.txt
 5750  pwd
 5751  cd ..
 5752  hub ls -p harbor
 5753  hub ls -c 'postgresql' | hub show -c 'postgresql' -q '.outputs.component.postgresql.host'
 5754  pwd
 5755  hub configure -s ml1.demo51.superhub.io -f
 5756  cat .env
 5757  source .env
 5758  make -C ".hub" clean generate
 5759  pwd
 5760  cd src
 5761  flask db init
 5762  kubect -n posgresql get services
 5763  kubectl -n posgresql get services
 5764  kubectl -n posgresql get service
 5765  kubectl -n posgresql get pods
 5766  kubectl -n postgresql get services
 5767  kubectl -n postgresql port-forward postgresql-database-postgresql 5432
 5768  kubectl -n postgresql port-forward svc/postgresql-database-postgresql 5432
 5769  pg_ctl -D /usr/local/var/postgres stop
 5770  kubectl -n postgresql port-forward svc/postgresql-database-postgresql 5432
 5771  kubectl -n postgresql port-forward svc/postgresql-database-postgresql 5432 &
 5772  pwd
 5773  flask db init
 5774  source .env
 5775  cd ..
 5776  source .env
 5777  cd src
 5778  flask db init
 5779  pip uninstall flask-migrate
 5780  pip install flask-migrate --upgrade
 5781  flask db init
 5782  psql postgres
 5783  flask db init
 5784  ps -ef
 5785  ps
 5786  kill 9527
 5787  kubectl -n postgresql port-forward svc/postgresql-database-postgresql 5432 &
 5788  ps
 5789  flask db init
 5790  ls -lrt
 5791  flask db revision -m datadef
 5792  flask db revision -m dataset
 5793  skaffold render
 5794  cd ..
 5795  skaffold render
 5796  pwd
 5797  cd /Users/igor/demo/flask/stack-apps/apps/python-flask
 5798  export AWS_PROFILE=sol01\n
 5799  aws s3 ls
 5800  hub login -u sol01@agilestacks.io
 5801  export HUB_TOKEN=c30b5f33f98d23bcd9be364cef5dd95e011fb7bb5dd0b0815fbe849b9c3dcc36074240f7de0f8faa31dc3201d4f05e6e08b81f92a10e0764ed464c1d0abcb48937d7f4a944a3091bc3243207ddfd9877b1d2e1c15f4271cad0a67c9e4e2535b996271007
 5802  hub ls -p harbor -p kubernetes
 5803  hub configure -s harbor@rrasi.buzz.superhub.io
 5804  source .env
 5805  cat .env
 5806  kubectl cluster-info
 5807  make -C ".hub" clean generate
 5808  code -n .
 5809  hub ls -c 'postgresql'
 5810  hub ls -c 'postgresql' | hub show -c 'postgresql'
 5811  hub ls -c 'postgresql' | hub show -c 'postgresql' -q '.outputs.component.postgresql.host'
 5812  hub ls -c 'postgresql' | hub show -c 'postgresql'
 5813  hub ls -c 'postgresql'
 5814  hub ls
 5815  hub ls --help
 5816  hub ls -h
 5817  hub ls -c 'postgresql
 5818  hub ls -c 'postgresql'
 5819  hub show -c 'postgresql' -q '.outputs.component.postgresql.host' <harbor@rrasi.buzz.superhub.io
 5820  hub show -c 'postgresql' -q '.outputs.component.postgresql.host'
 5821  hub configure -s harbor@rrasi.buzz.superhub.io
 5822  hub configure -s harbor@rrasi.buzz.superhub.io -f
 5823  kubectl get services -n postgresql
 5824  source .env
 5825  env|grep postg
 5826  source .env
 5827  env|grep postg
 5828  echo $HUB_DATABASE_URI
 5829  source .env
 5830  echo $HUB_DATABASE_URI
 5831  ps
 5832  kill 10402
 5833  kubectl -n postgresql port-forward svc/postgresql-harbor-postgresql 5432
 5834  kubectl -n postgresql port-forward svc/postgresql-harbor-postgresql 5432 &
 5835  psql -h localhost -U postgres -p 5433
 5836  psql -h localhost -U postgres -p 5432
 5837  ps
 5838  kill 29972
 5839  hub ls -c 'postgresql'
 5840  hub ls -c 'postgresql' | hub show -c 'postgresql'
 5841  hub ls -c 'postgresql' | hub show -c 'postgresql' -q '.outputs.component.postgresql.host'
 5842  hub ls -c 'postgresql'
 5843  echo 'harbor@rrasi.buzz.superhub.io'
 5844  echo 'harbor@rrasi.buzz.superhub.io' | hub show -c 'postgresql' -q '.outputs.component.postgresql.host'
 5845  hub show -s harbor@rrasi.buzz.superhub.io -q '.outputs.component.postgresql.host'
 5846  hub show -s harbor@rrasi.buzz.superhub.io -c 'postgresql' -q '.outputs.component.postgresql.host'
 5847  hub ls -c 'postgresql'
 5848  pwd
 5849  git status
 5850  code -n .
 5851  ls
 5852  ls -lrt
 5853  pwd
 5854  hub login -u demo05@superhub.io
 5855  export HUB_API=https://api.agilestacks.io
 5856  hub login -u demo05@superhub.io
 5857  export HUB_TOKEN=3c2ade236ce4c9e7629716f526d2516db416e29805232878621b997e74d871820c74ae65c109cc99ec6a77e4fe68760d729abdd5f52cdc4992f692fdd7a67b890dbc14862cd579754221d968648aa087d842c4d87b0184b6c521273b15e32e928335f59b
 5858  hub ls -p harbor -p kubernetes
 5859  hub configure -s ml1.demo51.superhub.io -f
 5860  ls -lrt
 5861  cp skaffold.yaml skaffold_save.yaml
 5862  hub login -u sol01@agilestacks.io
 5863  export HUB_TOKEN=02f89d98d355dcfc906b1a1a30391e9890490faedd5a984db005a9f26f0d7274ebaa5a824e1d5d20e4b2bc353d74e5ebed6062ae541581b58800a0a3088e27425d7c054dcf4c490e65425d9b14162b42f9408b966adee6073e93ff6cd494cbd5665a6ec3
 5864  hub ls -p harbor -p kubernetes
 5865  hub ls -c 'postgresql' | hub show -c 'postgresql' -q '.outputs.component.postgresql.host'
 5866  hub ls -p harbor -p kubernetes
 5867  hub ls -c 'postgresql' | hub show -c 'postgresql' -q '.outputs.component.postgresql.host'
 5868  hub show -s rrasi.buzz.superhub.io -c 'postgresql' -q '.outputs.component.postgresql.host'
 5869  hub show -s rrasi.buzz.superhub.io
 5870  hub ls -p harbor -p kubernetes
 5871  hub configure -s harbor@rrasi.buzz.superhub.io -f
 5872  cat .env
 5873  code -n .
 5874  hub configure -s harbor@rrasi.buzz.superhub.io -f
 5875  cat .env
 5876  hub ls -p harbor -p kubernetes
 5877  hub ls -p kubernetes
 5878  hub configure -s redcluster.cirras.superhub.io
 5879  hub show -s redcluster.cirras.superhub.io
 5880  hub ls -p harbor -p kubernetes
 5881  hub ls -p harbor
 5882  hub configure -s devstack@redcluster.cirras.superhub.io
 5883  cat .env
 5884  hub configure -s harbor@rrasi.buzz.superhub.io -f
 5885  cat .env
 5886  pwd
 5887  git status
 5888  pwd
 5889  cd ..
 5890  ls
 5891  pwd
 5892  ls -lrt
 5893  cp -r python-flask efficientnet2
 5894  cd efficientnet2
 5895  git status
 5896  git status -a
 5897  git status -v
 5898  pwd
 5899  ls
 5900  code -n .
 5901  pwd
 5902  cd ..
 5903  ls -lrt
 5904  cd ..
 5905  ls -lrt
 5906  pwd
 5907  cd stack-apps/
 5908  ls
 5909  cd apps
 5910  ls -lrt
 5911  rm -rf efficientnet2
 5912  cp -r python-flask efficientnet2
 5913  cd efficientnet2
 5914  code -n .
 5915  pwd
 5916  cd ..
 5917  ls -lrt
 5918  pwd
 5919  cd ..
 5920  pwd
 5921  cd stack-apps/
 5922  ls
 5923  cd apps
 5924  ls
 5925  cp -r python-flask efficientnet2
 5926  cd efficientnet2
 5927  ls -lrt
 5928  rm -r docs
 5929  rm -rf docs
 5930  ls -lrt
 5931  pwd
 5932  code -n .
 5933  pwd
 5934  code -n .
 5935  pwd
 5936  ls -lrt
 5937  hub login -u demo05@superhub.io
 5938  export HUB_TOKEN=3073be03dcd317571a5c8e2514e17f424226f2385b1991e9c96c14b4cdfc3ac2bfeccc3700aa1e86da3f8f116362ffbdfcd42a776455c164de8973091a3ad431b6272296f3f1c156f04e4be11f6eb7a20438427d321e98d1051ecbdbe79cd93bbaad05e7
 5939  hub ls -p harbor
 5940  hub configure -s ml1.demo51.superhub.io -f
 5941  source .env
 5942  kubectl cluster-info
 5943  make -C ".hub" clean generate
 5944  pwd
 5945  hub ls -p harbor
 5946  pwd
 5947  code -n .
 5948  ls
 5949  ls -lrt
 5950  pwd
 5951  ls -lrt
 5952  hub login -u sol01@agilestacks.io
 5953  export HUB_TOKEN=4fb975321cbd04dc0b0939d46ff60f266a619dcdf792d2e83498a0d3ab7008c6fcd8fff1339fe9dfe8e7c543dd8a5e4850bf52a15cf0c5126f5c48c5a07182396b43eec88da0a8c9e80a614cfa586f0b5afb7b8842e1dc0ea82f276736fc213a05ddebcb
 5954  hub ls -p harbor
 5955  hub configure -s harbor@rrasi.buzz.superhub.io -f
 5956  source .env
 5957  kubectl cluster-info
 5958  code -n .
 5959  hub ls -p harbor
 5960  code -n .
 5961  pwd
 5962  hub ls -p harbor
 5963  hub configure -s metalblue@blue.cirras.superhub.io -f
 5964  source .env
 5965  kubectl cluster-info
 5966  kubect get nodes
 5967  kubectl get nodes
 5968  cat .env
 5969  kubectl get nodes
 5970  ping 192.168.193.1
 5971  dig docs.agilestacks.com
 5972  vi /etc/hosts
 5973  sudo vi /etc/hosts
 5974  hub configure -s metalblue@blue.cirras.superhub.io -f
 5975  source .env
 5976  kubectl get nodes
 5977  make -C ".hub" clean generate
 5978  code -n .
 5979  sudo vi /etc/hosts
 5980  kubectl -n postgresql port-forward svc/postgresql-metalblue-postgresql 5432 &
 5981  psql -h localhost -U postgres -p 5432
 5982  ps
 5983  kill 21968
 5984  ps
 5985  hub ls -p harbor
 5986  hub configure -s harbor@rrasi.buzz.superhub.io
 5987  source .env
 5988  cat .env
 5989  kubectl get nodes
 5990  make -C ".hub" clean generate
 5991  code -n .
 5992  sudo vi /etc/hosts
 5993  hub ls -p harbor
 5994  hub configure -s metalblue@blue.cirras.superhub.io -f
 5995  source .env
 5996  kubectl get nodes
 5997  make -C ".hub" clean generate
 5998  code -n .
 5999  hub api instance get blue.cirras.superhub.io
 6000  hub ls -p harbor
 6001  hub configure -s harbor@rrasi.buzz.superhub.io
 6002  source .env
 6003  make -C ".hub" clean generate
 6004  hub configure -s harbor@rrasi.buzz.superhub.io
 6005  source .env
 6006  code -n .
 6007  hub ls -p harbor
 6008  source .env
 6009  code -n .
 6010  pwd
 6011  hub ls -p harbor
 6012  clear
 6013  hub ls -p harbor
 6014  hub configure -s harbor@rrasi.buzz.superhub.io
 6015  hub configure -s harbor@rrasi.buzz.superhub.io -f
 6016  source .env
 6017  kubectl get nodes
 6018  make -C ".hub" clean generate
 6019  code -n .
 6020  ls
 6021  hub ls -p harbor
 6022  hub configure -s metalblue@blue.cirras.superhub.io -f
 6023  source .env
 6024  kubectl get nodes
 6025  make -C ".hub" clean generate
 6026  code -n .
 6027  kubectl get nodes
 6028  code -n .
 6029  hub configure -s harbor@rrasi.buzz.superhub.io -f
 6030  source .env
 6031  kubectl get nodes
 6032  make -C ".hub" clean generate
 6033  hub ls -p harbor
 6034  code -n .
 6035  export AWS_PROFILE=sol01
 6036  hub ls -p harbor
 6037  cd ~/dev/agilestacks-components/sweeper
 6038  export AWS_PROFILE=spec
 6039  aws s3 ls
 6040  ./main.py sweep --account 435841353077
 6041  aws s3 ls
 6042  ./main.py sweep --account 435841353077
 6043  aws s3 ls
 6044  aws s3 ls s3://m-kfp-mnist/mnist_kmeans_example/
 6045  aws s3 ls s3://m-kfp-mnist/
 6046  aws s3 ls s3://m-kfp-mnist/mnist_kmeans_example/data
 6047  ls -lrt
 6048  vi hist_stage1.txt
 6049  aws s3 ls s3://mldemo-im.agilestacks.io --recursive
 6050  aws s3 ls s3://m-kfp-mnist/ --recursive
 6051  code -n .
 6052  cat .env
 6053  hub ls -p harbor
 6054  cat .env
 6055  pwd
 6056  export AWS_PROFILE=sol01
 6057  hub login -u sol01@agilestacks.io
 6058  export HUB_TOKEN=ee33c7be44918793e11a52d26c183ac9d10b9f1b62ad05fb85396d8f349f588e59260c6883f962aa028cadd97b8305bef610767229f2d961397ad7caa4b5faf8abd0ae4932e7acca8352f781797419718ef46692114fa06bd2bb197b3f37c7f4d025e445
 6059  hub ls -p harbor
 6060  ls -lrt
 6061  git status -v
 6062  hub ls -p harbor
 6063  hub ls -p postgresql
 6064  hub configure -s harbor@rrasi.buzz.superhub.io -f
 6065  source .env
 6066  kubectl get nodes
 6067  make -C ".hub" clean generate
 6068  code -n .
 6069  export AWS_PROFILE=poc01
 6070  asw s3 ls
 6071  aws s3 ls
 6072  ping 192.168.193.1
 6073  clear
 6074  aws s3 ls
 6075  pwd
 6076  hub login -u gdms.support@agilestacks.io
 6077  export HUB_TOKEN=4eaf338cded6d7d6faa5eac219ac3ff0c20825b097eff5cec914883cc01892db6f278df612c5e85a8d1db61ad7733af2e0da8497a3c3dd730306358568270e421687e48a39f112d1969d1774274472ac28cdc793393bde21429567ad6fc196d05d1fe0d4c49996e8fba339da7cc00c8e0bb97664
 6078  hub ls -p postgresql
 6079  hub configure -s dev1.gdaws1.superhub.io -f
 6080  source .env
 6081  make -C ".hub" clean generate
 6082  code -n .
 6083  hub ls -p postgresql
 6084  pwd
 6085  export AWS_PROFILE=sol01
 6086  hub login -u sol01@agilestacks.io
 6087  export HUB_TOKEN=0901bd40a111233d2a0df27dc797001394457158f571ed0a7fc6706689edbb6548c40f2b036f335fa1c472b8f620939c751da71fb47f3407901700fbc5a81e99afdb958271197cd621a86e14fa162ed6fa7afe42c09fa4439c5bf74017b1f72e38fa7a86
 6088  hub ls -p postgresql
 6089  hub configure -s harbor@rrasi.buzz.superhub.io -f
 6090  source .env
 6091  kubectl get nodes
 6092  make -C ".hub" clean generate
 6093  code -n .
 6094  kubectl get nodes
 6095  kubectl get services -n postgresql
 6096  kubectl get ingress --all-namespaces
 6097  hub login -u demo05@superhub.io
 6098  kubectl get ingress --all-namespaces
 6099  hub ls -p postgresql
 6100  hub login -u demo05@superhub.io
 6101  //api.agilestacks.io\nexport HUB_TOKEN=ce0adfefd6c818f4fde8d699c25e5fe852055747bbdc241ac078d181ab34971cfacc5e10746208b9026d4a202c565b1bc45f7cec89f7cf130ac4277854e0ec0f07ba6c47d1818e2df20d536adb82c4f8dbb8e000ab84b6ba03e024aacb9e32b260f93380
 6102  export HUB_TOKEN=ce0adfefd6c818f4fde8d699c25e5fe852055747bbdc241ac078d181ab34971cfacc5e10746208b9026d4a202c565b1bc45f7cec89f7cf130ac4277854e0ec0f07ba6c47d1818e2df20d536adb82c4f8dbb8e000ab84b6ba03e024aacb9e32b260f93380
 6103  hub ls -p postgresql
 6104  hub configure -s database@ml1.demo51.superhub.io -f
 6105  source .env
 6106  kubectl get ingress --all-namespaces
 6107  kubectl get services -n kubeflow
 6108  aws s3 ls
 6109  vi ~/.aws/config
 6110  vi ~/.aws/credentials
 6111  export AWS_PROFILE=marketplace
 6112  aws s3 ls
 6113  vi ~/.aws/credentials
 6114  export AWS_PROFILE=marketplace
 6115  aws s3 ls
 6116  aws s3 ls s3://mkt-agilestacks-io/ --recursive
 6117  aws marketplacecommerceanalytics generate-data-set \\n--data-set-type "customer_subscriber_hourly_monthly_subscriptions" \\n--data-set-publication-date "2020-05-07T13:52:14Z" \\n--role-name-arn "arn:aws:iam::442151766923:role/MarketplaceCommerceAnalyticsRole" \\n--destination-s3-bucket-name "mkt-agilestacks-io" \\n--destination-s3-prefix "test-prefix" \\n--sns-topic-arn "arn:aws:sns:us-east-1:442151766923:mkt-sns-agilestacks"
 6118  vi ~/.aws/config
 6119  brew upgrade awscli
 6120  aws s3 ls s3://mkt-agilestacks-io/ --recursive
 6121  aws marketplacecommerceanalytics generate-data-set \\n--data-set-type "customer_subscriber_hourly_monthly_subscriptions" \\n--data-set-publication-date "2020-05-07T13:52:14Z" \\n--role-name-arn "arn:aws:iam::442151766923:role/MarketplaceCommerceAnalyticsRole" \\n--destination-s3-bucket-name "mkt-agilestacks-io" \\n--destination-s3-prefix "test-prefix" \\n--sns-topic-arn "arn:aws:sns:us-east-1:442151766923:mkt-sns-agilestacks"
 6122  export AWS_REGION=us-east1-1\nexport BUCKET_NAME=s3://mldemo-im.agilestacks.io\nexport S3_USE_HTTPS=1\nexport S3_VERIFY_SSL=1
 6123  aws s3 ls s3://mkt-agilestacks-io/ --recursive
 6124  aws s3 ls
 6125  export AWS_REGION="us-east-1"
 6126  aws s3 ls
 6127  aws s3 ls s3://mkt-agilestacks-io/ --recursive
 6128  aws marketplacecommerceanalytics generate-data-set \\n--data-set-type "customer_subscriber_hourly_monthly_subscriptions" \\n--data-set-publication-date "2020-05-07T13:52:14Z" \\n--role-name-arn "arn:aws:iam::442151766923:role/MarketplaceCommerceAnalyticsRole" \\n--destination-s3-bucket-name "mkt-agilestacks-io" \\n--destination-s3-prefix "test-prefix" \\n--sns-topic-arn "arn:aws:sns:us-east-1:442151766923:mkt-sns-agilestacks"
 6129  aws s3 ls s3://mkt-agilestacks-io/ --recursive
 6130  aws marketplacecommerceanalytics generate-data-set \\n--data-set-type "customer_subscriber_hourly_monthly_subscriptions" \\n--data-set-publication-date "2020-05-07T14:20:14Z" \\n--role-name-arn "arn:aws:iam::442151766923:role/MarketplaceCommerceAnalyticsRole" \\n--destination-s3-bucket-name "mkt-agilestacks-io" \\n--destination-s3-prefix "data-prefix" \\n--sns-topic-arn "arn:aws:sns:us-east-1:442151766923:mkt-sns-agilestacks"
 6131  aws s3 ls s3://mkt-agilestacks-io/ --recursive
 6132  aws marketplacecommerceanalytics generate-data-set \\n--data-set-type "customer_subscriber_hourly_monthly_subscriptions" \\n--data-set-publication-date "2020-05-07T14:20:14Z" \\n--role-name-arn "arn:aws:iam::442151766923:role/MarketplaceCommerceAnalyticsRole" \\n--destination-s3-bucket-name "mkt-agilestacks-io" \\n--sns-topic-arn "arn:aws:sns:us-east-1:442151766923:mkt-sns-agilestacks"
 6133  aws s3 ls s3://mkt-agilestacks-io/ --recursive
 6134  aws marketplacecommerceanalytics generate-data-set \\n--data-set-type "customer_subscriber_hourly_monthly_subscriptions" \\n--data-set-publication-date "2020-05-07T14:20:14Z" \\n--role-name-arn "arn:aws:iam::442151766923:role/MarketplaceCommerceAnalyticsRole" \\n--destination-s3-bucket-name "mkt-agilestacks-io" \\n--sns-topic-arn "arn:aws:sns:us-east-1:442151766923:mkt-sns-agilestacks"
 6135  aws s3 ls s3://mkt-agilestacks-io/ --recursive
 6136  cd /Users/igor/demo/flask/stack-apps/apps/python-flask
 6137  export AWS_PROFILE=sol01
 6138  hub login -u sol01@agilestacks.io
 6139  export HUB_TOKEN=2913468b24bfe172290035ac22a8ccc7c36e7b5526a541196f1b34b9c9195042383462952b97150965f8e4d3638987f503975ada69daf32d3f564f6030ed717cae12be493f0359344c358285bc747e26945449b3bc047598a734608f3ce283ae0358690b
 6140  hub ls -p harbor
 6141  hub api cloudaccount cf-template -f -o x-account-role.json
 6142  ls -lrt
 6143  cat x-account-role.json
 6144  export AWS_PROFILE=demo05
 6145  hub login -u demo05@superhub.io
 6146  export HUB_TOKEN=e5691c35df1c7a5464df9e6623834075b84cb43830afba45c352b7bc9ea74c003ea4320e3bab06d89ac681259324b24044d6c5963b84cfff888b5500459cb52dd3e239a3bd2a7ec8820eb8a490a447f4990d8d133465a250ef31e0c380b951075df2da99
 6147  hub ls -p harbor
 6148  hub configure -s ml1.demo51.superhub.io -f
 6149  source .env
 6150  kubectl get services -n kubeflow
 6151  kubectl get services -n kubecost
 6152  kubectl port-forward --namespace kubecost deployment/demo-05-kube-cost-demo-05-kubecost-2048-cost-analyzer 9090
 6153  ls
 6154  pwd
 6155  ls -lrt
 6156  rm x-account-role.json
 6157  cd /Users/igor/dev/demo05-kubecost-2048
 6158  git clone git@github.com:kubecost/cost-analyzer-helm-chart.git\n
 6159  ls -lrt
 6160  kubectl port-forward --namespace kubecost deployment/demo-05-kube-cost-demo-05-kubecost-2048-cost-analyzer 9090
 6161  kubectl get services -n kubecost
 6162  hub ls -p harbor
 6163  hub login -u demo05@superhub.io
 6164  export HUB_API=https://api.agilestacks.io
 6165  hub login -u demo05@superhub.io
 6166  export HUB_TOKEN=188af9e4fd02c107c293bfbd4ac6b21d19b8fb0890f182364f8dbdefba6783d4b012581705e06836f82cb897f800bc532a5ad746d1864521a5eb607dd1f4491a039cd20afc8e27c9049263de72c1fc875b7886f8d465008cf75255700392862751512090
 6167  hub ls -p harbor
 6168  hub configure -s ml1.demo51.superhub.io -f
 6169  source .env
 6170  export AWS_PROFILE=demo05
 6171  source .env
 6172  kubectl get services -n kubecost
 6173  hub configure -s ml1.demo51.superhub.io -f
 6174  source .env
 6175  kubectl get services -n kubecost
 6176  hub login -u demo05@superhub.io
 6177  UB_TOKEN=188af9e4fd02c107c293bfbd4ac6b21d19b8fb0890f182364f8dbdefba6783d4b012581705e06836f82cb897f800bc532a5ad746d1864521a5eb607dd1f4491a039cd20afc8e27c9049263de72c1fc875b7886f8d465008cf75255700392862751512090
 6178  hub login -u demo05@superhub.io
 6179  export HUB_API=https://api.agilestacks.io
 6180  export AWS_PROFILE=demo05
 6181  export HUB_TOKEN=d41d92abaab29f2dd667d2749808fbc288212a079ab23a93e4aba94ba318b15c8d6503e80db9d83a3ca57aba3ef8ea59b83ec39cf755b70743de90c5c94c45cfee68ed0d8e0fd505a36dad2065b37ff88bb50180357ed7cb6cf7d5c949f18c70d7c4bbc4
 6182  hub ls -p harbor
 6183  hub configure -s ml1.demo51.superhub.io -f
 6184  source .env
 6185  kubectl get services -n kubecost
 6186  kubectl port-forward --namespace kubecost deployment/demo-05-kube-cost-demo-05-kubecost-2048-cost-analyzer 9090
 6187  ls
 6188  ls -lrt
 6189  clear
 6190  hub ls -p harbor
 6191  git clone https://69674a0c1945f4c61790a47065994cec8f7f1835ed9e96567e5de0a372190802ceb038209c78ed6ac10d7057fe46253961878a6b69d6db13818fc1ea9f7c4f5d66dfa8c8@git.agilestacks.io/repo/demo05/python-stack-2069
 6192  ls -lrt
 6193  clear
 6194  hub ls -p harbor
 6195  git clone https://69674a0c1945f4c61790a47065994cec8f7f1835ed9e96567e5de0a372190802ceb038209c78ed6ac10d7057fe46253961878a6b69d6db13818fc1ea9f7c4f5d66dfa8c8@git.agilestacks.io/repo/demo05/python-stack-2069
 6196  rm -rf python-stack-2069
 6197  git clone https://69674a0c1945f4c61790a47065994cec8f7f1835ed9e96567e5de0a372190802ceb038209c78ed6ac10d7057fe46253961878a6b69d6db13818fc1ea9f7c4f5d66dfa8c8@git.agilestacks.io/repo/demo05/python-stack-2069
 6198  ls -lrt
 6199  rm -rf python-stack-2069
 6200  clear
 6201  hub ls -p harbor
 6202  git clone https://69674a0c1945f4c61790a47065994cec8f7f1835ed9e96567e5de0a372190802ceb038209c78ed6ac10d7057fe46253961878a6b69d6db13818fc1ea9f7c4f5d66dfa8c8@git.agilestacks.io/repo/demo05/python-stack-2069
 6203  ls -lrt
 6204  cd python-stack-2069
 6205  ls -lrt
 6206  pwd
 6207  cd ..
 6208  rm -rf python-stack-2069
 6209  clear
 6210  hub ls -p harbor
 6211  git clone https://69674a0c1945f4c61790a47065994cec8f7f1835ed9e96567e5de0a372190802ceb038209c78ed6ac10d7057fe46253961878a6b69d6db13818fc1ea9f7c4f5d66dfa8c8@git.agilestacks.io/repo/demo05/python-stack-2069
 6212  ls -lrt
 6213  cd python-stack-2069
 6214  ls -lrt
 6215  clear
 6216  ls -lrt
 6217  hub ls -p harbor
 6218  hub configure -s stack1.demo51.superhub.io -f
 6219  source .env
 6220  kubectl get nodes
 6221  mkdir .hub/env/configure
 6222  hub configure -s stack1.demo51.superhub.io -f
 6223  source .env
 6224  kubectl get nodes
 6225  hub extensions update
 6226  hub ls -p harbor
 6227  hub configure -s stack1.demo51.superhub.io -f
 6228  rmdir .hub
 6229  rmdir -r .hub
 6230  rm -rf .hub
 6231  hub configure -s stack1.demo51.superhub.io -f
 6232  source .env
 6233  kubectl get nodes
 6234  cat .hub/env/kubeconfig.stack1.demo51.superhub.io.yaml
 6235  hub configure -s stack1.demo51.superhub.io -f
 6236  hub extensions update
 6237  hub configure -s stack1.demo51.superhub.io -f
 6238  export KUBECONFIG=.hub/env/kubeconfig.stack1.demo51.superhub.io.yaml
 6239  kubectl get nodes
 6240  clear
 6241  hub ls -p harbor
 6242  cd ..
 6243  rm -rf python-stack-2069
 6244  clear
 6245  hub ls -p harbor
 6246  git clone https://69674a0c1945f4c61790a47065994cec8f7f1835ed9e96567e5de0a372190802ceb038209c78ed6ac10d7057fe46253961878a6b69d6db13818fc1ea9f7c4f5d66dfa8c8@git.agilestacks.io/repo/demo05/python-stack-2069
 6247  cd python-stack-2069
 6248  ls -lrt
 6249  kubectl get nodes
 6250  export KUBECONFIG=.hub/env/kubeconfig.stack1.demo51.superhub.io.yaml
 6251  kubectl get nodes
 6252  rm -rf python-stack-2069
 6253  clear
 6254  hub ls -p harbor
 6255  git clone https://69674a0c1945f4c61790a47065994cec8f7f1835ed9e96567e5de0a372190802ceb038209c78ed6ac10d7057fe46253961878a6b69d6db13818fc1ea9f7c4f5d66dfa8c8@git.agilestacks.io/repo/demo05/python-stack-2069
 6256  cd python-stack-2069
 6257  ls -lrt
 6258  ls -lrt components
 6259  ls -lrt components/harbor
 6260  cd ..
 6261  rm -rf python-stack-2069
 6262  clear
 6263  hub ls -p harbor
 6264  git clone https://69674a0c1945f4c61790a47065994cec8f7f1835ed9e96567e5de0a372190802ceb038209c78ed6ac10d7057fe46253961878a6b69d6db13818fc1ea9f7c4f5d66dfa8c8@git.agilestacks.io/repo/demo05/python-stack-2069
 6265  cd python-stack-2069
 6266  ls -lrt
 6267  ls -rt components
 6268  ping 40.142.34.21
 6269  pwd
 6270  cd ..
 6271  ls -lrt
 6272  rm -rf python-stack-2069
 6273  pwd
 6274  cd ~/dev/agilestacks-components/sweeper
 6275  export AWS_PROFILE=spec
 6276  aws s3 ls
 6277  ./main.py sweep --account 435841353077
 6278  pwd
 6279  ls
 6280  ./main.py sweep --account 435841353077
 6281  aws s3 ls
 6282  ls -lrt
 6283  vi hist_stage1.txt
 6284  make activate
 6285  pwd
 6286  ls
 6287  make activate
 6288  pwd
 6289  ls
 6290  ./main.py sweep --account 435841353077
 6291  make ACCOUNT=435841353077
 6292  make info
 6293  make activate
 6294  make
 6295  ./main.py sweep --account 435841353077
 6296  python3 --version
 6297  pyenv shell 3.6.4
 6298  ./main.py sweep --account 435841353077
 6299  pip install -r requirements.txt
 6300  aws --version
 6301  brew upgrade awscli
 6302  aws --version
 6303  ./main.py sweep --account 435841353077
 6304  pip3 install ssl
 6305  cat requirements.txt
 6306  pip3 install --ignore-installed boto3
 6307  vi hist_stage1.txt
 6308  vi .envrc
 6309  vi ~/.envrc
 6310  direnv allow
 6311  export AWS_PROFILE=spec
 6312  aws s3 ls
 6313  ./main.py sweep --account 435841353077
 6314  pyenv shell 3.6.4
 6315  ./main.py sweep --account 435841353077
 6316  vi main.py
 6317  pip --version
 6318  python --version
 6319  pip install -r requirements.txt
 6320  pip install --upgrade pip --trusted-host pypi.org --trusted-host files.pythonhosted.org
 6321  brew upgrade openssl
 6322  pip install --upgrade pip --trusted-host pypi.org --trusted-host files.pythonhosted.org
 6323  ./main.py sweep --account 435841353077
 6324  python -m pip install â€“upgrade pip
 6325  pip install ssl
 6326  pwd
 6327  ls
 6328  which pip
 6329  pip --version
 6330  echo $$VIRTUAL_ENV
 6331  echo $VIRTUAL_ENV
 6332  ls
 6333  pwd
 6334  pip --version
 6335  brew install openssl
 6336  brew reinstall openssl@1.1
 6337  ./main.py sweep --account 435841353077
 6338  aws s3 ls
 6339  export AWS_PROFILE=demo05
 6340  openssl
 6341  openssl s_client -connect pypi.python.org:443
 6342  vi main.py
 6343  ./main.py sweep --account 435841353077 --trusted-host=pypi.python.org
 6344  python -m pip install â€“upgrade pip --trusted-host=pypi.python.org
 6345  python -m pip install -upgrade pip --trusted-host=pypi.python.org
 6346  python -m pip install --upgrade pip --trusted-host=pypi.python.org
 6347  hub extensions update
 6348  hub login -u demo05@superhub.io
 6349  export HUB_TOKEN=a8b7c1eb47cccdda2da2728aa0caf4730411fa3c264eac409d450a9f8f7f784834c89ea39d3dfa34cad4cf3268aa3f87e7a85573de7fde73954916e9766e01d8b419bc00da21dab3ef1ff1fc8127e96883bf41319ef0cdaf390158843df6f6c2b0b74c4b
 6350  hub ls -p harbor
 6351  hub api cloudaccount get
 6352  hub api environment create TEST03 demo51.superhub.io
 6353  hub api cluster import eks eks05-demo51-superhub-io -e TEST03 --kube-dashboard -w
 6354  hub api cluster import --help
 6355  hub api cluster import eks eks05-demo51-superhub-io -e TEST03 --kube-dashboard -w
 6356  hub api cluster import eks eks05-demo51-superhub-io -environment TEST03 --kube-dashboard -w
 6357  hub api cluster import eks eks05.demo51.superhub.io -e TEST03 --kube-dashboard -w
 6358  hub api cluster import eks eks05 -e TEST03 --kube-dashboard -w
 6359  hub api cluster import eks eks05 -e TEST03 --kube-dashboard --region us-east-1 -w
 6360  curl -O https://controlplane.agilestacks.io/dist/hub-cli/hub.darwin_amd64
 6361  mv hub.darwin_amd64 hub
 6362  chmod +x hub
 6363  sudo mv hub /usr/local/bin
 6364  hub api cluster import eks eks05 -e TEST03 --kube-dashboard --region us-east-1 -w
 6365  hub api cluster import eks eks05-demo51-superhub-io -e TEST03 --kube-dashboard -w
 6366  hub api instance get eks05-demo51-superhub-io
 6367  hub api instance get eks05-demo51-superhub-io.demo51.superhub.io
 6368  hub api template get
 6369  cd /Users/igor/demo/flask/stack-apps/apps/python-flask
 6370  export AWS_PROFILE=demo05
 6371  aws configure get aws_secret_access_key 
 6372  cd "afp://Base Station TC._afpovertcp._tcp.local/Photos2012/AirPort Time Capsule Archive (2)/Shared/Project/ADM/amt_core_custom/AMT_CORE_CUSTOM/content_xsl/workproduct_helper.xsl/Users/igor/demo/flask/stack-apps/apps"
 6373  cd ~/dev/agilestacks-components/sweeper
 6374  export AWS_PROFILE=spec
 6375  ./main.py sweep --account 435841353077 --trusted-host=pypi.python.org
 6376  ./main.py sweep --account 435841353077
 6377  cd ~/dev/components/kubecost
 6378  ls
 6379  ls -lrt
 6380  pwd
 6381  cd ~/dev/devops-platform-eks-template
 6382  export AWS_PROFILE=demo05
 6383  pwd
 6384  aws s3 ls
 6385  ls -lrt
 6386  hub ls
 6387  hub version
 6388  curl -O https://controlplane.agilestacks.io/dist/hub-cli/hub.darwin_amd64
 6389  mv hub.darwin_amd64 hub
 6390  chmod +x hub\nsudo mv hub /usr/local/bin
 6391  hub version
 6392  hub extensions install
 6393  hub extensions update
 6394  curl -O https://raw.githubusercontent.com/agilestacks/toolbox/master/toolbox-run
 6395  chmod +x toolbox-run
 6396  ./toolbox-run
 6397  brew tap weaveworks/tap
 6398  brew install weaveworks/tap/eksctl
 6399  eksctl create cluster -f eks.cluster.yaml
 6400  vi eks.cluster.yaml
 6401  eksctl create cluster -f eks.cluster.yaml
 6402  kubectl get nodes
 6403  cat ~/.kube/config
 6404  hub toolbox
 6405  kubectl get nodes
 6406  hub toolbox
 6407  eksctl delete cluster -f eks.cluster.yaml
 6408  hub ls
 6409  kubectl get nodes
 6410  eksctl 
 6411  eksctl delete cluster -f eks.cluster.yaml
 6412  hub ls
 6413  hub configure -p marvelous-sofee-788.devops.delivery -d
 6414  hub ls
 6415  pwd
 6416  ls -lrt
 6417  export AWS_PROFILE=demo05
 6418  aws eks ls
 6419  aws eks list-clusters
 6420  hub login -u demo05@superhub.io
 6421  export HUB_API=https://api.agilestacks.io
 6422  export HUB_TOKEN=2f5a54428e45faa0d5f5ea22ceddae939dc9eb21903631805c45bfad1ae4736150e78221a81355bb0a70eda4846aba797eb3678475d39104856060a5e5fe6d499a68acb56fba561cc24b226278b1dce92ae6583590b6d0de853e6857b6789fdb665cbbe2
 6423  aws eks list-clusters
 6424  hub ls 
 6425  hub ls -p harbor
 6426  hub ls 
 6427  hub ls -p harbor
 6428  hub configure -s dev@rad.demo51.superhub.io
 6429  hub configure -s dev@rad.demo51.superhub.io -f
 6430  hub configure -s rad.demo51.superhub.io -f
 6431  hub
 6432  hub configure -s rad.demo51.superhub.io -f -v
 6433  ls -lrt .hub
 6434  rm -rf .hub
 6435  hub login -u demo05@superhub.io
 6436  export HUB_TOKEN=a5f2c73e47f9808ae8c58dcd7cae8f593060c147a59dc9816ccbb136931037d0a146ca342aa8484b9bb26bd35d09545017236a52ddfa784334c58bfa6002e6b4ac1048a5c74f3bf636af452dbe6448601939e5b5aa70efecb8a5ff1c76bd5827e827b891
 6437  hub ls -p harbor
 6438  hub configure -s rad.demo51.superhub.io -f -v
 6439  source .env
 6440  kubectl get nodes
 6441  export KUBECONFIG=.hub/env/kubeconfig.rad.demo51.superhub.io.yaml
 6442  kubectl get nodes
 6443  kubectl cluster-info
 6444  make -C ".hub" clean generate
 6445  ls
 6446  ls -lrt .hub
 6447  make -C ".hub" clean generate
 6448  make -C ".hub" generate
 6449  make
 6450  make -C ".hub"
 6451  cd src
 6452  ls
 6453  make -C ".hub" clean generate
 6454  cd ..
 6455  code -n .
 6456  make -C ".hub" clean generate
 6457  ls
 6458  make
 6459  ls
 6460  pwd
 6461  git status -v
 6462  hub configure -s rad.demo51.superhub.io -f -v
 6463  git status -v
 6464  git checkout .hub/Makefile
 6465  git status -v
 6466  make -C ".hub" clean generate
 6467  hub extensions update
 6468  make -C ".hub" clean generate
 6469  git status -v
 6470  git checkout .hub
 6471  git status -v
 6472  hub ls -p harbor
 6473  ls -lrt .hub
 6474  hub configure -s rad.demo51.superhub.io -f -v
 6475  ps
 6476  cd /Users/igor/demo/flask/stack-apps/apps/python-flask
 6477  export AWS_PROFILE=demo05
 6478  hub login -u demo05@superhub.io
 6479  export HUB_TOKEN=62234177ccde1d1551ef226c215882e832982cc93e1479778fb7d139ec0707849d86cbd11bbfc56eadf7e77252d732547efd5dc88d693457cd6849287ce0da4723622eeafc90d6a86a40494be404c6c02f466a30ff2c91d34f241ac4577ff316bc73ed3a
 6480  hub configure -s rad.demo51.superhub.io -f -v
 6481  DOCKER_PASS=`hub show -q '.parameters.component.docker.auth.basic.password' | hub ext show-secret`
 6482  echo $DOCKER_PASS
 6483  hub show -q '.parameters.component.docker.auth.basic.password'
 6484  hub ls -p harbor
 6485  hub configure -s rad.demo51.superhub.io -f -v
 6486  ps
 6487  hub -s rad.demo51.superhub.io show -q '.parameters.component.docker.auth.basic.password'
 6488  hub -s rad.demo51.superhub.io show
 6489  hub ls -p harbor
 6490  hub -s dev@rad.demo51.superhub.io show
 6491  hub -s dev@rad.demo51.superhub.io show -q '.parameters.component.docker.auth.basic.password'
 6492  DOCKER_PASS=`hub -s dev@rad.demo51.superhub.io show -q '.parameters.component.docker.auth.basic.password' | hub ext show-secret`
 6493  echo $DOCKER_PASS
 6494  hub -s dev@rad.demo51.superhub.io show -q '.parameters.component.docker.auth.basic.password
 6495  hub -s dev@rad.demo51.superhub.io show -q '.parameters.component.docker.auth.basic.password'
 6496  DOCKER_PASS=`hub -s dev@rad.demo51.superhub.io show -q '.parameters.component.docker.auth.basic.password' | hub -s dev@rad.demo51.superhub.io ext show-secret`
 6497  echo $DOCKER_PASS
 6498  hub extensions update
 6499  DOCKER_PASS=`hub -s dev@rad.demo51.superhub.io show -q '.parameters.component.docker.auth.basic.password' | hub ext show-secret`
 6500  echo $DOCKER_PASS
 6501  hub ext show-secret
 6502  hub ext show-secret <"b84dba27-a204-46a4-a2fa-86287522c88b"
 6503  DOCKER_PASS=`hub -s dev@rad.demo51.superhub.io show -q '.parameters.component.docker.auth.basic.password' | hub ext show-secret`
 6504  echo $DOCKER_PASS
 6505  cat .env
 6506  pwd
 6507  hub show -s dev@rad.demo51.superhub.io
 6508  hub show -q '.parameters.component.docker.auth.host' -s dev@rad.demo51.superhub.io
 6509  hub configure -f -s dev@rad.demo51.superhub.io
 6510  ps
 6511  top
 6512  ps
 6513  source .env
 6514  kubectl cluster-info
 6515  make -C ".hub" clean generate
 6516  code -n .
 6517  kubectl get pods --namespace=harbor
 6518  docker login "${HUB_DOCKER_HOST}" -u "${HUB_DOCKER_USER}" -p "${HUB_DOCKER_PASS}"
 6519  echo docker login "${HUB_DOCKER_HOST}" -u "${HUB_DOCKER_USER}" -p "${HUB_DOCKER_PASS}"
 6520  kubectl get pods --namespace=harbor
 6521  hub ls -p harbor
 6522  hub configure -f -s dev2@rad.demo51.superhub.io
 6523  ps
 6524  watch -n 1 ps auxw
 6525  ps
 6526  source .env
 6527  make -C ".hub" clean generate
 6528  code -n .
 6529  hub configure -f -s dev2@rad.demo51.superhub.io
 6530  ps
 6531  hub ls -p harbor
 6532  kubectl get pods --namespace=harbor
 6533  pwd
 6534  make -C ".hub" clean generate
 6535  code -n .
 6536  hub ls -p harbor
 6537  hub configure -f -s dev4@rad.demo51.superhub.io
 6538  source .env
 6539  kubectl get pods --namespace=harbor
 6540  make -C ".hub" clean generate
 6541  code -n .
 6542  hub ls
 6543  hub toolbox
 6544  ls
 6545  pwd
 6546  export AWS_PROFILE=demo05
 6547  hub toolbox
 6548  ls ~/.kube/config
 6549  cat ~/.kube/config
 6550  cat ~/.kube/kubectx
 6551  hub ls -p harbor
 6552  hub configure -f -s dev4@rad.demo51.superhub.io
 6553  source .env
 6554  code -n .
 6555  aws eks list-clusters
 6556  hub ls -p harbor
 6557  direnv
 6558  vi ~/.zshenv
 6559  aws eks list-clusters
 6560  export AWS_PROFILE=demo05
 6561  aws eks list-clusters
 6562  hub ls -p harbor
 6563  hub login -u demo05@superhub.io
 6564  export HUB_TOKEN=1fdd136d5e3e4d992dc2e9fcabfad0b50f31ee9c41b9fd3ab433c5c330184cd2effe0e4ae31a768dab8a541a420d8976843a2a5a1f967c16a98c678bac3673e9f7d5a0261f0e0bd040baa2aad44f05f20e5a6cb3e6dd91ac897011820790c64205fe994c
 6565  hub ls -p harbor
 6566  hub configure -f -v -s dev5@rad.demo51.superhub.io
 6567  source .env
 6568  kubectl get pods --namespace=harbor
 6569  make -C ".hub" clean generate
 6570  code -n .
 6571  hub ls -p harbor
 6572  hub configure -f -s test1.demo51.superhub.io
 6573  source .env
 6574  kubectl get pods --namespace=harbor
 6575  make -C ".hub" clean generate
 6576  code -n .
 6577  hub ls -p harbor
 6578  hub configure -f -s dev5@rad.demo51.superhub.io
 6579  source .env
 6580  kubectl get pods --namespace=harbor
 6581  make -C ".hub" clean generate
 6582  code -n .
 6583  hub ls -p harbor
 6584  source .env
 6585  kubectl get pods --namespace=harbor
 6586  git status -v
 6587  ls -lrt
 6588  make -C ".hub" clean generate
 6589  code -n .
 6590  curl v2d.wttr.in/Riga
 6591  curl v2d.wttr.in/SanDiego
 6592  curl v2d.wttr.in/Carlsbad
 6593  curl v2d.wttr.in/Riga
 6594  curl v2d.wttr.in/Carlsbad
 6595  kubectl get deployments -l k8s-app=kube-dns -n kube-system
 6596  eksctl
 6597  cd ~/dev/community
 6598  git pull origin master
 6599  git status
 6600  git checkout -b slack-branch
 6601  git push origin slack-branch
 6602  ls -lrt
 6603  ls -alrt
 6604  cd .git
 6605  ls
 6606  ls -alrt
 6607  vi config
 6608  cd ..
 6609  git push origin slack-branch
 6610  git status
 6611  git status -v
 6612  pwd
 6613  cd ~/dev/community
 6614  ls -lrt
 6615  git status
 6616  git remote add upstream https://github.com/kubeflow/community.git
 6617  git remote -v
 6618  git fetch upstream
 6619  git branch -va
 6620  git checkout master
 6621  git merge upstream/master
 6622  git checkout master
 6623  git branch slack
 6624  git checkout slack
 6625  git fetch upstream
 6626  git checkout master
 6627  git merge upstream/master
 6628  git checkout slack
 6629  git rebase slack
 6630  git status
 6631  git remote -v
 6632  git fetch upstream
 6633  git branch -va
 6634  git rebase master
 6635  git checkout 
 6636  git rebase -i master
 6637  git rebase origin/master
 6638  git rebase -i HEAD~7
 6639  git reset --soft HEAD~7 &&\ngit commit
 6640  git rebase -i HEAD~7
 6641  git push -f origin master
 6642  git status
 6643  pwd
 6644  cd ~/dev/devops-platform-eks-template
 6645  ls -lrt
 6646  export AWS_PROFILE=poc01
 6647  aws s3 ls
 6648  aws eks list-clusters
 6649  aws s3 ls
 6650  history >dev_hist.txt
 6651  vi dev_hist.txt
 6652  eksctl
 6653  eksctl get
 6654  eksctl get cluster
 6655  aws eks list-clusters
 6656  aws s3 ls
 6657  eksctl get cluster
 6658  eksctl
 6659  eksctl get cluster --all-regions
 6660  export AWS_REGION="eu-west-1"
 6661  eksctl get cluster
 6662  eksctl utils write-kubeconfig --name=mameshini-3 --kubeconfig=./kf --set-kubeconfig-context=true
 6663  export KUBECONFIG=./kf
 6664  kubctl get namespaces
 6665  kubectl get namespaces
 6666  kubectl get ns --show-labels
 6667  kubectl get nodes
 6668  cat ./kf
 6669  ls -lrt
 6670  cat ./kf
 6671  aws eks list-clusters --region=eu-west-1
 6672  cat ./kf
 6673  eksctl utils write-kubeconfig --name=mameshini-3 --kubeconfig=./kf --set-kubeconfig-context=true
 6674  pwd
 6675  eksctl utils write-kubeconfig --name=mameshini-3 --kubeconfig=/Users/igor/dev/devops-platform-eks-template/kf --set-kubeconfig-context=true
 6676  export KUBECONFIG=/Users/igor/dev/devops-platform-eks-template/kf
 6677  kubectl get nodes
 6678  kubectl cluster-info
 6679  kubectl cluster-info dump
 6680  cat ./kf
 6681  aws s3 ls
 6682  aws-iam-authenticator token -i cluster-name
 6683  kubectl cluster-info
 6684  kubectl cluster-info dump
 6685  eksctl utils write-kubeconfig --name=mameshini-3 --kubeconfig=/Users/igor/dev/devops-platform-eks-template/kf --set-kubeconfig-context=true
 6686  export KUBECONFIG=/Users/igor/dev/devops-platform-eks-template/kf
 6687  kubectl cluster-info
 6688  eksctl get nodes
 6689  kubectl get nodes
 6690  kubectl get namespaces
 6691  cd /Users/igor/demo/flask/stack-apps/apps/python-flask
 6692  export AWS_PROFILE=sol01
 6693  hub login -u sol01@agilestacks.io
 6694  export HUB_TOKEN=9564caf83ec2d684eac5bfd9bd62f144768e8b9c685ab50386bf43f79f8705358894321ab8a2f32d60bc91b4a0b4b7d37b456dba2068d72f687348b842028a32251226652cf11146d5c2b49e6731b1e6a7a3f2dd5f4e55aee78e43a395474c46db8cc11f
 6695  hub ls -p harbor
 6696  hub configure -s ds2@blue.hpelab.superhub.io -f
 6697  source .env
 6698  kubectl cluster-info dump
 6699  pwd
 6700  cd /Users/igor/demo/
 6701  mkdir kf
 6702  cd /Users/igor/demo/kf
 6703  code -n .
 6704  git config --list
 6705  brew update && brew install golang
 6706  brew upgrade go
 6707  pwd
 6708  git clone https://github.com/mameshini/git-sandbox.git
 6709  ls -lrt
 6710  cd git-sandbox
 6711  code -n .
 6712  git status
 6713  git push
 6714  git push -f origin master
 6715  git config --list
 6716  pwd
 6717  cd ..
 6718  pwd
 6719  cd /Users/igor/dev/git-sandbox
 6720  code -n .
 6721  pwd
 6722  code -n .
 6723  ls
 6724  history
 6725  cd ~/dev/devops-platform-eks-template
 6726  export AWS_PROFILE=poc01
 6727  aws s3 ls
 6728  aws eks list-clusters --region=eu-west-1
 6729  kubectl cluster-info
 6730  eksctl utils write-kubeconfig --name=mameshini-3 --kubeconfig=/Users/igor/dev/devops-platform-eks-template/kf --set-kubeconfig-context=true
 6731  history >dev_hist.txt
 6732  ls -lrt
 6733  vi eks.cluster.yaml
 6734  eksctl delete cluster -f eks.cluster.yaml
 6735  aws eks list-clusters --region=eu-west-1
 6736  python --version
 6737  export GOPATH=$HOME/go
 6738  go
 6739  code -n .
 6740  pwd
 6741  cd ..
 6742  cd /Users/igor/dev
 6743  mkdir kf
 6744  cd kf
 6745  ls
 6746  curl -sL https://ibm.biz/idt-installer | bash
 6747  ibmcloud ks cluster config --cluster ikskubeflow23
 6748  ibmcloud login -a cloud.ibm.com -r us-south -g default\n
 6749  ibmcloud ks cluster config --cluster ikskubeflow23
 6750  ibmcloud ks cluste ls
 6751  ibmcloud ks cluster ls
 6752  ibmcloud login -a cloud.ibm.com -r us-south -g default\n
 6753  ibmcloud ks cluster ls
 6754  ibmcloud ks cluster config --cluster ikskubeflow23
 6755  kubectl get nodes
 6756  helm repo add iks-charts https://icr.io/helm/iks-charts
 6757  helm repo update
 6758  helm install 1.6.0 iks-charts/ibmcloud-block-storage-plugin -n kube-system
 6759  kubectl get all --all-namespaces | grep tiller
 6760  helm init
 6761  helm init -c --debug
 6762  kubectl get all --all-namespaces | grep tiller
 6763  helm install 1.6.0 iks-charts/ibmcloud-block-storage-plugin -n kube-system
 6764  helm --version
 6765  helmversion
 6766  helm
 6767  helm version
 6768  brew upgrade helm
 6769  helm version
 6770  helm init -c --debug
 6771  history
 6772  helm repo add iks-charts https://icr.io/helm/iks-charts
 6773  helm install 1.6.0 iks-charts/ibmcloud-block-storage-plugin -n kube-system
 6774  kubectl get pods -n kube-system | grep ibmcloud-block-storage
 6775  kubectl patch storageclass ibmc-block-gold -p '{"metadata": {"annotations":{"storageclass.kubernetes.io/is-default-class":"true"}}}'\nkubectl patch storageclass ibmc-file-bronze -p '{"metadata": {"annotations":{"storageclass.kubernetes.io/is-default-class":"false"}}}'
 6776  wget https://github.com/IBM/KubeflowDojo/raw/master/Binaries/kfctl_v1.1-rc.0-13-ga5b668b_$\(uname | tr '[:upper:]' '[:lower:]').tar.gz\ntar zxvf kfctl_v1.1-rc.0-13-ga5b668b_$(uname | tr '[:upper:]' '[:lower:]').tar.gz\nchmod +x kfctl\nmv kfctl /usr/local/bin
 6777  wget https://github.com/IBM/KubeflowDojo/raw/master/Binaries/kfctl_v1.1-rc.0-13-ga5b668b_$\(uname | tr '[:upper:]' '[:lower:]').tar.gz
 6778  wget https://github.com/IBM/KubeflowDojo/raw/master/Binaries/kfctl_v1.1-rc.0-13-ga5b668b_$\(uname | tr '[:upper:]' '[:lower:]').tar.gz\n
 6779  wget https://github.com/IBM/KubeflowDojo/raw/master/Binaries/kfctl_v1.1-rc.0-13-ga5b668b_$(uname | tr '[:upper:]' '[:lower:]').tar.gz\n
 6780  wget https://github.com/IBM/KubeflowDojo/raw/master/Binaries/kfctl_v1.1-rc.0-13-ga5b668b_$\(uname | tr '[:upper:]' '[:lower:]').tar.gz
 6781  wget https://github.com/IBM/KubeflowDojo/raw/master/Binaries/kfctl_v1.1-rc.0-13-ga5b668b_$(uname | tr '[:upper:]' '[:lower:]').tar.gz
 6782  brew switch openssl 1.0.2s
 6783  wget https://github.com/IBM/KubeflowDojo/raw/master/Binaries/kfctl_v1.1-rc.0-13-ga5b668b_$(uname | tr '[:upper:]' '[:lower:]').tar.gz
 6784  ls -al /usr/local/Cellar/openssl
 6785  ls -al /usr/local/Cellar/openssl@1.1
 6786  brew switch openssl 1.0.2q
 6787  brew uninstall openssl
 6788  brew uninstall --ignore-dependencies openssl
 6789  brew install https://github.com/tebelorg/Tump/releases/download/v1.0.0/openssl.rb
 6790  wget https://github.com/IBM/KubeflowDojo/raw/master/Binaries/kfctl_v1.1-rc.0-13-ga5b668b_$(uname | tr '[:upper:]' '[:lower:]').tar.gz
 6791  tar zxvf kfctl_v1.1-rc.0-13-ga5b668b_$(uname | tr '[:upper:]' '[:lower:]').tar.gz
 6792  chmod +x kfctl
 6793  mv kfctl /usr/local/bin
 6794  ls -lrt
 6795  rm *gaz
 6796  rm *gz
 6797  cd $HOME
 6798  mkdir kfdef
 6799  cd kfdef
 6800  kfctl apply -V -f https://raw.githubusercontent.com/IBM/KubeflowDojo/master/manifests/kfctl_ibm_tekton.yaml
 6801  kubectl get ns
 6802  env
 6803  kubectl get pods -n istio-system
 6804  kubectl get pods -n kubeflow
 6805  kubectl get node -o wide|grep Ready|
 6806  kubectl get node -o wide|grep Ready
 6807  export CLUSTER_IP=$(kubectl get node -o wide|grep Ready|awk '{print $7; exit}')
 6808  echo $CLUSTER_IP
 6809  kubectl get node -o wide|grep Ready
 6810  kubectl get pods -n kubeflow
 6811  kubectl port-forward --namespace istio-system $(kubectl get pod --namespace istio-system --selector="app=istio-ingressgateway" --output jsonpath='{.items[0].metadata.name}') 8080:80&
 6812  brew install kustomize
 6813  kubectl get namespaces
 6814  kubectl get pods -n kubeflow
 6815  aws eks list-clusters --region=eu-west-1
 6816  brew upgrade awscli
 6817  aws eks list-clusters --region=eu-west-1
 6818  ls -lrt
 6819  kubectl get pods -n kubeflow
 6820  pwd
 6821  ls
 6822  kubectl get pods -n kubeflow
 6823  pwd
 6824  ls -lrt
 6825  ls ~/.kube/config
 6826  cat ~/.kube/kubectx
 6827  cat ~/.kube/config
 6828  echo $KUBECONFIG
 6829  ls -lrt
 6830  ls -al
 6831  cat kfctl_ibm_tekton.yaml
 6832  kubectl get pods -n kubeflow
 6833  kubectl cluster-info dump
 6834  history >ibm_hist.txt
 6835  vi ibm_hist.txt
 6836  kubectl config view
 6837  kubectl config get-contexts
 6838  kubectl config use-context ikskubeflow23
 6839  kubectl config use-context ikskubeflow23/bs68m6id0rm4puo6ke20
 6840  kubectl get pods -n kubeflow
 6841  kubectl get services -n kubeflow
 6842  export AWS_PROFILE=demo01
 6843  aws eks list-clusters --region=eu-central-1
 6844  vi ~/.aws/config
 6845  vi ~/.aws/credentials
 6846  export AWS_PROFILE=demo01
 6847  aws eks list-clusters --region=eu-central-1
 6848  aws eks list-clusters --region=eu-west-1
 6849  code -n .
 6850  aws eks list-clusters --region=eu-west-1
 6851  eksctl utils write-kubeconfig --name=anton-38 --kubeconfig=/Users/igor/kfdef/kcfg --set-kubeconfig-context=true
 6852  aws eks list-clusters --region=eu-west-1
 6853  eksctl utils write-kubeconfig --name=anton-38 --kubeconfig=/Users/igor/kfdef/kcfg --set-kubeconfig-context=true --region=eu-west-1
 6854  export KUBECONFIG=/Users/igor/kfdef/kcfg
 6855  kubectl get services -n kubeflow
 6856  kubectl cluster-info dump
 6857  vi ~/.aws/credentials
 6858  export AWS_PROFILE=demo01
 6859  aws eks list-clusters --region=eu-west-1
 6860  eksctl utils write-kubeconfig --name=anton-38 --kubeconfig=/Users/igor/kfdef/kcfg --set-kubeconfig-context=true --region=eu-west-1
 6861  export KUBECONFIG=/Users/igor/kfdef/kcfg
 6862  kubectl get services -n kubeflow
 6863  kubectl get pods -n kubeflow
 6864  kubectl describe pod calculation-pipeline-ftcjn-1660033068
 6865  kubectl describe pod calculation-pipeline-ftcjn-1660033068 -n kubeflow
 6866  kubectl config use-context ikskubeflow23/bs68m6id0rm4puo6ke20
 6867  kubectl config get-contexts
 6868  ibmcloud login -a cloud.ibm.com -r us-south -g default\n
 6869  ibmcloud ks cluster config --cluster ikskubeflow23
 6870  kubectl get nodes
 6871  kubectl get pods -n kubeflow
 6872  kubectl describe pod calculation-pipeline-64542-add-2-fpdjv-pod-pwztn -n kubeflow
 6873  vi ~/.aws/credentials
 6874  vi ~/.aws/config
 6875  kubectl get pods -n kubeflow
 6876  pwd
 6877  kubectl get pods -n kubeflow
 6878  python --version
 6879  kubectl get pods --namespace tekton-pipelines --watch
 6880  brew tap tektoncd/tools
 6881  brew install tektoncd/tools/tektoncd-cli
 6882  kubectl config set-context --current --namespace=tekton-pipelines
 6883  kubectl apply -f https://github.com/tektoncd/dashboard/releases/download/v0.7.1/tekton-dashboard-release.yaml
 6884  kubectl patch svc tekton-dashboard -n tekton-pipelines --type='json' -p '[{"op":"replace","path":"/spec/type","value":"NodePort"}]'
 6885  TKN_UI_PORT=$(kubectl -n tekton-pipelines get service tekton-dashboard -o jsonpath='{.spec.ports[0].nodePort}')
 6886  PUBLIC_IP=$(kubectl get nodes -o jsonpath='{.items[0].status.addresses[?(@.type=="ExternalIP")].address}')
 6887  echo "http://${PUBLIC_IP}:${TKN_UI_PORT}/#/pipelineruns"
 6888  git clone https://github.com/kubeflow/kfp-tekton.git
 6889  cd kfp-tekton
 6890  source .venv/bin/activate
 6891  python3 -m venv .venv
 6892  source .venv/bin/activate
 6893  pip install -e sdk/python
 6894  make test
 6895  pip install -e sdk/python
 6896  brew reinstall python
 6897  pip install -e sdk/python
 6898  python3 -m venv .venv
 6899  python --version
 6900  pip install -e sdk/python
 6901  python3 -m pip install pytz
 6902  python
 6903  brew link openssl --force
 6904  ln -s /usr/local/opt/openssl/lib/libcrypto.1.0.0.dylib /usr/local/lib/
 6905  ln -s /usr/local/opt/openssl/lib/libssl.1.0.0.dylib /usr/local/lib/
 6906  brew install python --with-brewed-openssl
 6907  python3 -m pip install pytz
 6908  python
 6909  brew upgrade
 6910  brew update
 6911  virtualenv --version
 6912  which python
 6913  rm -rf .venv
 6914  which python
 6915  python --version
 6916  python3 -m venv .venv
 6917  python --version
 6918  source .venv/bin/activate
 6919  pip install -e sdk/python
 6920  pip3 install -e sdk/python
 6921  brew reinstall python
 6922  python3
 6923  brew reinstall python
 6924  python3
 6925  brew uninstall python
 6926  brew uninstall python2
 6927  brew uninstall python3
 6928  brew install python
 6929  brew uninstall python
 6930  brew uninstall python@3.8
 6931  brew uninstall --ignore-dependencies python@3.
 6932  brew uninstall --ignore-dependencies python@3.8
 6933  rm -rf $(pyenv root)
 6934  brew uninstall pyenv-virtualenv
 6935  brew uninstall pyenv
 6936  brew install pyenv
 6937  echo 'export PATH="$(pyenv root)/shims:$PATH"' >> ~/.zshrc
 6938  source ~/.zshrc
 6939  cat ~/.zshrc
 6940  echo "$(pyenv root)/shims:$PATH"
 6941  vi ~/.zshrc
 6942  pyenv install --list | grep 3.8
 6943  pyenv install 3.8.3
 6944  pyenv versions
 6945  python --version
 6946  python3 --version
 6947  python3
 6948  pwd
 6949  rm -rf .venv
 6950  python3 -m venv .venv
 6951  python --version
 6952  source .venv/bin/activate
 6953  pip install -e sdk/python
 6954  make test
 6955  dsl-compile-tekton \\n    --py sdk/python/tests/compiler/testdata/parallel_join.py \\n    --output pipeline.yaml
 6956  kubectl apply -f pipeline.yaml -n kubeflow
 6957  tkn pipelinerun logs --last -n kubeflow
 6958  export KUBECONFIG=/Users/igor/kfdef/kcfg
 6959  kubectl get namespaces
 6960  export AWS_PROFILE=demo01
 6961  history
 6962  eksctl utils write-kubeconfig --name=anton-38 --kubeconfig=/Users/igor/kfdef/kcfg --set-kubeconfig-context=true --region=eu-west-1
 6963  export KUBECONFIG=/Users/igor/kfdef/kcfg
 6964  kubectl get namespaces
 6965  kubectl create --namespace=istio-system rolebinding --clusterrole=kubeflow-view --serviceaccount=workspace:default-editor workspace-istio-view
 6966  kubectl get services -n workspace
 6967  kubectl get service mnist-ui -n workspace
 6968  kubectl get pods --output=template \\n     --template="{{with index .items 0}}{{.metadata.name}}{{end}}"
 6969  kubectl get pods --output=template --template="{{with index .items 0}}{{.metadata.name}}{{end}}"
 6970  kubectl get pods -n workspace -o wide | awk {'print $1" " $3 " " $6'} | column -t
 6971  kubectl get services -n workspace
 6972  kubectl get service/mnist-tensorboard |  awk {'print $1" " $2 " " $4 " " $5'} | column -t
 6973  kubectl get virtualservices -o yaml
 6974  kubectl get virtualservices -n workspace -o yaml
 6975  kubectl get pods -n workspace -o wide | awk {'print $1" " $3 " " $6'} | column -t
 6976  kubectl get pods -n workspace -o wide
 6977  kubectl logs sklearn-iris-predictor-default-8w629-deployment-5f44f5ffffphllw -n workspace
 6978  kubectl logs sklearn-iris-predictor-default-8w629-deployment-5f44f5ffffphllw:kfserving-container -n workspace
 6979  kubectl get pods -n workspace -o wide
 6980  kubectl get pods -n kubeflow -o wide
 6981  kubectl get pod | grep sklearn-iris
 6982  kubectl get pod 
 6983  kubectl get pod -n workspace
 6984  kubectl logs sklearn-iris-predictor-default-x2vdr-deployment-8498bf7f5dck5sg -n workspace
 6985  stern -n workspace . --tail 20 --exclude /ping --template '{{ .PodName }} {{ .Message}}'
 6986  kubectl get deplyments -n workspace
 6987  kubectl get deplyment -n workspace
 6988  kubectl get all -n workspace
 6989  kubectl delete deployment.apps/mnist-model deployment.apps/mnist-tensorboard deployment.apps/mnist-ui deployment.apps/sklearn-iris-predictor-default-xzjjc-deployment
 6990  kubectl delete deployment/mnist-model deployment/mnist-tensorboard deployment/mnist-ui deployment/sklearn-iris-predictor-default-xzjjc-deployment
 6991  kubectl get deplyment -n workspace
 6992  kubectl delete deployment.apps/mnist-model deployment.apps/mnist-tensorboard deployment.apps/mnist-ui deployment.apps/sklearn-iris-predictor-default-xzjjc-deployment -n workspace
 6993  kubectl get all -n workspace
 6994  kubectl delete service/sklearn-iris-predictor-default-xzjjc-private service/sklearn-iris-predictor-default-xzjjc service/mnist -n workspace
 6995  stern -n workspace . --tail 20 --exclude /ping --template '{{ .PodName }} {{ .Message}}'
 6996  kubectl get virtualservices -n workspace -o yaml
 6997  kubectl -n istio-system get ingress envoy-ingress
 6998  kubectl get svc ambassador -n kubeflow
 6999  kubectl get namespaces
 7000  kubectl get ingress --all-namespaces
 7001  kubectl -n istio-system get ingress istio-ingress -o jsonpath="{.status.loadBalancer.ingress[0].hostname}"
 7002  kubectl get inferenceservices sklearn-iris -n workspace
 7003  stern -n workspace . --tail 20 --exclude /ping --template '{{ .PodName }} {{ .Message}}'
 7004  kubectl get inferenceservices sklearn-iris -n workspace
 7005  aws eks list-clusters --region=eu-west-1
 7006  kubectl get inferenceservices sklearn-iris -n workspace
 7007  kubectl get gateways --all-namespaces
 7008  kubectl get gateways --all-namespaces -o yaml
 7009  kubectl get gateways --all-namespaces
 7010  pyenv shell 3.8.3
 7011  /Users/igor/.pyenv/versions/3.8.3/bin/python /Users/igor/.vscode/extensions/ms-python.python-2020.6.91350/pythonFiles/pyvsc-run-isolated.py /Users/igor/.vscode/extensions/ms-python.python-2020.6.91350/pythonFiles/shell_exec.py /Users/igor/.pyenv/versions/3.8.3/bin/python /Users/igor/.vscode/extensions/ms-python.python-2020.6.91350/pythonFiles/pyvsc-run-isolated.py pip install -U jupyter /var/folders/z9/8t1kn89969gf40j824x51ky00000gn/T/tmp-846439B6OLskZVDLq.log
 7012  /Users/igor/.pyenv/versions/3.8.3/bin/python /Users/igor/.vscode/extensions/ms-python.python-2020.6.91350/pythonFiles/pyvsc-run-isolated.py /Users/igor/.vscode/extensions/ms-python.python-2020.6.91350/pythonFiles/shell_exec.py /Users/igor/.pyenv/versions/3.8.3/bin/python /Users/igor/.vscode/extensions/ms-python.python-2020.6.91350/pythonFiles/pyvsc-run-isolated.py pip install -U notebook /var/folders/z9/8t1kn89969gf40j824x51ky00000gn/T/tmp-84643aXGTQ4nTnoCV.log
 7013  aws eks list-clusters --region=eu-west-1
 7014  aws eks list-clusters --all-regions
 7015  aws s3 ls
 7016  brew uninstall awscli
 7017  brew install awscli
 7018  aws s3 ls
 7019  aws eks list-clusters --region=eu-west-1
 7020  aws eks list-clusters --all-regions
 7021  eksctl utils write-kubeconfig --name=mameshini-2 --kubeconfig=/Users/igor/kfdef/kcfg --set-kubeconfig-context=true --region=us-east-1
 7022  export KUBECONFIG=/Users/igor/kfdef/kcfg
 7023  kubectl get tfjobs ${CNN_JOB_NAME} --namespace=kubeflow
 7024  kubectl get pods -n workspace -o wide
 7025  ls ~/Downloads/*.ipynb
 7026  cp ~/Downloads/*.ipynb ~/dev/kf
 7027  cp ~/Downloads/kfs-demo-2.ipynb ~/dev/kf
 7028  cp ~/Downloads/lightweight_component.ipynb ~/dev/kf
 7029  stern -n workspace . --tail 20 --exclude /ping --template '{{ .PodName }} {{ .Message}}'
 7030  kubectl get pods -n workspace -o wide
 7031  kubectl get configmap -n workspace
 7032  kubectl get configmap -n workspace -o yaml
 7033  pwd
 7034  kubectl get pods -n workspace -o wide
 7035  kubectl logs kfp-0 -n workspace
 7036  kubectl logs kfp-0 -c kfp -n workspace
 7037  kubectl describe pod kfp-0
 7038  kubectl describe pod kfp-0 -n workspace
 7039  kubectl get pods -n workspace -o wide
 7040  kubectl get nodes
 7041  kubectl get nodes -o yaml
 7042  pwd
 7043  ls
 7044  ls -lrt
 7045  cd ~/dev/kf
 7046  ls -lrt
 7047  pwd
 7048  ls -lrt
 7049  cd ~/dev/agilestacks-components/sweeper
 7050  export AWS_PROFILE=poc01
 7051  aws s3 ls
 7052  ./main.py sweep --account 608332689354
 7053  python --version
 7054  python3 -m venv .venv
 7055  python --version
 7056  ls -lrt
 7057  cat requirements.txt
 7058  rm -rf .venv
 7059  python3 -m venv .venv
 7060  source .venv/bin/activate
 7061  python --version
 7062  pip install -r requirements.txt
 7063  ./main.py sweep --account 608332689354
 7064  cd ~/dev/stack-ml-eks
 7065  python --version
 7066  ls -lrt
 7067  rm -rf .venv
 7068  python3 -m venv .venv
 7069  source .venv/bin/activate
 7070  ls
 7071  aws s3 ls
 7072  history >hist_mleks.txt
 7073  code -n .
 7074  export STACK_NAME=kf1
 7075  pwd
 7076  eksctl create cluster -f etc/eks-cluster.yaml
 7077  ls ~/.ssh
 7078  eksctl create cluster -f etc/eks-cluster.yaml
 7079  ln -s $HOME/dev/components/tiller tiller\nln -s $HOME/dev/components/storage-class storage-class\nln -s $HOME/dev/components/external-dns external-dns\nln -s $HOME/dev/components/cert-manager cert-manager\nln -s $HOME/dev/components/istio istio\nln -s $HOME/dev/components/kubeflow-v1.0 kubeflow-v1.0\nln -s $HOME/dev/components/prometheus-operator prometheus-operator\nln -s $HOME/dev/components/traefik traefik\nln -s $HOME/dev/components/dex dex\nln -s $HOME/dev/components/minio minio\nln -s $HOME/dev/components/traefik2 traefik2\n
 7080  ln -al
 7081  ln -s $HOME/dev/tls-host-controller tls-host-controller
 7082  export AWS_PROFILE=poc01
 7083  aws eks list-clusters --all-regions
 7084  ls -alrt
 7085  hub configure --current-kubecontext
 7086  kubectl get nodes
 7087  curl -O https://controlplane.agilestacks.io/dist/hub-cli/hub.darwin_amd64
 7088  mv hub.darwin_amd64 hub
 7089  chmod +x hub
 7090  sudo mv hub /usr/local/bin
 7091  hub configure --current-kubecontext
 7092  kubectx 
 7093  hub configure --current-kubecontext poc01@kf1.us-east-1.eksctl.io
 7094  hub configure -p poc01@kf1.us-east-1.eksctl.io
 7095  source .env
 7096  cat .env
 7097  hub configure -p poc01@kf1.us-east-1.eksctl.io
 7098  source .env
 7099  hub ext aws status
 7100  hub ext update
 7101  hub ext install
 7102  hub ext aws init
 7103  hub extensions install
 7104  rm -rfv /Users/igor/.hub
 7105  hub extensions install
 7106  hub configure -p poc01@kf1.us-east-1.eksctl.io
 7107  hub configure --current-kubecontext
 7108  hub extensions update
 7109  hub configure -p poc01@kf1.us-east-1.eksctl.io
 7110  hub configure --current-kubecontext
 7111  hub
 7112  hub extensions
 7113  hub ls
 7114  hub ext aws init
 7115  hub ext aws status
 7116  hub ext aws init
 7117  hub configure --current-kubecontext
 7118  hub configure -p poc01@kf1.us-east-1.eksctl.io
 7119  vi /Users/igor/.hub/hub-configure
 7120  ls /Users/igor/.hub/
 7121  ls /Users/igor/.hub/hub-configure-eks
 7122  ls /Users/igor/.hub/hub-configure-api
 7123  ls -lrt /Users/igor/.hub/hub-configure-eks
 7124  /Users/igor/.hub/hub-configure-eks
 7125  hub configure --current-kubecontext
 7126  vi /Users/igor/.hub/hub-configure
 7127  vi ~/.zshrc
 7128  export PATH="/Users/igor/.hub:$PATH"
 7129  hub configure --current-kubecontext
 7130  hub ext aws init
 7131  hub ext aws status
 7132  hub configure --current-kubecontext
 7133  hub ext aws init
 7134  hub ext aws status
 7135  hub configure -p poc01@kf1.us-east-1.eksctl.io
 7136  hub configure --current-kubecontext -f
 7137  hub ext aws init
 7138  hub ext aws status
 7139  hub ext aws init
 7140  hub ext aws status
 7141  hub ext stack deploy
 7142  hub configure --current-kubecontext
 7143  hub ext aws init
 7144  hub configure --current-kubecontext
 7145  kubectx 
 7146  hub configure -p poc01@kf1.us-east-1.eksctl.io -f
 7147  hub configure -f -p poc01@kf1.us-east-1.eksctl.io
 7148  hub configure -pf poc01@kf1.us-east-1.eksctl.io
 7149  hub configure --current-kubecontext -f
 7150  hub ext aws init
 7151  hub configure --current-kubecontext
 7152  aws s3 ls
 7153  aws eks list-clusters
 7154  hub configure --current-kubecontext --force
 7155  ls -lrt
 7156  ls -alrt
 7157  rm -rf .hub
 7158  kubectx 
 7159  ls -lrt
 7160  eksctl utils write-kubeconfig --name=kf1 --kubeconfig=./kf1 --set-kubeconfig-context=true
 7161  kubectx
 7162  kubectx kf1
 7163  export KUBECONFIG=/Users/igor/dev/stack-ml-eks/kf1
 7164  kubectx
 7165  kubectl get nodes
 7166  hub configure --current-kubecontext --force
 7167  hub ext aws init
 7168  vi .env
 7169  source .env
 7170  hub ext aws init
 7171  hub ext stack deploy
 7172  hub configure --current-kubecontext --force -v
 7173  hub configure --current-kubecontext --force --verbose
 7174  hub ext aws init
 7175  hub configure --current-kubecontext --force --verbose
 7176  hub ext aws init
 7177  vi /Users/igor/.hub/hub-configure
 7178  vi /Users/igor/.hub/hub-configure-eks
 7179  ls -lrt
 7180  aws eks list-clusters
 7181  aws eks list-clusters --region=eu-west-1
 7182  aws eks list-clusters --region=eu-central-1
 7183  aws eks list-clusters
 7184  aws eks list-clusters --region=us-east-1
 7185  eksctl utils write-kubeconfig --name=kubeflow-1 --kubeconfig=./kf1 --set-kubeconfig-context=true
 7186  export KUBECONFIG=/Users/igor/dev/stack-ml-eks/kf1
 7187  kubectl get nodes
 7188  kubectl get namespaces
 7189  kubectl get pods -n workspace -o wide
 7190  kubectl logs mnist-train-b184-chief-0
 7191  kubectl logs mnist-train-b184-chief-0 -n workspace
 7192  aws s3 ls
 7193  kubectl get pods -n workspace -o wide
 7194  kubectl logs mnist-train-8cf1-worker-0 -n workspace
 7195  pwd
 7196  ls -lrt
 7197  ls tls-host-controller
 7198  cd ~/dev
 7199  git clone https://github.com/agilestacks/applications.git
 7200  ln -s $HOME/dev/components/s3-flex-pvc s3-flex-pvc
 7201  ln -s $HOME/dev/components/s3-flex-driver s3-flex-driver
 7202  ln -s $HOME/dev/components/kubeflow kubeflow
 7203  ln -s $HOME/dev/components/kubeflow-v1.0 kubeflow
 7204  ls -lrt
 7205  ls -lrt ku*
 7206  unlink kubeflow
 7207  ls -lrt kubeflow*
 7208  ln -s $HOME/dev/components/mysql mysql
 7209  ls -lrt kubeflow*
 7210  ls -lrt
 7211  pwd
 7212  ln -s $HOME/dev/components/mysql mysql
 7213  ls -lrt
 7214  ln -s $HOME/dev/components/mysql mysql
 7215  ls -lrt
 7216  pwd
 7217  ls -lrt
 7218  pwd
 7219  ls -lrt
 7220  unlink tiller
 7221  unlink storage-class
 7222  unlink external-dns
 7223  hub extensions update
 7224  eksctl utils write-kubeconfig --name=kf-1 --kubeconfig=./kf1 --set-kubeconfig-context=true
 7225  aws eks list-clusters
 7226  eksctl utils write-kubeconfig --name=kf1 --kubeconfig=./kf1 --set-kubeconfig-context=true
 7227  export KUBECONFIG=/Users/igor/dev/stack-ml-eks/kf1
 7228  kubectl get nodes
 7229  hub configure --current-kubecontext --force --verbose
 7230  hub ext aws init
 7231  hub ext stack deploy
 7232  pwd
 7233  ls -lrt
 7234  unlink cert-manager
 7235  unlink istio
 7236  unlink kubeflow-v1.0
 7237  unliink prometheus-operator
 7238  unlink traefik
 7239  unlink dex
 7240  unlink minio
 7241  unlink traefik2
 7242  unlink tls-host-controller
 7243  ls -lrt
 7244  unlink prometheus-operator
 7245  unlink mysql
 7246  history | grep "ln -s"
 7247  cd components
 7248  ls
 7249  ln -s $HOME/dev/components/tiller tiller\n
 7250  ln -s $HOME/dev/components/storage-class storage-class
 7251  ln -s $HOME/dev/components/external-dns external-dns
 7252  ln -s $HOME/dev/components/cert-manager cert-manager
 7253  ln -s $HOME/dev/components/istio istio
 7254  ln -s $HOME/dev/components/kubeflow-v1.0 kubeflow-v1.0
 7255  ln -s $HOME/dev/components/prometheus-operator prometheus-operator
 7256  ln -s $HOME/dev/components/traefik traefik
 7257  ln -s $HOME/dev/components/dex dex
 7258  ln -s $HOME/dev/components/minio minio
 7259  ln -s $HOME/dev/components/traefik2 traefik2
 7260  ln -s $HOME/dev/tls-host-controller tls-host-controller
 7261  ln -s $HOME/dev/components/s3-flex-pvc s3-flex-pvc
 7262  ln -s $HOME/dev/components/s3-flex-driver s3-flex-driver
 7263  ls -lrt
 7264  cd ..
 7265  hub ext stack elaborate
 7266  cd components
 7267  ln -s $HOME/dev/tls-host-controller tls-host-controller
 7268  cd ..
 7269  hub ext stack elaborate
 7270  cd components
 7271  ln -s $HOME/dev/components/mysql mysql
 7272  cd ..
 7273  hub ext stack elaborate
 7274  cd components
 7275  ln -s $HOME/dev/components/s3-flex-driver s3-flex-driver
 7276  ln -s $HOME/dev/applications/components/s3fs s3fs
 7277  cd ..
 7278  hub ext stack elaborate
 7279  ls -lrt components/
 7280  cd components
 7281  pwd
 7282  ls-lrt
 7283  ls -lrt
 7284  cd s3fs
 7285  ls
 7286  ls -lrt
 7287  cd ..
 7288  ls -lrt
 7289  ls $HOME/dev/components/s3-flex-pvc
 7290  ls $HOME/dev/appplications/components/s3-flex-pvc
 7291  ls $HOME/dev/applications/components/s3-flex-pvc
 7292  ls /Users/igor/dev/components/s3-flex-pvc
 7293  unlink s3-flex-pvc
 7294  unlink s3-flex-driver
 7295  pwd
 7296  ln -s $HOME/dev/applications/components/s3fs s3fs
 7297  cd ..
 7298  hub ext stack elaborate
 7299  hub ext stack deploy
 7300  helm --version
 7301  helm
 7302  helm -v
 7303  helm version
 7304  hub toolbox
 7305  pwd
 7306  cd /Users/igor/dev/stack-ml-eks
 7307  export AWS_PROFILE=poc01
 7308  cd /Users/igor/dev/stack-ml-eks
 7309  export AWS_PROFILE=poc01
 7310  aws s3 ls
 7311  export KUBECONFIG=/Users/igor/dev/stack-ml-eks/kf1
 7312  kubectl get nodes
 7313  ps
 7314  hub toolbox
 7315  export KUBECONFIG=/Users/igor/dev/stack-ml-eks/kf1
 7316  kubectl get nodes
 7317  hub toolbox
 7318  hub configure --current-kubecontext --force
 7319  hub extensions update
 7320  hub configure --current-kubecontext --force
 7321  pwd
 7322  cd /Users/igor/dev/stack-ml-eks
 7323  pwd
 7324  export AWS_PROFILE=poc01
 7325  export KUBECONFIG=/Users/igor/dev/stack-ml-eks/kf1
 7326  hub configure --current-kubecontext --force --verbose
 7327  aws s3 ls
 7328  export AWS_REGION="us-east-1"
 7329  aws s3 ls
 7330  hub configure --current-kubecontext --force --verbose
 7331  hub ext aws init
 7332  hub toolbox
 7333  cd /Users/igor/dev/stack-ml-eks
 7334  export AWS_REGION="us-east-1"
 7335  export AWS_PROFILE=poc01
 7336  export KUBECONFIG=/Users/igor/dev/stack-ml-eks/kf1
 7337  stern -n kubesystem . --tail 20 --exclude /ping --template '{{ .PodName }} {{ .Message}}'
 7338  stern -n kube-system . --tail 20 --exclude /ping --template '{{ .Message}}' -l 'app.kubernetes.io/name=external-dns'
 7339  nslookup apps.deadpan-falcon-460.devops.delivery
 7340  nslookup app.deadpan-falcon-460.devops.delivery
 7341  stern -n kube-system . --tail 20 --exclude /ping --template '{{ .Message}}' -l 'app.kubernetes.io/name=external-dns'
 7342  nslookup apps.deadpan-falcon-460.devops.delivery
 7343  hub toolbox
 7344  brew uninstall helm
 7345  brew install helm@2
 7346  helm version
 7347  helm2 version
 7348  brew install helm@2
 7349  cd /usr/local/bin
 7350  helm version
 7351  brew reinstall helm@2
 7352  helm version
 7353  helm2 version
 7354  helm3
 7355  brew link helm@2
 7356  brew link helm@2 --force
 7357  helm version
 7358  helm
 7359  cp ~/Downloads/helm3 /usr/local/bin/helm3
 7360  cp ~/Downloads/darwin-amd64/helm3 /usr/local/bin/helm3
 7361  helm3 version
 7362  /usr/local/bin/helm3 ; exit;
 7363  helm3 version
 7364  helm version
 7365  pwd
 7366  cd ~/dev/stack-ml-eks
 7367  export KUBECONFIG=/Users/igor/dev/stack-ml-eks/kf1
 7368  export AWS_PROFILE=poc01
 7369  export AWS_REGION="us-east-1"
 7370  hub ext stack deploy
 7371  hub ext stack deploy -o traefik2
 7372  kubectl get pvc --all-namespaces
 7373  kubectl get pods -n kubeflow -o wide
 7374  hub ext stack deploy -o mysql
 7375  stern -n kubeflow . --tail 20 --exclude /ping --template '{{ .PodName }} {{ .Message}}'
 7376  stern -n workspace . --tail 20 --exclude /ping --template '{{ .PodName }} {{ .Message}}'
 7377  kubectl get pods -n kubeflow -o wide
 7378  kubectl describe pod buckets-5b6bc9f7-bsk7c -n kubeflow
 7379  kubectl get pvc --all-namespaces
 7380  kubectl get pv --all-namespaces
 7381  hub ext stack undeploy -c minio
 7382  hub ext stack deploy -o minio
 7383  stern -n kubeflow . --tail 20 --exclude /ping --template '{{ .PodName }} {{ .Message}}'
 7384  kubectl get namespaces
 7385  stern -n kubeflow . --tail 20 --exclude /ping --template '{{ .PodName }} {{ .Message}}'
 7386  kubectl get pods -n kubeflow -o wide
 7387  kubectl describe pod buckets-5b6bc9f7-sn662 -n kubeflow
 7388  kubectl get pod buckets-5b6bc9f7-sn662 -n kubeflow -o yaml
 7389  kubectl get storageclass
 7390  kubectl get pvc -n kubeflow
 7391  kubectl describe pvc buckets
 7392  kubectl describe pvc buckets -n kubeflow
 7393  kubectl get pvc -n kubeflow
 7394  kubectl get pv -n kubeflow
 7395  kubectl get pods -n kubeflow -o wide
 7396  kubectl logs buckets-5b6bc9f7-sn662 -n kubeflow
 7397  hub ext stack deploy -o minio
 7398  kubectl get pods -n kubeflow -o wide
 7399  kubectl describe pod buckets-5b6bc9f7-qxfjv -n kubeflow
 7400  kubectl get nodes
 7401  aws eks list-clusters
 7402  kubectl get nodes
 7403  aws eks list-clusters
 7404  eksctl utils write-kubeconfig --name=kubeflow-1 --kubeconfig=./kf1 --set-kubeconfig-context=true
 7405  export KUBECONFIG=/Users/igor/dev/stack-ml-eks/kf1
 7406  kubectl get virtualservices -n workspace -o yaml
 7407  kubectl get gateways --all-namespaces
 7408  kubectl get gateways --all-namespaces -o yaml
 7409  hub extensions update
 7410  kubectl get gateways --all-namespaces -o yaml
 7411  kubectl get gateways --all-namespaces
 7412  kubectl get gateways --all-namespaces -o yaml
 7413  kubectl get virtualservices.networking.istio.io --all-namespaces
 7414  kubectl get gateways --all-namespaces -o yaml
 7415  curl http://kubeflow.eastern-chronic-241.devops.delivery:80/
 7416  hub extensions update
 7417  vi ~/.zshrc
 7418  direnv
 7419  cd ~/dev/stack-ml-eks
 7420  export AWS_REGION="us-east-1"
 7421  export AWS_PROFILE=poc01
 7422  aws eks list-clusters
 7423  pwd
 7424  hub ext stack undeploy
 7425  aws eks list-clusters
 7426  aws s3 ls
 7427  vi /Users/igor/.zshenv
 7428  cat ~/.zshrc
 7429  vi /Users/igor/.zshen:qv
 7430  vi /Users/igor/.zshenv
 7431  echo 'eval "$(direnv hook zsh)"'  >> ~/.zshrc
 7432  vi /Users/igor/.zshrc
 7433  vi /Users/igor/.zshenv
 7434  cd ~/dev/agilestacks-components/sweeper
 7435  export AWS_PROFILE=poc01
 7436  aws s3 ls
 7437  ./main.py sweep --account 608332689354
 7438  python3 -m venv .venv
 7439  ./main.py sweep --account 608332689354
 7440  python --version
 7441  vi main.py
 7442  pip install -r requirements.txt
 7443  ls -lrt
 7444  pip3 install -r requirements.txt
 7445  python --version
 7446  ls -lrt
 7447  ls -alrt
 7448  rm -rf .venv
 7449  python3 -m venv .venv
 7450  source .venv/bin/activate
 7451  python --version
 7452  pwd
 7453  pip3 install -r requirements.txt
 7454  ./main.py sweep --account 608332689354
 7455  aws eks list-clusters
 7456  ./main.py sweep --account 608332689354
 7457  aws s3 ls
 7458  pwd
 7459  ls
 7460  code -n .
 7461  eksctl create cluster -f etc/eks-cluster.yaml
 7462  eksctl utils write-kubeconfig --name=kf3 --kubeconfig=./kf3 --set-kubeconfig-context=true
 7463  export KUBECONFIG=/Users/igor/dev/stack-ml-eks/kf3
 7464  kubcetl get nodes
 7465  kubectl get nodes
 7466  export STACK_NAME=kf3
 7467  hub ext eks attach policy \\n  --cluster "$STACK_NAME" \\n  --policy "AmazonS3FullAccess"
 7468  hub ext eks attach policy \\n  --cluster "$STACK_NAME" \\n  --policy "AmazonEC2ContainerRegistryFullAccess"
 7469  hub configure --current-kubecontext --force
 7470  hub extensions update
 7471  hub configure --current-kubecontext --force
 7472  hub configure --current-kubecontext
 7473  ps
 7474  hub ext aws status
 7475  hub configure --current-kubecontext -f
 7476  hub configure --current-kubecontext --force --verbose
 7477  hub toolbox
 7478  curl -O https://controlplane.agilestacks.io/dist/hub-cli/hub.darwin_amd64
 7479  mv hub.darwin_amd64 hub
 7480  chmod +x hub
 7481  sudo mv hub /usr/local/bin
 7482  hub extensions update
 7483  kubectl get nodes
 7484  hub configure --current-kubecontext --force --verbose
 7485  hub ext aws init
 7486  hub ext aws status
 7487  hub configure --current-kubecontext --force
 7488  hub ext aws init
 7489  hub ext stack deploy
 7490  hub toolbox
 7491  helm version
 7492  terraform
 7493  hub ext stack deploy
 7494  terraform
 7495  terraform version
 7496  brew upgrage terraform
 7497  brew upgrade terraform
 7498  brew install terraform@0.12
 7499  terraform version
 7500  hub ext stack deploy
 7501  ruby --version
 7502  brew install direnv
 7503  brew install ksonnet/tap/ks
 7504  TF_VERSION=0.11.14\nwget https://releases.hashicorp.com/terraform/$TF_VERSION/terraform_"$TF_VERSION"_darwin_amd64.zip\nunzip terraform_"$TF_VERSION"_darwin_amd64.zip\nmv terraform /usr/local/bin/terraform-v0.11
 7505  TF_VERSION=0.12.24\nwget https://releases.hashicorp.com/terraform/$TF_VERSION/terraform_"$TF_VERSION"_darwin_amd64.zip\nunzip terraform_"$TF_VERSION"_darwin_amd64.zip\nmv terraform /usr/local/bin/terraform-v0.12\n
 7506  ls -lrt
 7507  rm terraform_0.1*
 7508  KUBECTL_VERSION=1.16.9\nwget https://storage.googleapis.com/kubernetes-release/release/v$KUBECTL_VERSION/bin/darwin/amd64/kubectl\nchmod +x kubectl\nmv kubectl /usr/local/bin/\n
 7509  cat ~/Downloads/agilestacks2.pem
 7510  cat ~/Downloads/agilestacks.pem
 7511  cat ~/Downloads/agilestacks2.pem
 7512  ssh-keygen -y -f ~/Downloads/agilestacks2.pem
 7513  chmod 600 ~/Downloads/agilestacks2.pem
 7514  chmod 600 ~/Downloads/agilestacks.pem
 7515  ssh-keygen -y -f ~/Downloads/agilestacks2.pem
 7516  ssh-keygen -y -f ~/Downloads/agilestacks.pem
 7517  cp ~/Downloads/agilestacks.pem ~/.ssh/agilestacks.pem
 7518  vi ~/.ssh/config
 7519  ls -lrt
 7520  rm kf1.eksctl.lock
 7521  rm kf1
 7522  ls -lrt
 7523  eksctl get nodes
 7524  kubectl get nodes
 7525  eksctl get iamserviceaccount
 7526  hub ext stack deploy
 7527  hub ext stack undeploy
 7528  hub configure --current-kubecontext --force
 7529  hub ext aws init
 7530  hub ext stack deploy
 7531  vi poc01-kf3.log
 7532  kubectl get gateways --all-namespaces -o yaml
 7533  ls -lrt
 7534  ls components/kubeflow-v1.0/kustomize
 7535  hub ext stack undeploy
 7536  rm -rf components/kubeflow-v1.0/kustomize
 7537  rm -rf components/kubeflow-v1.0/.cache
 7538  hub configure --current-kubecontext --force
 7539  hub ext aws init
 7540  hub ext stack deploy
 7541  ls components/kubeflow-v1.0/ext/istio/add-anonymous-user-filter/overlays/agilstacks
 7542  vi poc01-kf3.log
 7543  hub stack deploy -c kubeflow
 7544  hub stack elaborate
 7545  hub stack deploy -c kubeflow
 7546  hub stack elaborate
 7547  hub stack deploy -c kubeflow
 7548  rm -rf components/kubeflow-v1.0/.cache
 7549  rm -rf components/kubeflow-v1.0/kustomize
 7550  hub stack elaborate
 7551  hub stack deploy -c kubeflow
 7552  echo "kustomize/add-anonymous-user-filter/overlays/agilestacks"
 7553  pwd
 7554  cd components/kubeflow-v1.0/
 7555  ls -lrt
 7556  ls kustomize/add-anonymous-user-filter/overlays/agilestacks-lrt
 7557  ls kustomize/add-anonymous-user-filter/overlays/agilestacks
 7558  ls kustomize/add-anonymous-user-filter/overlays/agilstacks
 7559  ls kustomize/add-anonymous-user-filter/overlays/agilestacks
 7560  ls kustomize/add-anonymous-user-filter/overlays/agilstacks
 7561  rm -rf components/kubeflow-v1.0/kustomize
 7562  rm -rf components/kubeflow-v1.0/.cache
 7563  hub stack elaborate
 7564  pwd
 7565  cd ~/dev/stack-ml-eks
 7566  rm -rf components/kubeflow-v1.0/.cache
 7567  rm -rf components/kubeflow-v1.0/kustomize
 7568  hub stack elaborate
 7569  hub stack deploy -c kubeflow
 7570  hub stack undeploy -c kubeflow,istio
 7571  kfctl --version
 7572  kfctl version
 7573  kubectl delete daemonsets,replicasets,services,deployments,pods,rc,configmaps,secrets,services,ingress,statefulsets,gateways,envoyfilters,jobs.batch,jobs,applications --all --force -n kubeflow
 7574  kubectl delete daemonsets,replicasets,services,deployments,pods,rc,configmaps,secrets,services,ingress,statefulsets,gateways,envoyfilters,jobs.batch,jobs,applications --all --force -n istio-system
 7575  hub stack deploy -c kubeflow,istio
 7576  hub stack undeploy -c istio
 7577  aws eks list-clusters
 7578  hub stack undeploy
 7579  pwf
 7580  pwd
 7581  cd ~/dev/stack-ml-eks
 7582  ls -lrt
 7583  cat etc/eks-cluster.yaml | sed -e "s/happy-cluster/kf4/g" | eksctl create cluster -f -
 7584  aws eks
 7585  aws eks help
 7586  aws eks list-clusters
 7587  aws eks delete-cluster kf3
 7588  cat etc/eks-cluster.yaml | sed -e "s/happy-cluster/kf3/g" | eksctl delete cluster -f -
 7589  eksctl utils write-kubeconfig --name=kf4 --kubeconfig=./kf4 --set-kubeconfig-context=true
 7590  export KUBECONFIG=/Users/igor/dev/stack-ml-eks/kf4
 7591  export STACK_NAME="kf4"
 7592  hub ext eks attach policy \\n  --cluster "$STACK_NAME" \\n  --policy "AmazonEC2ContainerRegistryFullAccess"
 7593  hub ext eks attach policy \\n  --cluster "$STACK_NAME" \\n  --policy "AmazonS3FullAccess"
 7594  hub configure --current-kubecontext --force
 7595  kubectl get nodes
 7596  hub configure --current-kubecontext --force
 7597  rm -rf components/kubeflow-v1.0/kustomize
 7598  rm -rf components/kubeflow-v1.0/.cache
 7599  hub stack elaborate
 7600  hub configure --current-kubecontext --force
 7601  export KUBECONFIG=/Users/igor/dev/stack-ml-eks/kf4
 7602  kubectl get nodes
 7603  hub configure --current-kubecontext --force
 7604  hub ext aws status
 7605  hub stack deploy
 7606  eksctl get namespaces
 7607  kubectl get namespaces
 7608  hub stack deploy
 7609  helm version
 7610  aws eks list-clusters
 7611  stern -n kube-system . --tail 20 --exclude /ping --template '{{ .PodName }} {{ .Message}}'
 7612  stern -n default . --tail 20 --exclude /ping --template '{{ .PodName }} {{ .Message}}'
 7613  kubectl get pods -n kube-system -o wide
 7614  hub stack undeploy
 7615  cd ~/dev/agilestacks-components/sweeper
 7616  aws s3 ls
 7617  aws eks list-clusters
 7618  ./main.py sweep --account 608332689354
 7619  export STACK_NAME="kf5"
 7620  cat etc/eks-cluster.yaml \\n  | sed -e "s/happy-cluster/$STACK_NAME/g" \\n  | eksctl create cluster -f -
 7621  export STACK_NAME="kf5"
 7622  vi etc/eks-cluster.yaml
 7623  hub configure --current-kubecontext --force
 7624  hub aws init
 7625  hub extensions update
 7626  hub aws init
 7627  hub stack deploy
 7628  kubectl get pods -n kube-system -o wide
 7629  kubectl get pods -n kube-system -o wide -w
 7630  kubectl get pods -n kubeflow -o wide -w
 7631  kubectl get envoyfilters --all-namespaces
 7632  kubectl get envoyfilters --all-namespaces -o yaml
 7633  hub stack deploy -c kubeflow
 7634  pwd
 7635  rm -rf components/kubeflow-v1.0/.cache
 7636  rm -rf components/kubeflow-v1.0/kustomize
 7637  hub stack deploy -c kubeflow
 7638  hub ext eks attach policy \\n  --cluster "$STACK_NAME" \\n  --policy "AmazonEC2ContainerRegistryFullAccess"
 7639  kubectl get pods -n kubeflow -o wide -w
 7640  kubectl get pods -n workspace -o wide -w
 7641  aws ecr get-login
 7642  hub ext eks attach policy \\n  --cluster "$STACK_NAME" \\n  --policy "AmazonEC2ContainerRegistryFullAccess"
 7643  kubectl get pods -n workspace -o wide -w
 7644  hub stack undeploy
 7645  pwd
 7646  ./main.py sweep --account 608332689354
 7647  cat etc/eks-cluster.yaml \\n  | sed -e "s/happy-cluster/$STACK_NAME/g" \\n  | eksctl create cluster -f -
 7648  cat etc/eks-cluster.yaml \\n  | sed -e "s/happy-cluster/$STACK_NAME/g" \\n  | eksctl delete cluster -f -
 7649  aws eks list-clusters
 7650  aws s3 ls
 7651  export STACK_NAME="kf6"
 7652  cat etc/eks-cluster.yaml \\n  | sed -e "s/happy-cluster/$STACK_NAME/g" \\n  | eksctl create cluster -f -
 7653  export STACK_NAME="kf7"
 7654  cat etc/eks-cluster.yaml \\n  | sed -e "s/happy-cluster/$STACK_NAME/g" \\n  | eksctl create cluster -f -
 7655  eksctl utils write-kubeconfig --name=kf7 --kubeconfig=./kf7 --set-kubeconfig-context=true
 7656  kubectl get nodes
 7657  hub ext eks attach policy \\n  --cluster "$STACK_NAME" \\n  --policy "AmazonEC2ContainerRegistryFullAccess"
 7658  echo $STACK_NAME
 7659  eksctl
 7660  aws eks list-clusters
 7661  pwd
 7662  export AWS_REGION="us-west-2"
 7663  aws eks list-clusters
 7664  aws eks list-clusters --region=us-west-2
 7665  eksctl utils write-kubeconfig --name=kf7 --kubeconfig=./kf7 --set-kubeconfig-context=true --region=us-west-2
 7666  export KUBECONFIG=/Users/igor/dev/stack-ml-eks/kf7
 7667  kubectl get nodes
 7668  hub ext eks attach policy \\n  --cluster "$STACK_NAME" \\n  --policy "AmazonEC2ContainerRegistryFullAccess"
 7669  vi ~/.aws/config
 7670  hub ext eks attach policy \\n  --cluster "$STACK_NAME" \\n  --policy "AmazonEC2ContainerRegistryFullAccess"
 7671  hub ext eks attach policy \\n  --cluster "$STACK_NAME" \\n  --policy "AmazonEC2ContainerRegistryFullAccess" \\n--region=us-west-2
 7672  hub ext eks attach policy \\n  --cluster "$STACK_NAME" \\n  --policy "AmazonEC2ContainerRegistryFullAccess" \\n--aws-profile=poc01
 7673  hub ext eks attach policy \\n  --cluster "$STACK_NAME" \\n  --policy "AmazonEC2ContainerRegistryFullAccess" \\n  --aws-profile poc01
 7674  hub ext eks attach policy \\n  --cluster "$STACK_NAME" \\n  --policy "AmazonEC2ContainerRegistryFullAccess" \\n  --aws-region us-west-2
 7675  hub ext eks attach policy \\n  --cluster "$STACK_NAME" \\n  --policy "AmazonS3FullAccess" \\n  --aws-region us-west-2
 7676  hub configure --current-kubecontext --force
 7677  hub ext aws init
 7678  hub ext aws init --region us-west-2
 7679  hub ext aws init --aws-region us-west-2
 7680  hub stack deploy --aws-region us-west-2
 7681  hub stack deploy
 7682  ls
 7683  kubectl get pods -n kube-system -o wide -w
 7684  hub stack undeploy
 7685  hub stack deploy
 7686  hub stack deploy -c mysql
 7687  kubectl get pods -n kubeflow -o wide -w
 7688  kubectl get pods -n kubeflow
 7689  hub stack deploy -c kubeflow
 7690  hub stack undeploy
 7691  kubectl get pvc -n kubeflow
 7692  kubectl get pvc -n all-namespaces
 7693  kubectl get pvcs -n all-namespaces
 7694  kubectl get pvc --all-namespaces
 7695  kubectl get pv --all-namespaces
 7696  kubectl delete daemonsets,replicasets,services,deployments,pods,rc,configmaps,secrets,services,ingress,statefulsets,gateways,envoyfilters,jobs.batch,jobs,applications --all --force -n istio-system
 7697  kubectl get pods -n prometheus
 7698  kubectl get pods -n moniotring
 7699  kubectl get pods -n monitoring
 7700  kubectl delete pvc prometheus-prometheus-operator-prometheus-db-prometheus-prometheus-operator-prometheus-0 -n monitoring
 7701  kubectl delete pv pvc-6949d766-1d4f-498e-9b85-13ee6905813f -n monitoring
 7702  kubectl get pv --all-namespaces
 7703  kubectl get pods -n mysql
 7704  hub configure --current-kubecontext --force
 7705  hub ext aws init --aws-region us-west-2
 7706  hub stack deploy
 7707  hub ext aws status
 7708  hub stack deploy
 7709  hub ext eks attach policy \\n  --cluster "$STACK_NAME" \\n  --policy "AmazonEC2ContainerRegistryFullAccess" \\n  --aws-region us-west-2
 7710  hub extensions update
 7711  hub ext eks policy ls
 7712  hub ext eks policy ls --aws-region us-west2
 7713  hub ext eks policy ls --aws-region us-west2 kf7
 7714  hub ext eks policy ls kf7 --aws-region us-west2
 7715  hub ext eks policy-ls kf7 --aws-region us-west2
 7716  hub ext eks policy ls kf7 --aws-region us-west2
 7717  hub ext eks policy ls -c kf7 --aws-region us-west2
 7718  hub ext eks policy ls -c kf7 aws-region us-west2
 7719  hub ext eks policy ls -c kf7
 7720  kubectl get pods -n workspace -o wide -w
 7721  kubectl get logs fairing-builder-7bvx8-9mkrq -n workspace
 7722  kubectl get log fairing-builder-7bvx8-9mkrq -n workspace
 7723  kubectl logs fairing-builder-7bvx8-9mkrq -n workspace
 7724  kubectl get pod fairing-builder-7bvx8-9mkrq -n workspace -o yaml
 7725  echo "QUtJQTU1NVY2WlJDVEdaVDZBVVg=" | base64 -D
 7726  echo "WFRWYmFLa1hxOHRaVUZycWkySlgxSnYwc01jL3FnN2NINUJtT2VQZw==" | base64 -D
 7727  kubectl get pv --all-namespaces
 7728  kubectl get pvc --all-namespaces
 7729  kubectl get pv bucket-kubeflow-pipelines -o yaml 
 7730  kubectl get notebook --all-namespaces
 7731  kubectl get notebook storage -n workspace -o yaml
 7732  kubectl get pods -n workspace -o wide
 7733  kubectl describe pod storage-o -n workspace
 7734  kubectl describe pod storage-0 -n workspace
 7735  kubectl describe pvc buckets -n kubeflow
 7736  kubectl describe pvc buckets -n kubeflow -o yaml
 7737  kubectl describe pvc buckets -n kubeflow
 7738  kubectl get pv --all-namespaces
 7739  cat etc/eks-cluster.yaml
 7740  vi etc/eks-cluster.yaml
 7741  cat ~/Downloads/agilestacks2.pem
 7742  cat ~/Downloads/agilestacks.pem
 7743  vi ~/.ssh/agilestacks.pub
 7744  kubectl get pv --all-namespaces
 7745  kubectl get pvc --all-namespaces
 7746  hub stack undeploy
 7747  eksctl delete cluster -f eks.cluster.yaml
 7748  pwd
 7749  eksctl delete cluster -f etc/eks.cluster.yaml
 7750  ls
 7751  eksctl delete cluster -f etc/eks.cluster.yaml
 7752  history | delete
 7753  history | grep delete
 7754  cat etc/eks-cluster.yaml \\n  | sed -e "s/happy-cluster/$STACK_NAME/g" \\n  | eksctl delete cluster -f -
 7755  pwd
 7756  ls -lrt
 7757  ls
 7758  python --version
 7759  pwd
 7760  eksctl get nodes
 7761  kubectl get nodes
 7762  aws alb describe-load-balancers
 7763  aws ec2 describe-load-balancers
 7764  aws s3 ls
 7765  export AWS_REGION="us-west-2"
 7766  export AWS_PROFILE=poc01
 7767  aws s3 ls
 7768  export AWS_REGION="us-west-2"
 7769  export AWS_PROFILE=poc01
 7770  aws s3 ls
 7771  ./main.py sweep --account 608332689354
 7772  aws s3 ls
 7773  pwd
 7774  code -n .
 7775  pwd
 7776  export AWS_PROFILE=demo05
 7777  aws s3 ls
 7778  ./main.py sweep --account 806215566201
 7779  aws s3 ls
 7780  pwd
 7781  ls -lrt
 7782  curl -O https://controlplane.agilestacks.io/dist/hub-cli/hub.darwin_amd64
 7783  mv hub.darwin_amd64 hub
 7784  chmod +x hub\nsudo mv hub /usr/local/bin\nhub extensions install
 7785  sudo mv hub /usr/local/bin
 7786  hub extensions update
 7787  eksctl create cluster -f etc/eks-cluster.yaml
 7788  ls ~/.ssh/agilestacks.pub
 7789  cat ~/.ssh/agilestacks.pub
 7790  ssh-keygen -y -f ~/.ssh/agilestacks.pub
 7791  ls ~/.ssh/
 7792  chmod 400 ~/.ssh/id_rsa
 7793  chmod 400 ~/.ssh/agilestacks.pub
 7794  chmod 400 ~/.ssh/agilestacks.pem
 7795  cat ~/.ssh/agilestacks.pub
 7796  cat ~/.ssh/agilestacks.pem
 7797  ssh-keygen -y -f  ~/.ssh/agilestacks.pem
 7798  ssh-keygen -y -f  ~/.ssh/agilestacks.pem > ~/.ssh/agilestacks.pub
 7799  mv ~/.ssh/agilestacks.pub ~/.ssh/agilestacks.oldpub
 7800  ssh-keygen -y -f  ~/.ssh/agilestacks.pem > ~/.ssh/agilestacks.pub
 7801  eksctl create cluster -f etc/eks-cluster.yaml
 7802  eksctl get nodes
 7803  kubectl get nodes
 7804  pwd
 7805  ls -lrt
 7806  hub pull
 7807  hub configure --current-kubecontext --force
 7808  hub aws init
 7809  hub stack remotedeploy
 7810  ls -lrt /Users/igor/.hub/hub-remote-deploy
 7811  chmod a+w /Users/igor/.hub/hub-remote-deploy
 7812  ls -lrt /Users/igor/.hub/hub-remote-deploy
 7813  hub stack remotedeploy
 7814  hub stack deploy
 7815  kubectl get ingress kiali -n istio-system -o=jsonpath='{.spec.tls[*].hosts[*]}'
 7816  hub ext eks attach policy \\n  --cluster "$STACK_NAME" \\n  --policy "AmazonEC2ContainerRegistryFullAccess" \\n  --aws-region us-west-2
 7817  hub eks attach policy \\n  --cluster "$STACK_NAME" \\n  --policy "AmazonEC2ContainerRegistryFullAccess" \\n  --aws-region us-west-2
 7818  echo $STACK_NAME
 7819  history | gret STACK_NAME
 7820  history | grep STACK_NAME
 7821  hub eks attach policy \\n  --cluster "happy-cluster" \\n  --policy "AmazonEC2ContainerRegistryFullAccess" \\n  --aws-region us-west-2
 7822  aws eks list-clusters --region=us-west-2
 7823  hub ext eks attach policy \\n  --cluster "happy-cluster" \\n  --policy "AmazonEC2ContainerRegistryFullAccess" \\n  --aws-region us-west-2
 7824  hub ext eks policy attach \\n  --cluster "happy-cluster" \\n  --policy "AmazonEC2ContainerRegistryFullAccess" \\n  --aws-region us-west-2
 7825  history
 7826  kubectl get ingress kiali -n istio-system -o=jsonpath='{.spec.tls[*].hosts[*]}'
 7827  kubectl get gateways --all-namespaces -o yaml
 7828  kubectl get ingress kiali -n kubeflow -o=jsonpath='{.spec.tls[*].hosts[*]}'
 7829  kubectl get ingress kiali -n istio-system
 7830  kubectl get ingress kiali -n istio-system -o=json
 7831  kubectl get ingress kiali -n kubeflow -o=jsonpath='{.spec.rules[*].host[*]}'
 7832  kubectl get ingress kiali -n istio-system -o=jsonpath='{.spec.rules[*].host[*]}'
 7833  kubectl get ingress kiali -n istio-system -o=jsonpath='{.spec.host[*]}'
 7834  kubectl get ingress kiali -n istio-system -o=json
 7835  kubectl get ingress kiali -n istio-system -o=jsonpath='{.spec.rules[*]}'
 7836  kubectl get ingress kiali -n istio-system -o=jsonpath='{.spec.rules[*].host}'
 7837  hub ext eks policy attach \\n  --cluster "happy-cluster" \\n  --policy "AmazonS3FullAccess" \\n  --aws-region us-west-2
 7838  aws s3 ls
 7839  export AWS_PROFILE=poc01
 7840  aws s3 ls
 7841  kubectl logs mnist-train-710e-worker-0
 7842  kubectl logs -p mnist-train-710e-worker-0 
 7843  kubectl logs -p mnist-train-710e-worker-0 -n dev
 7844  kubectl get ingress kiali -n istio-system -o=json
 7845  kubectl describe pod mnist-train-28ae-worker-0 -n dev
 7846  kubectl logs mnist-train-f591-worker-0
 7847  kubectl get pods -n dev
 7848  kubectl get nodes
 7849  kubectl logs mnist-train-f591-worker-0
 7850  kubectl logs mnist-train-f591-worker-0 -n dev
 7851  kubectl describe pod mnist-train-f591-worker-0 -n dev
 7852  kubectl logs mnist-train-f591-worker-0 -n dev
 7853  kubectl get pods -n dev
 7854  aws s3 ls
 7855  kubectl describe pod mnist-train-f591-worker-0 -n dev
 7856  aws s3 ls
 7857  hub configure --current-kubecontext --force
 7858  hub configure --current-kubecontext
 7859  hub ext aws status
 7860  hub ext aws init
 7861  hub stack undeploy
 7862  ls -lrt
 7863  ls -lrt .hub
 7864  kubectl get nodes
 7865  export AWS_PROFILE=poc01
 7866  aws s3 ls
 7867  ./main.py sweep --account 608332689354
 7868  kubectl get pods -n dev
 7869  eksctl delete cluster -f etc/eks.cluster.yaml
 7870  pwd
 7871  eksctl delete cluster -f etc/eks-cluster.yaml
 7872  export STACK_NAME="kf8"
 7873  cat etc/eks-cluster.yaml \\n  | sed -e "s/happy-cluster/$STACK_NAME/g" \\n  | eksctl create cluster -f -
 7874  cd ~/dev/stack-ml-eks
 7875  ls -alrt
 7876  git fetch --all
 7877  git reset --hard origin/master
 7878  git rebase --abort
 7879  git clean -fd
 7880  pwd
 7881  kubectl get nodes
 7882  export AWS_PROFILE=poc01
 7883  pwd
 7884  kubectl get nodes
 7885  export AWS_PROFILE=poc01
 7886  kubectl get nodes
 7887  ls -lrt
 7888  pwd
 7889  ls
 7890  ls *
 7891  cd ~/dev/stack-ml-eks
 7892  ls -lrt
 7893  pwd
 7894  export AWS_PROFILE=poc01
 7895  kubectl get nodes
 7896  ls -lrt
 7897  history >hist_mleks.txt
 7898  export STACK_NAME="kf1"
 7899  cat etc/eks-cluster.yaml \\n  | sed -e "s/happy-cluster/$STACK_NAME/g" \\n  | eksctl create cluster -f -
 7900  aws s3 ls
 7901  kubectl get nodes
 7902  hub pull
 7903  hub configure --current-kubecontext --force
 7904  hub aws init
 7905  hub stack remotedeploy
 7906  hub extensions update
 7907  hub stack remotedeploy
 7908  ls
 7909  cd ~/dev/stack-ml-eks
 7910  export AWS_PROFILE=poc01
 7911  ls -lrt
 7912  kubectl get virtualservices.networking.istio.io --all-namespaces
 7913  ls components/
 7914  pwd
 7915  ls -lrt
 7916  ls components/
 7917  hub pull
 7918  ls components/
 7919  hub stack deploy
 7920  ls -lrt ~/dev/stack-ml-eks/components
 7921  pwd
 7922  cd ..
 7923  ls
 7924  pwd
 7925  cd ~/dev/stack-ml-eks
 7926  cd ~/dev/
 7927  git clone git@github.com:agilestacks/stack-ml-eks.git stack-ml-eks
 7928  cd stack-ml-eks
 7929  hub pull
 7930  ls
 7931  ls -lrt components/
 7932  export AWS_PROFILE=poc01
 7933  kubectl get nodes
 7934  echo $STACK_NAME
 7935  hub configure --current-kubecontext --force
 7936  hub aws init
 7937  hub stack remotedeploy
 7938  hub stack undeploy
 7939  git pull
 7940  file status
 7941  pwd
 7942  git file status
 7943  git status
 7944  hub stack undeploy
 7945  aws s3 ls
 7946  ./main.py sweep --account 608332689354
 7947  ls ~/.ssh/
 7948  vi ~/.ssh/agilestacks.pub
 7949  cat ~/.ssh/agilestacks.pub
 7950  kubectl get nodes
 7951  aws s3 ls
 7952  export AWS_PROFILE=demo05
 7953  aws eks --region us-west-2 update-kubeconfig --name kf5
 7954  eksctl list clusters
 7955  aws eks --region us-west-2 list-clusters
 7956  aws eks --region us-west-2 update-kubeconfig --name kf5-demo5
 7957  kubectl get nodes
 7958  kubectl get svc
 7959  pwd
 7960  ls -lrt
 7961  cat .env
 7962  cat hub.yaml
 7963  cat hub.yaml | grep 1234
 7964  ls
 7965  kubectl get nodes
 7966  aws eks --region us-west-2 list-clusters
 7967  export AWS_PROFILE=poc01
 7968  aws eks --region us-west-2 list-clusters
 7969  aws s3 ls
 7970  cat .env
 7971  hub stack undeploy
 7972  hub configure --current-kubecontext --force
 7973  curl -O https://controlplane.agilestacks.io/dist/hub-cli/hub.darwin_amd64
 7974  mv hub.darwin_amd64 hub
 7975  chmod +x hub
 7976  sudo mv hub /usr/local/bin
 7977  hub extensions install
 7978  hub extensions update
 7979  hub stack undeploy
 7980  hub configure --current-kubecontext --force
 7981  hub stack deploy
 7982  pwd
 7983  export AWS_PROFILE=poc01
 7984  hub util metrics --help
 7985  hub util metrics hub-test --trace
 7986  hub util metrics hub-test
 7987  $HOME/.hub-cache.yaml
 7988  vi $HOME/.hub-cache.yaml
 7989  export AWS_PROFILE=demo10
 7990  aws s3 ls
 7991  ./main.py sweep --account 299380738002
 7992  aws s3 ls
 7993  ./main.py sweep --account 299380738002
 7994  aws s3 ls
 7995  hub util metrics --trace
 7996  hub util metrics hub-test --trace
 7997  export AWS_PROFILE=demo10
 7998  aws s3 ls
 7999  hub login -u demo10.support@agilestacks.io
 8000  export HUB_TOKEN=4bcfdb24c3ffcbbbc49f63ad0b534e0504074ecee66007ad3e056310f640fdc8cfca79cdfd28643b35a94451d283622194f3fa9bc30741aa8e098a12c0e01133ad37d0dfa51bef916ef93491c8512998d591b4863f33b9270af0bbd4f31d1c29e00074719d3d91612b502fdef326932bc9a79245
 8001  hub api environment get --secrets
 8002  pwd
 8003  git status
 8004  cd ..
 8005  mv stack-ml-eks stack-ml-eks-old
 8006  git clone git@github.com:agilestacks/stack-ml-eks.git stack-ml-eks
 8007  cd stack-ml-eks
 8008  ls -lrt
 8009  git status
 8010  ls
 8011  ls -lrt
 8012  export HUB_TOKEN=
 8013  export AWS_PROFILE=poc01
 8014  aws s3 ls
 8015  code -n .
 8016  export STACK_NAME="kf2"
 8017  cat etc/eks-cluster.yaml \\n  | sed -e "s/happy-cluster/$STACK_NAME/g" \\n  | eksctl create cluster -f -
 8018  eksctl list clusters
 8019  aws eks --region us-west-2 list-clusters
 8020  curl -O https://controlplane.agilestacks.io/dist/hub-cli/hub.darwin_amd64
 8021  mv hub.darwin_amd64 hub
 8022  chmod +x hub
 8023  sudo mv hub /usr/local/bin
 8024  hub extensions update
 8025  hub ext eks policy attach \\n  --cluster "$STACK_NAME" \\n  --policy "AmazonS3FullAccess" \\n  --aws-region us-west-2
 8026  hub ext eks policy attach \\n  --cluster "$STACK_NAME" \\n  --policy "AmazonEC2ContainerRegistryFullAccess" \\n  --aws-region us-west-2
 8027  hub ext component download --force --all
 8028  hub configure --current-kubecontext --force
 8029  cat .env
 8030  hub stack deploy
 8031  hub stack undeploy
 8032  aws eks delete-cluster kf2
 8033  history >hist_mleks.txt
 8034  cat etc/eks-cluster.yaml \\n  | sed -e "s/happy-cluster/$STACK_NAME/g" \\n  | eksctl delete cluster -f -
 8035  cat etc/eks-cluster.yaml | sed -e "s/happy-cluster/$STACK_NAME/g" \\n  | eksctl delete cluster -f -
 8036  cat etc/eks-cluster.yaml | sed -e "s/happy-cluster/$STACK_NAME/g" | eksctl delete cluster -f -
 8037  eksctl delete cluster --name="$STACK_NAME"
 8038  aws eks list-clusters --region=us-west-2
 8039  aws s3 ls
 8040  hub --version
 8041  hub version
 8042  curl -O https://controlplane.agilestacks.io/dist/hub-cli/hub.darwin_amd64
 8043  mv hub.darwin_amd64 hub
 8044  chmod +x hub
 8045  sudo mv hub /usr/local/bin
 8046  hub version
 8047  hub extensions update
 8048  export STACK_NAME="kf3"
 8049  cat etc/eks-cluster.yaml | sed -e "s/happy-cluster/$STACK_NAME/g" | eksctl create cluster -f -
 8050  cat .env
 8051  hub stack deploy
 8052  hub --help
 8053  hub deploy
 8054  hub stack
 8055  hub 
 8056  hub deploy
 8057  ls -lrt
 8058  hub configure --current-kubecontext --force
 8059  hub stack deploy
 8060  hub stack remotedeploy
 8061  hub remotedeploy
 8062  hub stack remotedeploy
 8063  curl -O https://controlplane.agilestacks.io/dist/hub-cli/hub.darwin_amd64
 8064  mv hub.darwin_amd64 hub
 8065  chmod +x hub
 8066  sudo mv hub /usr/local/bin
 8067  hub stack deploy
 8068  eksctl delete cluster --name="$STACK_NAME"
 8069  eksctl delete cluster --name="$STACK_NAME" --aws-region us-west-2
 8070  eksctl delete cluster --name="$STACK_NAME" --region us-west-2
 8071  export STACK_NAME="kf4"
 8072  cat etc/eks-cluster.yaml | sed -e "s/happy-cluster/$STACK_NAME/g" | eksctl create cluster -f -
 8073  hub ext eks policy attach \\n  --cluster "$STACK_NAME" \\n  --policy "AmazonS3FullAccess" \\n  --aws-region us-west-2
 8074  hub configure -f hub.yaml -f params.yaml
 8075  hub stack remotedeploy
 8076  hub configure -f hub.yaml -f params.yaml --force
 8077  hub stack remotedeploy
 8078  hub stack deploy
 8079  hub stack undeploy
 8080  ls -lrt
 8081  cat .env
 8082  rm .env
 8083  echo $STACK_NAME
 8084  hub ext component download --force --all
 8085  hub configure -f hub.yaml -f params.yaml
 8086  cat .env
 8087  hub configure -f hub.yaml -f params.yaml --force
 8088  cat .env
 8089  ls .hub
 8090  rm -r .hub
 8091  hub configure -f hub.yaml -f params.yaml --force
 8092  cat .env
 8093  hub configure --current-kubecontext --force
 8094  cat .env
 8095  hub ext update
 8096  hub extensions install
 8097  rm -r .hub
 8098  hub extensions install
 8099  hub extensions update
 8100  eksctl list clusters
 8101  aws eks list-clusters --region=us-west-2
 8102  hub ext component download --force --all
 8103  hub configure -f hub.yaml -f params.yaml
 8104  cat .env
 8105  hub stack deploy
 8106  eksctl delete cluster --name="$STACK_NAME" --region us-west-2
 8107  export STACK_NAME="kf5"
 8108  cat etc/eks-cluster.yaml | sed -e "s/happy-cluster/$STACK_NAME/g" | eksctl create cluster -f -
 8109  history >hist_mleks.txt
 8110  hub extensions update
 8111  aws eks list-clusters --region=us-west-2
 8112  hub ext component download --force --all
 8113  hub configure -f hub.yaml -f params.yaml
 8114  hub stack deploy 2>&1 | tee mystack.log
 8115  hub configure -f hub.yaml -f params.yaml --force
 8116  history >hist_mleks.txt
 8117  unlink .env
 8118  hub configure -f hub.yaml -f params.yaml
 8119  cat .env
 8120  git add params.yaml
 8121  git commit -m "Updated parameter brief message"
 8122  git push
 8123  hub stack deploy 2>&1 | tee mystack.log
 8124  helm list
 8125  rm -rf components/kube-dashboard2
 8126  git ext component download --force
 8127  hub ext component download --force
 8128  git pull
 8129  hub stack elaborate
 8130  hub stack depoy -c kube-dashboard
 8131  hub stack depoy -o kube-dashboard
 8132  hub stack depoy -c kube-dashboard --verbose
 8133  hub stack deploy -c kube-dashboard --verbose
 8134  hub ext component download --force
 8135  hub stack elaborate
 8136  hub stack deploy -c kube-dashboard
 8137  kubectl get services -n kubeflow
 8138  hub ls
 8139  kubectl get gateways --all-namespaces -o yaml
 8140  hub show
 8141  hub show -q '.parameters.component.docker.auth.host' -s dev@rad.demo51.superhub.io
 8142  curl http://kubeflow.symptomatic-chumi-363.bubble.superhub.io/
 8143  clear
 8144  curl http://kubeflow.symptomatic-chumi-363.bubble.superhub.io/
 8145  curl https://kubeflow.symptomatic-chumi-363.bubble.superhub.io/
 8146  aws s3 ls
 8147  grep "admin@agilestacks.io" *
 8148  grep "admin@agilestacks.io" components/*/*
 8149  grep -r "admin@agilestacks.io" components/*/*
 8150  grep -r "admin@agilestacks.io"
 8151  grep -r "admin@agilestacks.io" *
 8152  grep "admin@agilestacks.io" *
 8153  grep "admin@agilestacks.io" .env/*
 8154  grep "admin@agilestacks.io" .env
 8155  ls -lrt
 8156  kubectl get tfjobs --namespace=kubeflow
 8157  kubectl get tfjobs --namespace=workspace
 8158  kubectl create --namespace=istio-system rolebinding --clusterrole=kubeflow-view --serviceaccount=workspace:default-editor workspace-istio-view
 8159  kubectl get ingress
 8160  kubectl get ingress istio-ingress -n istio-system -o=json
 8161  kubectl get ingress -n istio-system -o=json
 8162  kubectl -n istio-system get ingress kiali -o jsonpath="{.status.loadBalancer.ingress[0].hostname}"
 8163  kubectl -n istio-system get ingress kiali -o jsonpath="{.spec.rules[0].host}"
 8164  kubeclt get nodes
 8165  pwd
 8166  cd ~/dev/
 8167  mkdir mykf
 8168  cd mykf
 8169  hub configure -f "https://raw.githubusercontent.com/agilestacks/stack-ml-eks/master/hub.yaml"
 8170  cat https://raw.githubusercontent.com/agilestacks/stack-ml-eks/master/hub.yaml
 8171  curl https://raw.githubusercontent.com/agilestacks/stack-ml-eks/master/hub.yaml
 8172  hub configure -f "https://raw.githubusercontent.com/agilestacks/stack-ml-eks/master/hub.yaml"
 8173  pwd
 8174  ls -lrt
 8175  hub configure -f "https://raw.githubusercontent.com/agilestacks/stack-ml-eks/master/hub.yaml"
 8176  hub ext update
 8177  hub extensions update
 8178  hub configure -f "https://raw.githubusercontent.com/agilestacks/stack-ml-eks/master/hub.yaml"
 8179  pwd
 8180  chmod +x deploy.sh
 8181  ./deploy.sh
 8182  hub stack undeploy
 8183  pwd
 8184  cd ..
 8185  pwd
 8186  cd stack-ml-eks
 8187  ./deploy.sh
 8188  pwd
 8189  ls
 8190  ./deploy.sh
 8191  ;s
 8192  ls
 8193  pwd
 8194  ./deploy.sh
 8195  ls mystack
 8196  cd mystack
 8197  ls -lrt
 8198  cd ..
 8199  rm -rf mystack
 8200  ./deploy.sh
 8201  pwd
 8202  ls -lrt
 8203  cat etc/eks-cluster.yaml | sed -e "s/happy-cluster/$STACK_NAME/g" | eksctl delete cluster -f -
 8204  echo $STACK_NAME
 8205  export STACK_NAME="kf5"
 8206  cat etc/eks-cluster.yaml | sed -e "s/happy-cluster/$STACK_NAME/g" | eksctl delete cluster -f -
 8207  aws eks list-clusters --region=us-west-2
 8208  export AWS_PROFILE=poc01
 8209  aws eks list-clusters --region=us-west-2
 8210  cat etc/eks-cluster.yaml | sed -e "s/happy-cluster/$STACK_NAME/g" | eksctl delete cluster -f -
 8211  export AWS_PROFILE=poc01
 8212  aws s3 ls
 8213  ./main.py sweep --account 608332689354
 8214  aws s3 ls
 8215  pwd
 8216  cd ..
 8217  pwd
 8218  mkdir mykf
 8219  rm -rf mykf
 8220  mkdir kf1
 8221  cd kf1
 8222  export AWS_PROFILE=poc01
 8223  wget https://raw.githubusercontent.com/agilestacks/stack-ml-eks/master/etc/eks-cluster.yaml
 8224  export STACK_NAME="kf1"
 8225  cat eks-cluster.yaml | sed -e "s/happy-cluster/$STACK_NAME/g" | eksctl create cluster -f -\n
 8226  kubectl get nodes
 8227  hub configure -f "https://raw.githubusercontent.com/agilestacks/stack-ml-eks/master/hub.yaml"
 8228  hub extensions update
 8229  hub configure -f "https://raw.githubusercontent.com/agilestacks/stack-ml-eks/master/hub.yaml"
 8230  brew install md5sha1sum
 8231  hub configure -f "https://raw.githubusercontent.com/agilestacks/stack-ml-eks/master/hub.yaml"
 8232  cat .env
 8233  hub stack deploy
 8234  ls -lrt
 8235  ls -lrt components/tiller
 8236  ls -lrt components/istio
 8237  ls -lrt components/*
 8238  hub extensions update
 8239  hub configure -f "https://raw.githubusercontent.com/agilestacks/stack-ml-eks/master/hub.yaml"
 8240  ls -lrt components/*
 8241  rm -rf components/
 8242  ls -lrt components/*
 8243  hub configure -f "https://raw.githubusercontent.com/agilestacks/stack-ml-eks/master/hub.yaml"
 8244  ls -lrt components/*
 8245  hub stack deploy
 8246  history
 8247  cd ~/dev/kf1
 8248  ls -lrt
 8249  cat .env
 8250  export AWS_PROFILE=poc01
 8251  aws eks list-clusters --region=us-west-2
 8252  export STACK_NAME="kf1"
 8253  eksctl get nodes
 8254  kubectl get nodes
 8255  hub configure -r aws --dns-update
 8256  ls -lrt
 8257  cat .env
 8258  hub stack undeploy
 8259  pwd
 8260  export AWS_PROFILE=poc01
 8261  ./main.py sweep --account 608332689354
 8262  hub extensions update
 8263  hub configure -r aws --dns-update
 8264  hub configure -r aws --dns-new
 8265  export AWS_PROFILE=mvp
 8266  aws s3 ls
 8267  vi .aws/config
 8268  vi ~/.aws/config
 8269  vi ~/.aws/credentials
 8270  export AWS_PROFILE=mvp
 8271  aws s3 ls
 8272  ./main.py sweep --account 938880336972
 8273  export AWS_PROFILE=demo10
 8274  aws s3 ls
 8275  ./main.py sweep --account 299380738002
 8276  aws s3 ls
 8277  ./main.py sweep --account 299380738002
 8278  aws s3 ls
 8279  aws s3 rb s3://agilestacks.demo10.superhub.io --force
 8280  aws s3 ls
 8281  aws s3 rb s3://agilestacks.demo10.superhub.io --force
 8282  aws s3 ls
 8283  export AWS_PROFILE=poc01
 8284  aws s3 ls
 8285  ./main.py sweep --account 608332689354
 8286  pwd
 8287  aws s3 ls
 8288  pwd
 8289  cd ..
 8290  rm -rf kf1
 8291  ls kf
 8292  mkdir -p mystack
 8293  cd mystack
 8294  wget https://raw.githubusercontent.com/agilestacks/stack-ml-eks/master/etc/eks-cluster.yaml
 8295  curl -O https://controlplane.agilestacks.io/dist/hub-cli/hub.darwin_amd64\n
 8296  mv hub.darwin_amd64 hub\n
 8297  chmod +x hub\n
 8298  sudo mv hub /usr/local/bin
 8299  hub extensions install
 8300  hub extensions update
 8301  pwd
 8302  ls -lrt
 8303  export STACK_NAME="kf1"
 8304  cat eks-cluster.yaml | sed -e "s/happy-cluster/$STACK_NAME/g" | eksctl create cluster -f -
 8305  aws 
 8306  aws s3 ls
 8307  aws eks list-clusters --region=us-west-2
 8308  hub configure -f "https://raw.githubusercontent.com/agilestacks/stack-ml-eks/master/hub.yaml"
 8309  cat .env
 8310  ls
 8311  hub stack deploy
 8312  hub configure -f "https://raw.githubusercontent.com/agilestacks/stack-ml-eks/master/hub.yaml"
 8313  cat eks-cluster.yaml | sed -e "s/happy-cluster/$STACK_NAME/g" | eksctl delete cluster -f -
 8314  pwd
 8315  export AWS_PROFILE=poc01
 8316  aws s3 ls
 8317  hub extensions update
 8318  ls -lrt
 8319  cd ..
 8320  rm -rf mystack
 8321  mkdir -p mystack
 8322  cd mystack
 8323  wget https://raw.githubusercontent.com/agilestacks/stack-ml-eks/master/etc/eks-cluster.yaml
 8324  export AWS_PROFILE=poc01
 8325  export STACK_NAME="kf1"
 8326  cat eks-cluster.yaml | sed -e "s/happy-cluster/$STACK_NAME/g" | eksctl delete cluster -f -
 8327  cat eks-cluster.yaml | sed -e "s/happy-cluster/$STACK_NAME/g" | eksctl create cluster -f -
 8328  hub configure -f https://raw.githubusercontent.com/agilestacks/stack-ml-eks/master/hub.yaml
 8329  vi .env
 8330  hub stack deploy
 8331  hub show
 8332  hub show -q '.parameters.component.kubeflow.url'
 8333  hub stack undeploy
 8334  cd ~dev/
 8335  mkdir dswork
 8336  cd dswork
 8337  ls
 8338  ls -lrt
 8339  cp ~/Downloads/Session1.ipynb
 8340  cp ~/Downloads/Session1.ipynb .
 8341  cp ~/Downloads/policeStopsData.csv .
 8342  code -n .
 8343  /usr/local/bin/python3 /Users/igor/.vscode/extensions/ms-python.python-2020.9.112786/pythonFiles/pyvsc-run-isolated.py /Users/igor/.vscode/extensions/ms-python.python-2020.9.112786/pythonFiles/shell_exec.py /usr/local/bin/python3 /Users/igor/.vscode/extensions/ms-python.python-2020.9.112786/pythonFiles/pyvsc-run-isolated.py pip install -U ipykernel --user /var/folders/z9/8t1kn89969gf40j824x51ky00000gn/T/tmp-40120i3L77VsVz7Bb.log
 8344  hub stack deploy
 8345  pwd
 8346  python --version
 8347  pyenv shell 3.8.3
 8348  python --version
 8349  jupyter notebook
 8350  pwd
 8351  python --version
 8352  pyenv shell 3.8.3
 8353  python --version
 8354  jupyter notebook
 8355  pwd
 8356  conda install -c conda-forge pandas-profiling
 8357  prompt_anaconda install -c conda-forge pandas-profiling
 8358  pip3 install pandas-profiling
 8359  aws eks list-clusters --region=us-west-2
 8360  cat eks-cluster.yaml | sed -e "s/happy-cluster/$STACK_NAME/g" | eksctl delete cluster -f -
 8361  export STACK_NAME="kf2"
 8362  pwd
 8363  ls -lrt
 8364  rm *
 8365  git clone git@github.com:agilestacks/stack-app-eks.git
 8366  ls
 8367  ls -lrt
 8368  rm -r components
 8369  rm -rf components
 8370  ls -lrt
 8371  pwd
 8372  cd stack-app-eks
 8373  ls -lrt
 8374  vi etc/eks-cluster.yaml
 8375  eksctl create cluster -f etc/eks-cluster.yaml
 8376  vi etc/eks-cluster.yaml
 8377  eksctl create cluster -f etc/eks-cluster.yaml
 8378  hub extensions update
 8379  hub configure -f hub.yaml
 8380  hub stack deploy
 8381  hub show
 8382  hub show -q '.parameters.component.kubernetes-dashboard.url'
 8383  hub show -q '.parameters.kube-dashboard:component.kubernetes-dashboard.url'
 8384  hub show -q '.parameters.kube-dashboard.component.kubernetes-dashboard.url'
 8385  hub show -q 'component.kubernetes-dashboard.url'
 8386  hub show -q '*.component.kubernetes-dashboard.url'
 8387  hub show
 8388  hub configure -r dns --dns-update
 8389  hub configure -r aws --dns-update
 8390  pwd
 8391  ls -lrt
 8392  cat .env
 8393  pwd
 8394  ls -lrt
 8395  kubectl get nodes
 8396  aws eks list-clusters --region=us-west-2
 8397  aws eks list-clusters --region=us-east-1
 8398  aws eks list-clusters --region=us-east-2
 8399  ls -lrt
 8400  ls etc
 8401  cat etc/eks-cluster.yaml
 8402  eksctl delete cluster -f etc/eks-cluster.yaml
 8403  hub configure -f ""https://raw.githubusercontent.com/agilestacks/stack-ml-eks/master/hub.yaml""
 8404  hub configure -f https://raw.githubusercontent.com/agilestacks/stack-ml-eks/master/hub.yaml
 8405  hub extensions update
 8406  cd ~/dev/superhub.io
 8407  code -n .
 8408  ls
 8409  history >hist_mleks.txt
 8410  vi hist_mleks.txt
 8411  pwd
 8412  ssh -i "~/dev/agilestacks.pem" ec2-user@ec2-54-82-75-247.compute-1.amazonaws.com
 8413  ssh -i "~/dev/agilestacks2.pem" ec2-user@ec2-54-82-75-247.compute-1.amazonaws.com
 8414  ls ~/Downloads/agilestacks.pem
 8415  ssh -i "/Users/igor/Downloads/agilestacks.pem" ec2-user@ec2-54-82-75-247.compute-1.amazonaws.com
 8416  export AWS_PROFILE=poc01
 8417  aws s3 ls
 8418  curl -O https://controlplane.agilestacks.io/dist/hub-cli/hub.darwin_amd64
 8419  mv hub.darwin_amd64 hub
 8420  chmod +x hub
 8421  sudo mv hub /usr/local/bin
 8422  hub extensions install
 8423  hub extensions update
 8424  aws eks list-clusters --region=us-east-2
 8425  ls
 8426  pwd
 8427  ls -a
 8428  pwd
 8429  rm -rf mystack
 8430  mkdir -p mystack
 8431  cd mystack
 8432  ls
 8433  hub configure -f https://raw.githubusercontent.com/agilestacks/stack-ml-eks/master/hub.yaml
 8434  pwd
 8435  export AWS_PROFILE=poc01
 8436  aws s3 ls
 8437  ./main.py sweep --account 608332689354
 8438  aws s3 ls
 8439  ./main.py sweep --account 608332689354
 8440  export AWS_PROFILE=demo05
 8441  aws s3 ls
 8442  ./main.py sweep --account 806215566201
 8443  aws s3 ls
 8444  export AWS_PROFILE=demo04
 8445  aws s3 ls
 8446  ./main.py sweep --account 976312427958
 8447  export AWS_PROFILE=demo03
 8448  aws s3 ls
 8449  ./main.py sweep --account 630344061260
 8450  aws eks --region us-west-2 update-kubeconfig --name kf1
 8451  aws s3 ls
 8452  ssh -i "/Users/igor/Downloads/agilestacks.pem" ec2-user@ec2-54-82-75-247.compute-1.amazonaws.com
 8453  pwd
 8454  hub configure -f https://raw.githubusercontent.com/agilestacks/stack-ml-eks/master/hub.yaml
 8455  ls -lrt
 8456  pwd
 8457  ls -lrt
 8458  cd ~/dev/superhub.io
 8459  ls -lrt
 8460  code -n .
 8461  brew install hugo
 8462  make serve
 8463  hugo version
 8464  make develop
 8465  make serve
 8466  sudo port install hugo +extended
 8467  port version
 8468  hugo version
 8469  make serve
 8470  python --version
 8471  sudo npm install -D --save autoprefixer
 8472  sudo npm install -D --save postcss-cli
 8473  make serve
 8474  hub configure -f https://raw.githubusercontent.com/agilestacks/stack-ml-eks/master/hub.yaml
 8475  stack deploy
 8476  hub stack deploy
 8477  make publish
 8478  make serve
 8479  make publish
 8480  git status
 8481  git fetch --all
 8482  make publish
 8483  git fetch --all
 8484  make publish
 8485  export AWS_PROFILE=iddqd
 8486  aws s3 ls
 8487  aws iam update-login-profile --user-name igor --password "G8ZypQ52j+Z@"
 8488  aws iam update-login-profile --user-name igor --password "G8ZypQ524663hgj+Z@"
 8489  make serve
 8490  make publish
 8491  pwd
 8492  ls -lrt
 8493  pwd
 8494  cd ..
 8495  ls -lrt
 8496  rm -rf mystack
 8497  rm -rf components
 8498  ls
 8499  ls -lrt
 8500  export STACK_NAME="kfd1"
 8501  cat etc/eks-cluster.yaml | sed -e "s/happy-cluster/$STACK_NAME/g" | eksctl create cluster -f -
 8502  hub extensions update
 8503  aws eks --region us-west-2 update-kubeconfig --name kfd1
 8504  kubectl get nodes
 8505  clear
 8506  aws eks --region us-west-2 update-kubeconfig --name kfd1
 8507  mkdir -p mystack
 8508  cd mystack
 8509  clear
 8510  pwd
 8511  ls
 8512  aws eks --region us-west-2 update-kubeconfig --name kfd1
 8513  kubectl get nodes
 8514  hub configure -f https://raw.githubusercontent.com/agilestacks/stack-ml-eks/master/hub.yaml
 8515  hub stack deploy
 8516  hub show -q '*.component.kubernetes-dashboard.url'
 8517  hub show -q '.parameters.component.kubeflow.url'
 8518  hub show 
 8519  clear
 8520  hub show
 8521  hub stack undeploy
 8522  cat etc/eks-cluster.yaml | sed -e "s/happy-cluster/$STACK_NAME/g" | eksctl delete cluster -f -
 8523  pwd
 8524  cd ..
 8525  cat etc/eks-cluster.yaml | sed -e "s/happy-cluster/$STACK_NAME/g" | eksctl delete cluster -f -
 8526  export STACK_NAME="kf3"
 8527  cat etc/eks-cluster.yaml | sed -e "s/happy-cluster/$STACK_NAME/g" | eksctl create cluster -f -
 8528  ls
 8529  clear
 8530  ls
 8531  mkdir -p mystack
 8532  cd mystack
 8533  aws eks --region us-west-2 update-kubeconfig --name kf3
 8534  kubectl get nodes
 8535  hub configure -f https://raw.githubusercontent.com/agilestacks/stack-ml-eks/master/hub.yaml
 8536  ls
 8537  pwd
 8538  cd ..
 8539  rm -rf mystack
 8540  pwd
 8541  kubectl get nodes
 8542  clear
 8543  mkdir -p mystack
 8544  cd mystack
 8545  kubectl get nodes
 8546  hub configure -f https://raw.githubusercontent.com/agilestacks/stack-ml-eks/master/hub.yaml
 8547  hub stack deploy
 8548  hub show -q '.parameters.component.kubeflow.url'
 8549  cd ~/dev/stack-ml-eks
 8550  code -n .
 8551  cd mystack
 8552  code -n .
 8553  hub show -q '.parameters.component.kubeflow.url'
 8554  hub stack undeploy
 8555  cd ..
 8556  cat etc/eks-cluster.yaml | sed -e "s/happy-cluster/$STACK_NAME/g" | eksctl delete cluster -f -
 8557  export STACK_NAME="kf3"
 8558  cat etc/eks-cluster.yaml | sed -e "s/happy-cluster/$STACK_NAME/g" | eksctl delete cluster -f -
 8559  ls
 8560  export AWS_PROFILE=poc01
 8561  ./main.py sweep --account 608332689354
 8562  cd ~/dev/yolo-demo1
 8563  code -n .
 8564  aws s3 ls
 8565  pwd
 8566  export AWS_PROFILE=poc01
 8567  export STACK_NAME="kf5"
 8568  cat etc/eks-cluster.yaml | sed -e "s/happy-cluster/$STACK_NAME/g" | eksctl create cluster -f -
 8569  kubectl get nodes
 8570  pwd
 8571  rm -rf mystack
 8572  mkdir -p mystack
 8573  cd mystack
 8574  hub extensions update
 8575  hub configure -f https://raw.githubusercontent.com/agilestacks/stack-ml-eks/master/hub.yaml
 8576  hub stack deploy
 8577  pwd
 8578  cd ~/dev
 8579  mkdir -p iot
 8580  cd iot
 8581  wget https://raw.githubusercontent.com/PacktPublishing/Hands-On-Artificial-Intelligence-for-IoT/blob/master/Chapter10/Predictive_Maintenance_using_LSTM.ipynb
 8582  wget https://raw.githubusercontent.com/PacktPublishing/Hands-On-Artificial-Intelligence-for-IoT/master/Chapter10/Predictive_Maintenance_using_LSTM.ipynb
 8583  ls
 8584  pwd
 8585  cd ..
 8586  mkdir -p appstack
 8587  cd appstack
 8588  cd .
 8589  cd ..
 8590  git clone git@github.com:agilestacks/stack-app-eks.git appstack
 8591  cd appstack
 8592  export AWS_PROFILE=poc01
 8593  eksctl create cluster -f etc/eks-cluster.yaml
 8594  vi etc/eks-cluster.yaml
 8595  eksctl create cluster -f etc/eks-cluster.yaml
 8596  hub extensions update
 8597  hub configure -f hub.yaml
 8598  cd ..
 8599  cd stack-app-eks
 8600  cd stack-app
 8601  git clone https://github.com/agilestacks/stack-apps.git stack-apps
 8602  rm -rf stack-apps
 8603  git clone https://github.com/agilestacks/stack-apps.git stack-apps
 8604  cd stack-app
 8605  cd stack-apps
 8606  ls
 8607  pwd
 8608  code -n .
 8609  kubectl get nodes
 8610  pwd
 8611  ls
 8612  cd apps
 8613  ls
 8614  cd python-flask
 8615  ls
 8616  hub show
 8617  hub configure -f hub.yaml
 8618  hub configure -f hub.yaml --verbose
 8619  cat .env
 8620  hub configure -r this
 8621  hub configure -r this --verbose
 8622  hub show
 8623  hub show --verbose
 8624  kubectl -n kube-system -o json get configmap superhub
 8625  pwd
 8626  export AWS_PROFILE=poc01
 8627  pwd
 8628  cd ~/dev/stack-apps
 8629  ls -lrt
 8630  ls -alrt
 8631  cd ..
 8632  ls -lrt
 8633  cd appstack
 8634  ls -lrt
 8635  ls -alrt
 8636  cat hub.yaml
 8637  hub show
 8638  cat .env
 8639  hub stack deploy
 8640  ls
 8641  ls -lrt
 8642  hub show
 8643  cd ..
 8644  ls
 8645  cd python-flask
 8646  ls -lrt
 8647  hub configure -f hub.yaml
 8648  hub stack deploy
 8649  hub show
 8650  hub show | grep rubik
 8651  ls -lrt
 8652  skaffold dev
 8653  hub show
 8654  cat .env
 8655  hub login
 8656  docker login "${HUB_DOCKER_HOST}" -u "${HUB_DOCKER_USER}" -p "${HUB_DOCKER_PASS}"
 8657  docker login https://acid-shallot-229-harbor.app.acid-shallot-229.bubble.superhub.io
 8658  skaffold dev
 8659  source .env
 8660  skaffold dev
 8661  history >hist_mleks.txt
 8662  vi hist_mleks.txt
 8663  skaffold dev
 8664  pwd
 8665  ls -lrt
 8666  vi hub.yaml
 8667  hub show
 8668  export AWS_PROFILE=poc01
 8669  hub show
 8670  hub configure -f hub.yaml
 8671  hub show
 8672  skaffold dev
 8673  aws eks --region us-west-2 update-kubeconfig --name applications
 8674  aws eks --region us-east-2 update-kubeconfig --name applications
 8675  hub show
 8676  hub show -q '.parameter.sharbor:component.harbor.url'
 8677  hub show -q '.parameters.harbor:component.harbor.url'
 8678  hub show -q '.parameters.harbor.component.harbor.url'
 8679  hub show -q '.parameters.component.harbor.url'
 8680  hub ls -p harbor
 8681  hub show
 8682  hub configure -f hub.yaml
 8683  source .env
 8684  pwd
 8685  cat k8s/ingress.yaml
 8686  export AWS_PROFILE=poc01
 8687  kubectl get nodes
 8688  code -n .
 8689  hun show
 8690  hub show
 8691  pwd
 8692  cd python-flask
 8693  code -n .
 8694  ls
 8695  export AWS_PROFILE=poc01
 8696  hub show
 8697  aws eks list-clusters --region=us-west-2
 8698  aws eks --region us-west-2 update-kubeconfig --name kf5
 8699  kubectl get nodes
 8700  hub configure -r aws --dns-update 
 8701  hub configure -r aws --dns-update
 8702  pwd
 8703  export AWS_PROFILE=poc01
 8704  kubectl get nodes
 8705  ls
 8706  ls -lrt
 8707  hub configure -r aws --dns-update 
 8708  skaffold dev
 8709  docker login https://acid-shallot-229-harbor.app.acid-shallot-229.bubble.superhub.io
 8710  skaffold dev
 8711  skaffold dev -p incluster
 8712  export AWS_PROFILE=poc01
 8713  hub configure -r aws --dns-update 
 8714  ls
 8715  pwd
 8716  hub configure -r aws --dns-update 
 8717  kubectl get nodes
 8718  aws eks --region us-east-2 update-kubeconfig --name applications
 8719  kubectl get nodes
 8720  skaffold dev
 8721  docker login https://acid-shallot-229-harbor.app.acid-shallot-229.bubble.superhub.io
 8722  skaffold dev
 8723  skaffold dev -p incluster
 8724  docker logout 
 8725  docker login https://acid-shallot-229-harbor.app.acid-shallot-229.bubble.superhub.io
 8726  skaffold dev
 8727  history >hist_mleks.txt
 8728  hub show
 8729  docker login https://acid-shallot-229-harbor.app.acid-shallot-229.bubble.superhub.io
 8730  source .env
 8731  cat .env
 8732  skaffold dev
 8733  hub show
 8734  pwd
 8735  code -n .
 8736  export AWS_PROFILE=demo06
 8737  aws s3 ls
 8738  pwd
 8739  ls
 8740  eksctl delete cluster -f etc/eks-cluster.yaml
 8741  kubectl get nodes
 8742  export AWS_PROFILE=poc01
 8743  aws eks --region us-west-2 update-kubeconfig --name kf5
 8744  kubectl get nodes
 8745  hub configure -r aws --dns-update
 8746  export AWS_PROFILE=poc01
 8747  kubectl get nodes
 8748  hub configure -r aws --dns-update
 8749  kubectl -n istio-system describe ingress
 8750  hub stack show
 8751  hub show
 8752  hub configure -r aws --dns-update
 8753  export AWS_PROFILE=poc01
 8754  code -n .
 8755  hub show
 8756  pwd
 8757  kubectl -n istio-system describe ingress
 8758  pwd
 8759  cd ..
 8760  ls
 8761  cd next.js
 8762  hub configure -f hub.yaml
 8763  hub configure -f hub.yaml -r envvars --verbose
 8764  code -n .
 8765  hub configure -f hub.yaml
 8766  source .env
 8767  skaffold dev --port-forward
 8768  pwd
 8769  ls
 8770  cd ..
 8771  ls
 8772  mkdir demo1
 8773  cd demo1
 8774  export AWS_PROFILE=poc01
 8775  aws eks --region us-west-2 update-kubeconfig --name kf5
 8776  git clone https://github.com/agilestacks/stack-apps.git
 8777  cd stack-apps/apps/next.js
 8778  hub configure -f hub.yaml
 8779  echo $HUB_DOMAIN_NAME
 8780  export AWS_PROFILE=poc01
 8781  echo $HUB_DOMAIN_NAME
 8782  hub extensions update
 8783  pwd
 8784  hub configure -f hub.yaml
 8785  ls -alrt
 8786  rm -rf .hub
 8787  rm -rf .env
 8788  hub configure -f hub.yaml
 8789  hub extensions update
 8790  hub configure -f hub.yaml
 8791  pwd
 8792  hub extensions update
 8793  hub configure -f hub.yaml
 8794  cat /Users/igor/.hub/kubernetes/configure
 8795  vi /Users/igor/.hub/kubernetes/configure
 8796  configure-kubeconfig
 8797  ls
 8798  hub configure -f hub.yaml
 8799  pwd
 8800  hub extensions update
 8801  hub show
 8802  hub configure -r aws --dns-update
 8803  pwd
 8804  ls
 8805  pwd
 8806  ls
 8807  pwd
 8808  hub extensions update
 8809  hub configure -f hub.yaml
 8810  pwd
 8811  hub show
 8812  pwd
 8813  hub configure -r aws --dns-update
 8814  ls -alrt
 8815  aws eks --region us-west-2 update-kubeconfig --name kf5
 8816  kubectl get nodes
 8817  hub configure -f hub.yaml
 8818  kubectl config current-context
 8819  unlink .env
 8820  rm .hub/env
 8821  rm -r .hub/env
 8822  hub configure -f hub.yaml
 8823  skaffold dev --port-forward
 8824  brew upgrade skaffold
 8825  skaffold dev --port-forward
 8826  pwd
 8827  cd ~/dev
 8828  ls -lrt
 8829  cd appstack
 8830  ls
 8831  ls -lrt
 8832  cd ..
 8833  rm -rf appstack
 8834  mkdir appstack
 8835  cd ..
 8836  git clone https://github.com/agilestacks/stack-app-eks.git appstack
 8837  cd appstack
 8838  ls -lrt
 8839  vi etc/eks-cluster.yaml
 8840  eksctl create cluster -f etc/eks-cluster.yaml
 8841  export AWS_PROFILE=poc01
 8842  eksctl create cluster -f etc/eks-cluster.yaml
 8843  vi etc/eks-cluster.yaml
 8844  eksctl create cluster -f etc/eks-cluster.yaml
 8845  hub configure -f hub.yaml
 8846  hub stack deploy
 8847  aws s3 ls
 8848  export AWS_PROFILE=poc01
 8849  hub stack deploy
 8850  kubectl get nodes
 8851  docker pull hivecell/confluent-platform-arm64
 8852  docker pull hivecell/docker-compose
 8853  hub show
 8854  pwd
 8855  ls -lrt
 8856  pwd
 8857  git pull
 8858  ls -lrt
 8859  kubectl get nodes
 8860  hub configure -f hub.yaml
 8861  source .env
 8862  hub stack deploy
 8863  hub extensions update
 8864  ls -alrt
 8865  unlink .env
 8866  rm -rf .hub
 8867  ls -lrt
 8868  hub extensions update
 8869  hub configure -f hub.yaml
 8870  hub stack deploy
 8871  export AWS_PROFILE=poc01
 8872  ls -lrt
 8873  rm skaffold.yaml
 8874  ls -alrt
 8875  unlink .env
 8876  rm -rf .hub
 8877  hub configure -f hub.yaml
 8878  pwd
 8879  hub configure -f hub.yaml
 8880  ls -lrt
 8881  skaffold dev --port-forward
 8882  helm -v
 8883  helm --version
 8884  helm
 8885  helm version
 8886  helm2 version
 8887  helm3 version
 8888  helm2 version
 8889  helm version
 8890  helm3 version
 8891  skaffold dev --port-forward
 8892  hub show
 8893  docker login https://melted-lundy-431-harbor.app.melted-lundy-431.bubble.superhub.io
 8894  skaffold dev --port-forward
 8895  export AWS_PROFILE=poc01
 8896  skaffold dev --port-forward
 8897  pwd
 8898  export AWS_PROFILE=poc01
 8899  ls
 8900  pwd
 8901  eksctl delete cluster -f etc/eks-cluster.yaml
 8902  pwd
 8903  cd ~/dev/
 8904  mkdir hivecell
 8905  cd hivecell
 8906  vi hivecell.yaml
 8907  export KUBECONFIG=/Users/igor/dev/hivecell/hivecell.yaml
 8908  kubectl get nodes
 8909  cd ~/dev/superhub.io
 8910  code -n .
 8911  make publish
 8912  ls ~/dev/components
 8913  ls ~/dev/components | wc
 8914  ls -lrt ~/dev/components | lc
 8915  ls -lrt ~/dev/components | count
 8916  ls -lrt ~/dev/components | wc
 8917  ls -lrt ~/dev/components 
 8918  ssh hc@a9e4fed7403064ca99287a04b2b98334-1003291385.us-east-2.elb.amazonaws.com -i rssh -p 2222 -t 'ssh -p 2502 -i /home/hc/.ssh/2502 hiveuser@127.0.0.1'
 8919  pwd
 8920  cp ~/Downloads/rssh .
 8921  ls -lrt
 8922  chmod 400 ./rssh
 8923  ssh hc@a9e4fed7403064ca99287a04b2b98334-1003291385.us-east-2.elb.amazonaws.com -i rssh -p 2222 -t 'ssh -p 2502 -i /home/hc/.ssh/2502 hiveuser@127.0.0.1'
 8924  sudo yum install -y git python3-pip jq
 8925  cd ~/dev/iot
 8926  ls -lrt
 8927  vi hivecell.yaml
 8928  export KUBECONFIG=/Users/igor/dev/iot/hivecell.yaml
 8929  kubectl get nodes
 8930  pwd
 8931  cp ~/Downloads/rssh .
 8932  chmod 400 ./rssh
 8933  ssh hc@a9e4fed7403064ca99287a04b2b98334-1003291385.us-east-2.elb.amazonaws.com -i rssh -p 2222 -t 'ssh -p 2502 -i /home/hc/.ssh/2502 hiveadmin@127.0.0.1'
 8934  ls -lrt
 8935  cp ~/Downloads/rssh .
 8936  rm ./rssh
 8937  cp ~/Downloads/rssh .
 8938  chmod 400 ./rssh
 8939  ssh hc@a9e4fed7403064ca99287a04b2b98334-1003291385.us-east-2.elb.amazonaws.com -i rssh -p 2222 -t 'ssh -p 2502 -i /home/hc/.ssh/2502 hiveadmin@127.0.0.1'
 8940  ssh hc@a9e4fed7403064ca99287a04b2b98334-1003291385.us-east-2.elb.amazonaws.com -i rssh -p 2222 -t 'ssh -p 2504 -i /home/hc/.ssh/2504 hiveadmin@127.0.0.1'
 8941  pwd
 8942  ls
 8943  ls components/
 8944  export AWS_PROFILE=poc01
 8945  pwd
 8946  aws eks --region us-west-2 update-kubeconfig --name kf5
 8947  kubectl get nodes
 8948  hub configure -r aws --dns-update
 8949  ls
 8950  code -n .
 8951  hub show
 8952  ls -lrt
 8953  history >hist.txt
 8954  docker login https://hub.docker.com/repositories
 8955  docker login https://hub.docker.com/
 8956  docker login
 8957  docker login https://hub.docker.com
 8958  docker login hub.docker.com
 8959  docker login dev
 8960  docker login https://index.docker.io/
 8961  docker logout
 8962  docker login https://index.docker.io/
 8963  echo -n mameshini:Cloud20 | base64
 8964  vi config.json
 8965  kubectl create --namespace kubeflow configmap docker-config --from-file=./config.json
 8966  kubectl get namespaces
 8967  kubectl get services -n kubeflow
 8968  kubectl get services -n workspace
 8969  kubectl get services -n default
 8970  hub show
 8971  kubectl get services -n kubeflow-data
 8972  hub show
 8973  ls
 8974  ls -lrt
 8975  cat ~/.ssh/id_rsa.pub
 8976  cat ~/.ssh/id_rsa
 8977  pwd
 8978  ls -lrt
 8979  export AWS_PROFILE=poc01
 8980  aws eks --region us-west-2 update-kubeconfig --name kf5
 8981  hub extensions update
 8982  hub configure -f hub.yaml
 8983  source .env
 8984  hub stack deploy
 8985  helm version
 8986  helm3 version
 8987  vi hub.yaml
 8988  hub configure -f hub.yaml
 8989  source .env
 8990  hub stack elaborate
 8991  vi hub.yaml
 8992  code -n .
 8993  hub stack elaborate
 8994  hub stack deploy
 8995  hub configure -f hub.yaml
 8996  hub stack elaborate
 8997  hub configure -f hub.yaml
 8998  source .env
 8999  hub stack elaborate
 9000  hub stack deploy
 9001  vi hub.yaml
 9002  ls
 9003  ls -lrt
 9004  vi hub.yaml
 9005  hub show
 9006  vi hub.yaml 
 9007  hub configure -f hub.yaml
 9008  hub stack deploy
 9009  hub configure -f hub.yaml
 9010  hub stack deploy
 9011  hub configure -f hub.yaml
 9012  hub stack deploy
 9013  hub show
 9014  hub stack undeploy
 9015  hub show
 9016  hub configure -r aws --dns-update
 9017  hub stack undeploy
 9018  code -n .
 9019  echo $STACK_NAME
 9020  export STACK_NAME="kf5"
 9021  cat etc/eks-cluster.yaml \\n  | sed -e "s/happy-cluster/$STACK_NAME/g" \\n  | eksctl create cluster -f -
 9022  pwd
 9023  ls -lrt
 9024  ls components/
 9025  export AWS_PROFILE=poc01
 9026  ./main.py sweep --account 608332689354
 9027  pwd
 9028  ls
 9029  ./main.py sweep --account 608332689354
 9030  pwd
 9031  export AWS_PROFILE=poc01
 9032  ./main.py sweep --account 608332689354
 9033  python --version
 9034  aws --version
 9035  pip install awscli --force-reinstall --upgrade
 9036  aws --version
 9037  ./main.py sweep --account 608332689354
 9038  pip install boto3 --upgrade
 9039  ./main.py sweep --account 608332689354
 9040  pip install docopt --upgrade
 9041  ./main.py sweep --account 608332689354
 9042  pwd
 9043  ls -lrt
 9044  pwd
 9045  cd ..
 9046  ls -lrt
 9047  git status
 9048  export AWS_PROFILE=poc01
 9049  export STACK_NAME="kf5"
 9050  cat etc/eks-cluster.yaml \\n  | sed -e "s/happy-cluster/$STACK_NAME/g" \\n  | eksctl create cluster -f -
 9051  ls
 9052  cat etc/eks-cluster.yaml  | sed -e "s/happy-cluster/$STACK_NAME/g" \\n  | eksctl create cluster -f -
 9053  cat etc/eks-cluster.yaml  | sed -e "s/happy-cluster/$STACK_NAME/g" | eksctl create cluster -f -
 9054  cat etc/eks-cluster.yaml  | sed -e "s/happy-cluster/$STACK_NAME/g" | eksctl delete cluster -f -
 9055  ./main.py sweep --account 608332689354
 9056  export STACK_NAME="kf6"
 9057  cat etc/eks-cluster.yaml  | sed -e "s/happy-cluster/$STACK_NAME/g" | eksctl create cluster -f -
 9058  ls
 9059  eksctl create cluster -f etc/eks-cluster.yaml
 9060  pwd
 9061  ls
 9062  ls mystack
 9063  pwd
 9064  cd mystack
 9065  ls
 9066  cd ..
 9067  ls
 9068  code -n .
 9069  rm -rf mystack
 9070  ls
 9071  mkdir mykf
 9072  cd mykf
 9073  aws eks --region us-west-2 update-kubeconfig --name kf5
 9074  aws eks --region us-west-2 update-kubeconfig --name kf6
 9075  kubectl get nodes
 9076  hub configure -f https://raw.githubusercontent.com/agilestacks/stack-ml-eks/master/hub.yaml
 9077  source .env
 9078  hub stack deploy
 9079  pwd
 9080  git status
 9081  code -n .
 9082  pwd
 9083  export AWS_PROFILE=poc01
 9084  aws eks --region us-east-2 update-kubeconfig --name applications
 9085  eksctl list clusters
 9086  aws eks --region us-east-2 update-kubeconfig --name applications
 9087  export AWS_PROFILE=agilestacks
 9088  aws eks --region us-east-2 update-kubeconfig --name applications
 9089  export AWS_PROFILE=spec
 9090  aws eks --region us-east-2 update-kubeconfig --name applications
 9091  eksctl delete cluster -f etc/eks-cluster.yaml
 9092  export AWS_PROFILE=poc01
 9093  eksctl create cluster -f etc/eks-cluster.yaml
 9094  cat .env
 9095  ls
 9096  aws eks --region us-east-2 update-kubeconfig --name applications
 9097  hub extensions install
 9098  hub extensions update
 9099  hub configure -f hub.yaml
 9100  pwd
 9101  ls -lrt
 9102  ls -alrt
 9103  rm -rf .hub
 9104  ls -alrt
 9105  aws eks --region us-east-2 update-kubeconfig --name applications
 9106  hub configure -f hub.yaml
 9107  source .env
 9108  hub stack deploy
 9109  pwd
 9110  export AWS_PROFILE=poc01
 9111  aws eks --region us-east-2 update-kubeconfig --name applications
 9112  ls -lrt
 9113  ls -alrt
 9114  hub configure -f hub.yaml
 9115  rm -rf .hub
 9116  hub configure -f hub.yaml
 9117  source .env
 9118  skaffold dev
 9119  hub configure -f hub.yaml -r envvars --verbose
 9120  source .env
 9121  skaffold dev
 9122  code -n .
 9123  rm -rf .hub
 9124  unlink .env
 9125  hub configure -f hub.yaml --verbose
 9126  code -n .
 9127  pwd
 9128  cd /Users/igor/dev/stack-apps/apps/next.js
 9129  export AWS_PROFILE=poc01
 9130  aws eks --region us-east-2 update-kubeconfig --name applications
 9131  hub configure -f hub.yaml
 9132  source .env
 9133  cat hub.yaml
 9134  skaffold dev
 9135  hub stack deploy
 9136  hub configure -f hub.yaml
 9137  pwd
 9138  hub show
 9139  ls -alrt
 9140  kubectl get nodes
 9141  hub show
 9142  aws eks --region us-east-2 update-kubeconfig --name applications
 9143  hub show
 9144  ls
 9145  export AWS_PROFILE=poc01
 9146  aws eks --region us-west-2 update-kubeconfig --name kf6
 9147  kubectl get nodes
 9148  hub configure -r aws --dns-update
 9149  hub show
 9150  pwd
 9151  code -n .
 9152  pwd
 9153  export AWS_PROFILE=poc01
 9154  aws eks --region us-west-2 update-kubeconfig --name kf6
 9155  code -n .
 9156  source .env
 9157  hub show
 9158  hub stack deploy -c s3-flex-driver
 9159  code -n .
 9160  ls .hub/small-julie-379.bubble.superhub.io.elaborate
 9161  hub stack deploy -c s3-flex-driver --profile local
 9162  ls .hub/small-julie-379.bubble.superhub.io.state
 9163  hub stack deploy
 9164  hub show
 9165  ls -lrt
 9166  pwd
 9167  hub configure -r aws --help
 9168  ls -alrt
 9169  aws eks --region us-east-2 update-kubeconfig --name applications
 9170  source .env
 9171  hub stack deploy
 9172  ls -alrt
 9173  hub show
 9174  code -n .
 9175  ls -lrt
 9176  ls -alrt
 9177  cat hub.yaml
 9178  ls alrt
 9179  ls -alrt
 9180  rm README.md
 9181  ls -alrt
 9182  aws eks --region us-east-2 update-kubeconfig --name applications
 9183  hub configure -f hub.yaml
 9184  source .env
 9185  skaffold dev
 9186  code -n .
 9187  hub configure -r aws --help
 9188  cd /Users/igor/dev/stack-apps/apps/python-flask
 9189  ls =alrt
 9190  ls -alrt
 9191  hub configure -f hub.yaml
 9192  source .env
 9193  skaffold dev
 9194  kubectl get services -n default
 9195  aws eks --region us-east-2 update-kubeconfig --name applications
 9196  hub stack deploy
 9197  source .env
 9198  hub show
 9199  skaffold dev
 9200  hub show
 9201  ls -alrt
 9202  skaffold dev
 9203  cd cd /Users/igor/dev/stack-apps/apps/python-flask
 9204  cd /Users/igor/dev/stack-apps/apps/python-flask
 9205  code -n .
 9206  skaffold dev
 9207  code -n .
 9208  cat ~/.ssh/id_rsa.pub
 9209  cat >~/.ssh/id_rsa
 9210  cat ~/.ssh/id_rsa
 9211  aws eks --region us-west-2 update-kubeconfig --name kf6
 9212  hub configure -r aws --dns-update
 9213  cat .env
 9214  echo -n admin:Admin123 | base64
 9215  vi config.json
 9216  ls -lrt
 9217  ls
 9218  cd ..
 9219  git clone git@github.com:mameshini/kftraining.git
 9220  cd kftraining
 9221  vi config.json
 9222  kubectl get pods -n workspace -o wide
 9223  export AWS_PROFILE=poc01
 9224  kubectl get pods -n workspace -o wide
 9225  kubectl create --namespace workspace configmap docker-config --from-file=config.json
 9226  vi config.json
 9227  hub show
 9228  mc
 9229  brew install minio/stable/mc
 9230  mc alias set minio http://buckets.app.small-julie-379.bubble.superhub.io/minio admin Admin123 --api S3v4
 9231  mc alias set minio http://buckets.app.small-julie-379.bubble.superhub.io admin Admin123 --api S3v4
 9232  mc ls
 9233  ls
 9234  mc ls minio
 9235  mc --debug ls minio
 9236  mc mb minio/small-sacha-644-harbor.app.small-sacha-644.bubble.superhub.io-mnist
 9237  mc mb minio/mnist
 9238  mc ls minio
 9239  aws eks --region us-east-2 update-kubeconfig --name applications
 9240  skaffold dev
 9241  ls
 9242  ls alrt
 9243  ls -lrt
 9244  code -n .
 9245  hub stack deploy
 9246  code -n .
 9247  hub stack deploy
 9248  hub show
 9249  ls
 9250  ls -lrt
 9251  pwd
 9252  code -n .
 9253  skaffold dev
 9254  aws eks --region us-east-2 update-kubeconfig --name applications
 9255  export AWS_PROFILE=poc01
 9256  aws eks --region us-east-2 update-kubeconfig --name applications
 9257  skaffold dev
 9258  pwd
 9259  cd ../next.js
 9260  ls -lrt
 9261  hub show
 9262  code -n .
 9263  cd ../python-flask
 9264  hub show
 9265  cd /Users/igor/dev/stack-apps/apps/python-flask
 9266  hub configure -f hub.yaml
 9267  hub show
 9268  hub configure -f hub.yaml
 9269  source .env
 9270  skaffold dev
 9271  pwd
 9272  ls
 9273  code -n .
 9274  pwd
 9275  export AWS_PROFILE=poc01
 9276  aws eks --region us-west-2 update-kubeconfig --name kf6
 9277  mc ls minio
 9278  hub show
 9279  mc mb minio/small-sacha-644-harbor.app.small-sacha-644.bubble.superhub.io-mnist
 9280  hub show
 9281  mc admin user list minio
 9282  mc
 9283  pwd
 9284  ls
 9285  cd ..
 9286  ls
 9287  cd kftraining
 9288  wget -O - https://downloads.mesosphere.io/kudo-kubeflow/d2iq-tutorials-1.0.1-0.5.0.tar.gz | tar xz
 9289  ls -lrt
 9290  cd d2iq-tutorials
 9291  ls
 9292  cd fairing
 9293  ls
 9294  ! jq -j '.cells[] | select(.metadata.tags!= null) | select (.metadata.tags[] | contains("trainer_code")) | .source | .[]' ../training/tensorflow/MNIST\ with\ TensorFlow.ipynb | sed '1d' > mnist.py\n! cp -R ../training/tensorflow/datasets .\n
 9295  ls ../training/tensorflow/datasets
 9296  hub show
 9297  kubectl get pods -n workspace
 9298  kubectl get log fairing-builder-v49pf-pqclb -n workspace
 9299  kubectl get logd fairing-builder-v49pf-pqclb -n workspace
 9300  kubectl get logs fairing-builder-v49pf-pqclb -n workspace
 9301  export AWS_PROFILE=poc01
 9302  hub configure -r aws --dns-update
 9303  aws eks --region us-west-2 update-kubeconfig --name kf6
 9304  pwd
 9305  cd ..
 9306  ls
 9307  cat config.json
 9308  vi config.json
 9309  kubectl delete --namespace workspace configmap docker-config --from-file=config.json
 9310  kubectl delete --namespace workspace configmap docker-config
 9311  kubectl create --namespace workspace configmap docker-config --from-file=config.json
 9312  cat config.json
 9313  vi config.json
 9314  kubectl delete --namespace workspace configmap docker-config
 9315  kubectl create --namespace workspace configmap docker-config --from-file=config.json
 9316  vi config.json
 9317  cat config.json
 9318  docker login https://small-sacha-644-harbor.app.small-sacha-644.bubble.superhub.io/harbor/projects/1/repositories
 9319  kubectl delete --namespace workspace configmap docker-config
 9320  kubectl create --namespace workspace configmap docker-config --from-file=config.json
 9321  cat config.json
 9322  vi config.json
 9323  cat config.json
 9324  docker login https://small-sacha-644-harbor.app.small-sacha-644.bubble.superhub.io/library/
 9325  kubectl delete --namespace workspace configmap docker-config
 9326  kubectl create --namespace workspace configmap docker-config --from-file=config.json
 9327  cat config.json
 9328  mc ls minio
 9329  hub show
 9330  kubectl create --namespace=istio-system rolebinding --clusterrole=kubeflow-view --serviceaccount=workspace:default-editor workspace-ingressgateway-view
 9331  kubectl get nodes -o wide
 9332  kubectl get services -n default
 9333  kubectl get services -n istio-system
 9334  kubectl get services -n anonymous
 9335  kubectl -n istio-system get service istio-ingressgateway
 9336  kubectl -n istio-system get service istio-ingressgateway -o wide
 9337  echo -n admin | base64
 9338  echo -n Admin123 | base64
 9339  pwd
 9340  cd d2iq-tutorials
 9341  ls
 9342  cd pipelines
 9343  ls datasets
 9344  mc mb minio/tutorial
 9345  tar --dereference -czf datasets.tar.gz ./datasets
 9346  mc cp datasets.tar.gz minio/tutorial/datasets.tar.gz
 9347  mc policy set download minio/tutorial
 9348  kubectl get po -n kfserving-system
 9349  kubectl get inferenceservice sklearn-iris -o jsonpath='{.status.url}'
 9350  kubectl get inferenceservice sklearn-iris -o jsonpath='{.status.url}' -n workspace
 9351  kubectl get inferenceservice sklearn-iris -n workspace
 9352  kubectl get inferenceservice -n workspace
 9353  kubectl get inferenceservice -n workspace -o wide
 9354  pwd
 9355  code -n .
 9356  kubectl get inferenceservice -n workspace -o wide
 9357  kubectl get inferenceservice -n kubeflow -o wide
 9358  kubectl get inferenceservice -n workspace -o wide
 9359  kubectl -n istio-system get service istio-ingressgateway
 9360  kubectl -n istio-system get service istio-ingressgateway -o jsonpath='{.status.loadBalancer.ingress[0].hostname}'
 9361  kubectl scale -n istio-system deployment kubeflow-ingressgateway --replicas=0
 9362  kubectl scale -n istio-system deployment kubeflow-ingressgateway --replicas=1
 9363  kubectl scale -n istio-system deployment istio-ingressgateway --replicas=0
 9364  kubectl scale -n istio-system deployment istio-ingressgateway --replicas=1
 9365  kubectl scale -n istio-system deployment kubeflow-ingressgateway --replicas=0
 9366  kubectl scale -n istio-system deployment kubeflow-ingressgateway --replicas=1
 9367  cat ~/.ssh/id_rsa.pub
 9368  kubectl get inferenceservice sklearn-iris
 9369  kubectl get inferenceservice sklearn-iris -n workspace
 9370  kubectl get inferenceservice 
 9371  hub configure -r aws --dns-update
 9372  hub show
 9373  history >hist.txt
 9374  code -n .
 9375  cat ~/.ssh/id_rsa.pub
 9376  cat ~/.ssh/id_rsa
 9377  export AWS_PROFILE=poc01
 9378  aws eks --region us-west-2 update-kubeconfig --name kf6
 9379  hub configure -r aws --dns-update
 9380  export AWS_PROFILE=poc01
 9381  aws eks --region us-west-2 update-kubeconfig --name kf6
 9382  hub configure -r aws --dns-update
 9383  mc ls minio
 9384  pwd
 9385  export AWS_PROFILE=poc01
 9386  ls -lrt
 9387  mc alias set minio http://buckets.app.small-julie-379.bubble.superhub.io admin Admin123 --api S3v4
 9388  kubectl get inferenceservices
 9389  kubectl get inferenceservices -n workspace
 9390  kubectl get inferenceservices mnist -n workspace
 9391  kubectl get ksvc
 9392  kubectl get ksvc -n workspace
 9393  kubectl logs -l app=networking-istio -n knative-serving
 9394  kubectl get ksvc -n workspace
 9395  kubectl get pods -n workspace
 9396  kubectl logs sklearn-iris-predictor-default-rdb87-deployment-55b87f69c7ncd5j -n workspace
 9397  kubectl logs sklearn-iris-predictor-default-rdb87-deployment-55b87f69c7ncd5j -c kfserving-container -n workspace
 9398  kubectl logs sklearn-iris-predictor-default-rdb87-deployment-55b87f69c7ncd5j -c queue-proxy -n workspace
 9399  kubectl logs sklearn-iris-predictor-default-rdb87-deployment-55b87f69c7ncd5j -c istio-proxy -n workspace
 9400  code -n .
 9401  kubectl logs -l app=networking-istio -n knative-serving
 9402  kubectl get po -n kfserving-system
 9403  export API_VERSION=v1alpha2
 9404  kubectl create namespace kfserving-test
 9405  kubectl apply -f docs/samples/${API_VERSION}/sklearn/sklearn.yaml -n kfserving-test
 9406  kubectl apply -f https://raw.githubusercontent.com/kubeflow/kfserving/master/docs/samples/v1alpha2/sklearn/sklearn.yaml -n kfserving-test
 9407  kubectl edit namespace kfserving-test -o yaml
 9408  kubectl apply -f https://raw.githubusercontent.com/kubeflow/kfserving/master/docs/samples/v1alpha2/sklearn/sklearn.yaml -n kfserving-test
 9409  kubectl get inferenceservices sklearn-iris -n kfserving-test
 9410  kubectl get pods -n kfserving-test
 9411  kubectl get services -n kfserving-test
 9412  kubectl get inferenceservices sklearn-iris -n kfserving-test -o yaml
 9413  kubectl get services -n workspace
 9414  kubectl get namespaces
 9415  kubectl get pods -n knative-serving
 9416  kubectl get logs controller-6646574879-5bw8s -n knative-serving
 9417  kubectl logs controller-6646574879-5bw8s -n knative-serving
 9418  kubectl logs controller-6646574879-5bw8s -n knative-serving -f
 9419  history
 9420  kubectl delete -f https://raw.githubusercontent.com/kubeflow/kfserving/master/docs/samples/v1alpha2/sklearn/sklearn.yaml -n kfserving-test
 9421  kubectl apply -f https://raw.githubusercontent.com/kubeflow/kfserving/master/docs/samples/v1alpha2/sklearn/sklearn.yaml -n kfserving-test
 9422  kubectl delete -f https://raw.githubusercontent.com/kubeflow/kfserving/master/docs/samples/v1alpha2/sklearn/sklearn.yaml -n kfserving-test
 9423  kubectl apply -f https://raw.githubusercontent.com/kubeflow/kfserving/master/docs/samples/v1alpha2/sklearn/sklearn.yaml -n kfserving-test
 9424  kubens kfserving-test
 9425  kubectl get pods
 9426  kubectl get secrets
 9427  kubectl get configmap
 9428  kubectl get configmap -n knative-serving
 9429  kubectl get configmap config-istio -n knative-serving
 9430  kubectl get configmap config-istio -n knative-serving -o yaml
 9431  kubectl get configmap config-domain -n knative-serving -o yaml
 9432  kubectl get configmap -n knative-serving
 9433  kubectl get configmap config-deployment -n knative-serving -o yaml
 9434  kubectl get configmap -n knative-serving
 9435  kubectl get configmap config-defaults -n knative-serving -o yaml
 9436  kubectl get configmap config-istio -n knative-serving -o yaml
 9437  kubectl get gateways --all-namespaces -o yaml
 9438  kubectl get gateways --all-namespaces
 9439  kubectl get gateways knative-serving --all-namespaces -o yaml
 9440  kubectl get gateways cluster-local-gateway -n knative-serving -o yaml
 9441  kubectl get configmap config-istio -n knative-serving -o yaml
 9442  kubcetl get services -n istio-system
 9443  kubectl get services -n istio-system
 9444  kubectl get virtualservices
 9445  kubectl get virtualservices sklearn-iris-predictor-default -o yaml
 9446  kubectl get configmap config-istio -n knative-serving -o yaml
 9447  kubectl get inferenceservices sklearn-iris -n kfserving-test
 9448  kubectl create namespace seldon
 9449  kubectl config current-context
 9450  kubectl config set-context $(kubectl config current-context) --namespace=seldon
 9451  kubectl create clusterrolebinding kube-system-cluster-admin --clusterrole=cluster-admin --serviceaccount=kube-system:default
 9452  pwd
 9453  cd ~/dev/seldon-core
 9454  code -n .
 9455  kubectl get pods -l istio=ingressgateway -n istio-system -o jsonpath='{.items[0].metadata.name}'
 9456  kubectl port-forward $(kubectl get pods -l istio=ingressgateway -n istio-system -o jsonpath='{.items[0].metadata.name}') -n istio-system 8004:8080
 9457  helm install seldon-core seldon-core-operator --repo https://storage.googleapis.com/seldon-charts --set istio.enabled=true --set usageMetrics.enabled=true --namespace seldon-system
 9458  helm3 install seldon-core seldon-core-operator --repo https://storage.googleapis.com/seldon-charts --set istio.enabled=true --set usageMetrics.enabled=true --namespace seldon-system
 9459  kubectl port-forward $(kubectl get pods -l istio=ingressgateway -n istio-system -o jsonpath='{.items[0].metadata.name}') -n istio-system 8004:8080
 9460  kubectl get pods -l istio=ingressgateway -n istio-system -o jsonpath='{.items[0].metadata.name}'
 9461  code -n .
 9462  hub show
 9463  export AWS_PROFILE=poc01
 9464  pwd
 9465  hub configure -r aws --dns-update
 9466  pwd
 9467  ls -alrt
 9468  vi .env
 9469  ls
 9470  hub show
 9471  export AWS_PROFILE=demo01
 9472  aws eks --region us-west-2 list-clusters
 9473  aws eks --region eu-central-1 list-clusters
 9474  aws eks --region us-west-2 update-kubeconfig --name kf6
 9475  aws eks --region eu-central-1 update-kubeconfig --name igorm1
 9476  kubectl get pods -l istio=ingressgateway -n istio-system -o jsonpath='{.items[0].metadata.name}'
 9477  export AWS_PROFILE=poc01
 9478  aws eks --region us-west-2 update-kubeconfig --name kf6
 9479  hub configure -r aws --dns-update
 9480  kubectl get nodes -o wide
 9481  kubectl create namespace seldon
 9482  kubectl config set-context $(kubectl config current-context) --namespace=seldon
 9483  kubectl create clusterrolebinding kube-system-cluster-admin --clusterrole=cluster-admin --serviceaccount=kube-system:default
 9484  kubectl get deployments -n kube-system
 9485  code -n .
 9486  pwd
 9487  export AWS_PROFILE=poc01
 9488  kubectl get deployments -n kube-system
 9489  kubectl create -f notebooks/resources/seldon-gateway.yaml
 9490  kubectl delete -f notebooks/resources/seldon-gateway.yaml
 9491  kubectl create -f notebooks/resources/seldon-gateway.yaml
 9492  kubectl label namespace seldon istio-injection=enabled
 9493  kubectl -n istio-system get svc grafana
 9494  kubectl -n istio-system get service istio-ingressgateway -o jsonpath='{.status.loadBalancer.ingress[0].ip}'
 9495  kubectl -n istio-system get service istio-ingressgateway -o wide
 9496  helm3 install helm-charts/seldon-core-operator --name seldon-core --set istio.enabled=true --set usageMetrics.enabled=true   --namespace seldon-system
 9497  helm install helm-charts/seldon-core-operator --name seldon-core --set istio.enabled=true --set usageMetrics.enabled=true   --namespace seldon-system
 9498  kubectl rollout status deploy/seldon-controller-manager -n seldon-system
 9499  ls
 9500  pwd
 9501  cat >mnist_v1.json
 9502  kubectl apply -f mnist_v1.json
 9503  kubectl rollout status deploy/mnist-deployment-sk-mnist-predictor-73d7608
 9504  kubectl get deployments -n seldon
 9505  kubectl rollout status deploy/mnist-classifier-sk-mnist-predictor-0-sk-mnist-classifier
 9506  kubectl -n istio-system get service 
 9507  kubectl -n istio-system get service istio-ingressgateway -o jsonpath='{.spec.ports[?(@.name=="http2")].port}'
 9508  kubectl -n istio-system get service istio-ingressgateway -o jsonpath='{.status.loadBalancer.ingress[0].ip}'
 9509  kubectl -n istio-system get service istio-ingressgateway -o jsonpath='{.status.loadBalancer}'
 9510  kubectl -n kubeflow get seldondeployment -o jsonpath='{.items[0].metadata.name}'
 9511  kubectl -n kubeflow get seldondeployment -o wide
 9512  kubectl -n seldon get seldondeployment -o wide
 9513  kubectl -n seldon get seldondeployment -o jsonpath='{.items[0].metadata.name}'
 9514  curl -s -d '{"data": {"ndarray":[[1.0, 2.0, 5.0]]}}' -X POST http://kubeflow.small-julie-379.bubble.superhub.io/seldon/seldon/seldon-model/api/v1.0/predictions    -H "Content-Type: application/json"
 9515  curl -s -d '{"data": {"ndarray":[[1.0, 2.0, 5.0]]}}' -X POST http://kubeflow.small-julie-379.bubble.superhub.io/seldon/seldon/seldon-model/api/v1.0/predictions1 -H "Content-Type: application/json"
 9516  curl -s -d '{"data": {"ndarray":[[1.0, 2.0, 5.0]]}}' -X POST http://kubeflow.small-julie-379.bubble.superhub.io/seldon/seldon/seldon-model/api/v1.0/predictions -H "Content-Type: application/json" -v
 9517  curl -s -d '{"data": {"ndarray":[[1.0, 2.0, 5.0]]}}' -X POST https://kubeflow.small-julie-379.bubble.superhub.io/seldon/seldon/seldon-model/api/v1.0/predictions -H "Content-Type: application/json" -v
 9518  kubectl get pods -n kubeflow -l service=ambassador
 9519  kubectl -n istio-system get service istio-ingressgateway 
 9520  kubectl -n istio-system get service istio-ingressgateway -o json
 9521  kubectl -n istio-system get service istio-ingressgateway -o jsonpath='{.status.loadBalancer.ingress[0].hostname}'
 9522  export AWS_PROFILE=poc01
 9523  pwd
 9524  ls
 9525  hub configure -r aws --dns-update
 9526  kubectl -n seldon get seldondeployment -o wide
 9527  kubectl create --namespace=kubeflow rolebinding --clusterrole=kubeflow-view --serviceaccount=workspace:default-editor workspace-seldondeployments
 9528  cat mnist_v1.json
 9529  cat >mnist_rest.yaml
 9530  vi mnist_rest.yaml
 9531  kubectl apply -f mnist_rest.yaml
 9532  kubectl rollout status deploy/$(kubectl get deploy -l seldon-deployment-id=tfserving -o jsonpath='{.items[0].metadata.name}')
 9533  kubectl get gateways 
 9534  kubectl get gateways --all-namespaces
 9535  vi mnist_rest.yaml
 9536  code -n .
 9537  vi mnist_rest.yaml
 9538  kubectl create clusterrolebinding workspace-cluster-admin --clusterrole=cluster-admin --serviceaccount=workspace:default-editor 
 9539  pwd
 9540  export AWS_PROFILE=poc01
 9541  pwd
 9542  hub configure -r aws --dns-update
 9543  saved_model_cli
 9544  mc ls minio/mnist/mnist
 9545  mc ls minio/mnist/mnist/mnist
 9546  cp ~/Downloads/saved_model.pb .
 9547  pwd
 9548  saved_model_cli show --dir /Users/igor/dev/seldon-core/saved_model.pb --tag_set serve
 9549  saved_model_cli show --dir /Users/igor/Downloads/model1 --tag_set serve
 9550  saved_model_cli show --dir /Users/igor/Downloads/model1 --all
 9551  pwd
 9552  cd ~/dev/kubeflow-examples
 9553  ls -alrt
 9554  code -n .
 9555  ls -lrt
 9556  rm saved_model.pb
 9557  cd ~/dev/kftraining
 9558  ls -lrt
 9559  code -n .
 9560  pwd
 9561  ls -lrt
 9562  ls -alrt
 9563  pwd
 9564  cd ~/dev/kftraining
 9565  ls -alrt
 9566  export AWS_PROFILE=demo01
 9567  aws eks list-clusters --region=eu-central-1
 9568  history >hist.txt
 9569  code -n .
 9570  cd ~/dev/seldon-core
 9571  ls -alrt
 9572  cat .env
 9573  aws eks list-clusters --region=eu-central-1
 9574  aws eks delete-cluster igorm1
 9575  aws eks delete-cluster --name igorm1
 9576  aws eks delete-cluster --name igorm1 --region=eu-central-1
 9577  aws eks list-clusters --region=eu-central-1
 9578  aws eks list-clusters --region=us-west-2
 9579  cd ~/dev/kubeflow-examples
 9580  eksctl utils write-kubeconfig --name=intlf --kubeconfig=./intlf --set-kubeconfig-context=true --region=us-west-2
 9581  export KUBECONFIG=/Users/igor/dev/kubeflow-examples/intlf
 9582  kubectl get gateways --all-namespaces
 9583  kubectl get pods -n workspace
 9584  kubectl logs dev-0 -n workspace -f
 9585  kubectl logs dev-0:dev -n workspace -f
 9586  kubectl logs dev-0 -n workspace -c dev -f
 9587  kubectl get pods -n workspace
 9588  pwd
 9589  cat ~/.ssh/id_rsa.pub
 9590  cat ~/.ssh/id_rsa
 9591  git status
 9592  pwd
 9593  kubectl create clusterrolebinding workspace-cluster-admin --clusterrole=cluster-admin --serviceaccount=workspace:default-editor
 9594  ls
 9595  export AWS_PROFILE=poc01
 9596  ls -alrt
 9597  hub configure -r aws --dns-update
 9598  cat >config.json
 9599  kubectl create --namespace workspace configmap docker-config --from-file=config.json
 9600  pwd
 9601  la -alrt
 9602  cat .env|grep MIN
 9603  cat .env|grep buck
 9604  cat .env|grep "bu"
 9605  cat .env
 9606  pwd
 9607  vi .env
 9608  hub show
 9609  hub show|grep minio
 9610  hub show -q '.parameters.component.bucket'
 9611  hub show|grep harbor
 9612  vi config.json
 9613  kubectl create --namespace workspace configmap docker-config --from-file=config.json
 9614  kubectl delete --namespace workspace configmap docker-config
 9615  kubectl create --namespace workspace configmap docker-config --from-file=config.json
 9616  hub show
 9617  hub configure -r aws --dns-update
 9618  pwd
 9619  ls -alrt
 9620  cat .env
 9621  hub configure -r aws --dns-update
 9622  sudo killall -HUP mDNSResponder && sudo dscacheutil -flushcache
 9623  curl $(hub show -q '.parameters.component.kubeflow.url' -- -r) 
 9624  hub show
 9625  export AWS_PROFILE=demo01
 9626  hub show
 9627  eksctl utils write-kubeconfig --name=intlf --kubeconfig=./intlf --set-kubeconfig-context=true --region=us-west-2
 9628  hub show
 9629  source .env
 9630  hub show
 9631  pwd
 9632  ls
 9633  code -n .
 9634  pwd
 9635  ls -alrt
 9636  export AWS_PROFILE=poc01
 9637  aws eks list-clusters --region=us-west-2
 9638  aws eks list-clusters --region=us-east-2
 9639  aws eks --region us-east-2 update-kubeconfig --name applications
 9640  kubectl get nodes -o wide
 9641  hub show
 9642  hub configure -r aws --dns-update
 9643  pwd
 9644  ls -lrt
 9645  code -n .
 9646  hub configure -f hub.yaml
 9647  hub configure -f hub.yaml --verbose
 9648  docker login https://small-sacha-644-harbor.app.small-sacha-644.bubble.superhub.io/library/
 9649  hub configure -f hub.yaml --verbose
 9650  source .env
 9651  skaffold dev
 9652  hub show
 9653  skaffold dev
 9654  ls
 9655  hub show
 9656  hub configure -f hub.yaml --force
 9657  export AWS_PROFILE=poc01
 9658  kubectl get nodes -o wide
 9659  hub configure -f hub.yaml --force
 9660  source .env
 9661  skaffold dev
 9662  cd ~/dev/stack-apps/apps/next.js
 9663  export AWS_PROFILE=poc01
 9664  ls -alrt
 9665  hub configure -f hub.yaml
 9666  skaffold dev
 9667  code -n .
 9668  skaffold dev
 9669  code -n .
 9670  skaffold dev
 9671  hub show
 9672  hub configure -f hub.yaml
 9673  skaffold dev
 9674  hub show
 9675  ls -alrt
 9676  export AWS_PROFILE=poc01
 9677  hub show
 9678  hub configure -r aws --dns-update
 9679  ls -lrt
 9680  export AWS_PROFILE=poc01
 9681  hub show
 9682  hub configure -f hub.yaml
 9683  source .env
 9684  code -n .
 9685  skaffold dev
 9686  export AWS_PROFILE=poc01
 9687  code -n .
 9688  hub show
 9689  hub configure -f hub.yaml
 9690  skaffold dev
 9691  kubectl get nodes -o wide
 9692  hub show
 9693  hub configure -f hub.yaml
 9694  skaffold dev
 9695  pwd
 9696  ls -alrt
 9697  vi hub.yaml 
 9698  vi params.yaml
 9699  vi hub.yaml 
 9700  hub show
 9701  gsutil ls gs://aju-dev-demos-codelabs/kubecon/
 9702  export AWS_PROFILE=poc01
 9703  hub configure -f hub.yaml
 9704  hub configure -r aws --dns-update
 9705  kubectl -n kubeflow get deployment/ml-pipeline -o wide
 9706  eksctl utils write-kubeconfig --name=kf7 --kubeconfig=./kf7 --set-kubeconfig-context=true --region=us-west-2
 9707  eksctl utils write-kubeconfig --name=kf6 --kubeconfig=./kf6 --set-kubeconfig-context=true --region=us-west-2
 9708  export KUBECONFIG=./kf6
 9709  kubectl -n kubeflow get deployment/ml-pipeline -o wide
 9710  pwd
 9711  cd ~/dev/components/
 9712  code -n .
 9713  export AWS_PROFILE=poc01
 9714  aws eks --region eu-central-1 get-clusters
 9715  aws eks --region eu-central-1 list-clusters
 9716  aws eks --region eu-central-1 update-kubeconfig --name intel-training
 9717  eksctl utils write-kubeconfig --name=intel-training --kubeconfig=./kfintel --set-kubeconfig-context=true --region=eu-central-1
 9718  hub show
 9719  kubectl get nodes -o wide
 9720  aws eks --region eu-central-1 update-kubeconfig --name intel-training
 9721  kubectl get nodes -o wide
 9722  export KUBECONFIG=./kfintel
 9723  kubectl get nodes -o wide
 9724  cat ./kfintel
 9725  aws s3 ls
 9726  aws iam get-user 
 9727  cat ./kfintel
 9728  kubectl get nodes -o wide
 9729  kubectl get pods -n igor
 9730  kubectl get ns
 9731  cat config.json
 9732  code -n .
 9733  echo -n admin:harbor.234 | base64
 9734  cat ~/.ssh/id_rsa.pub
 9735  cat ~/.ssh/id_rsa
 9736  kubectl get pods -n igor
 9737  export AWS_PROFILE=poc01
 9738  export KUBECONFIG=./kfintel
 9739  kubectl get pods -n igor
 9740  ls
 9741  pwd
 9742  ls -alrt
 9743  pwd
 9744  ls *.cz
 9745  cd ~/dev/kubeflow-examples
 9746  ls -lrt
 9747  cd ../kftraining/d2iq-tutorials/
 9748  ls
 9749  cd ..
 9750  code -n .
 9751  cat ~/.ssh/id_rsa.pub
 9752  vi ~/.ssh/id_rsa.pub
 9753  cat ~/.ssh/id_rsa
 9754  kubectl get pods -n igor
 9755  kubectl logs end-to-end-mnist-pipeline-qbm4l-45888297
 9756  kubectl logs -p end-to-end-mnist-pipeline-qbm4l-45888297
 9757  kubectl logs -p end-to-end-mnist-pipeline-qbm4l-45888297 -n igor
 9758  kubectl logs -p end-to-end-mnist-pipeline-qbm4l-45888297 -n igor -c main -f
 9759  kubectl logs -p end-to-end-mnist-pipeline-qbm4l-45888297 -n igor -c wait -f
 9760  kubectl get pods -n igor
 9761  kubectl logs end-to-end-mnist-pipeline-qbm4l-45888297 -n igor -c wait -f
 9762  ls -lrt
 9763  export KUBECONFIG=./kf6
 9764  kubectl get nodes -o wide
 9765  aws eks --region us-west-2 update-kubeconfig --name kf6
 9766  kubectl get nodes -o wide
 9767  hub show
 9768  hub configure -r aws --dns-update
 9769  history >hist.txt
 9770  history
 9771  aws eks --region eu-central-1 update-kubeconfig --name intel-training
 9772  kubectl get nodes -o wide
 9773  kubectl get pods -n igor
 9774  kubectl logs end-to-end-mnist-pipeline-jcwb9-774755536 -n igor -c wait -f
 9775  kubectl logs end-to-end-mnist-pipeline-jcwb9-774755536 -n igor -c main -f
 9776  kubectl get pods -n igor
 9777  kubectl get ns
 9778  kubectl get pods -n igor
 9779  kubectl logs tfserving-default-0-mnist-6b5d85945c-jffsq -n igor
 9780  kubectl logs tfserving-default-0-mnist-6b5d85945c-jffsq -n igor -c mnist
 9781  kubectl logs tfserving-default-0-mnist-6b5d85945c-jffsq -n igor -c tfserving -f
 9782  kubectl logs tfserving-default-0-mnist-6b5d85945c-jffsq -n igor -c seldon-container-engine -f
 9783  kubectl logs tfserving-default-0-mnist-6b5d85945c-jffsq -n igor -c istio-proxy -f
 9784  kubectl get pods -n igor
 9785  kubectl get events --sort-by=.metadata.creationTimestamp -n igor
 9786  kubectl get pods -n igor
 9787  kubectl get services -n igor
 9788  kubectl get pods -n igor
 9789  kubectl get events --sort-by=.metadata.creationTimestamp -n igor
 9790  kubectl get deployments -n tfserving
 9791  kubectl get deployments -n igor
 9792  kubectl get deployment tfserving-default-0-mnist -n igor 
 9793  kubectl get events --sort-by=.metadata.creationTimestamp -n igor
 9794  kubectl get pods -n igor
 9795  kubectl logs tfserving-default-0-mnist-5dbd79b748-jsf68 -n igor -p
 9796  kubectl logs tfserving-default-0-mnist-5dbd79b748-jsf68 -n igor -p -c mnist
 9797  kubectl logs tfserving-default-0-mnist-5dbd79b748-jsf68 -n igor -p -c tfserving
 9798  kubectl get deplyment -n igor
 9799  kubectl get deployments -n igor
 9800  kubectl delete deployment tfserving-default-0-mnist -n igor
 9801  kubectl get pods -n igor
 9802  kubectl get events --sort-by=.metadata.creationTimestamp -n igor
 9803  kubectl get pods -n igor
 9804  kubectl logs tfserving-default-0-mnist-6b5d85945c-nrpjp -n igor -p
 9805  stern -n igor . --tail 20 --exclude /ping --template '{{ .PodName }} {{ .Message}}'
 9806  kubectl get deployments -n igor
 9807  kubectl delete deployment mnist-tensorboard -n igor
 9808  stern -n igor . --tail 20 --exclude /ping --template '{{ .PodName }} {{ .Message}}'
 9809  kubectl get pods -n igor
 9810  kubectl logs tfserving-default-0-mnist-6b5d85945c-5f8st -n igor -p --all-containers=true
 9811  export AWS_PROFILE=poc01
 9812  kubectl get pods -n igor
 9813  stern -n igor . --tail 20 --exclude /ping --template '{{ .PodName }} {{ .Message}}'
 9814  kubectl get pods -n igor
 9815  kubectl get profile igor -o yaml
 9816  sudo killall -HUP mDNSResponder && sudo dscacheutil -flushcache
 9817  cd ~/dev/
 9818  ls -lrt
 9819  pwd
 9820  find ~ -name "mykf" -print
 9821  cd /Users/igor/dev/stack-ml-eks/mykf
 9822  export AWS_PROFILE=poc01
 9823  aws eks --region eu-central-1 update-kubeconfig --name intel-training
 9824  kubectl get pods -n igor
 9825  export KUBECONFIG=/Users/igor/dev/stack-ml-eks/kf7
 9826  export KUBECONFIG=/Users/igor/dev/stack-ml-eks/kf6
 9827  ls -lrt
 9828  export KUBECONFIG=/Users/igor/dev/stack-ml-eks/mykf/kf6
 9829  kubectl get nodes -o wide
 9830  aws eks --region us-west-2 update-kubeconfig --name kf6
 9831  kubectl get nodes -o wide
 9832  hub configure -r aws --dns-update
 9833  hub show
 9834  hub configure -r aws --dns-update
 9835  kubectl get pods -n igor
 9836  aws eks --region eu-central-1 update-kubeconfig --name intel-training
 9837  kubectl get pods -n igor
 9838  kubectl logs tfserving-default-0-mnist-5dbd79b748-njnwq -n igor -p --all-containers=true
 9839  kubectl get pods -n igor
 9840  kubectl logs tfserving-default-0-mnist-8bc7cc775-dfdwh -n igor -p --all-containers=true
 9841  kubectl get pods -n igor
 9842  kubectl logs tfserving-default-0-mnist-model-7767b57c99-8t2b4 -n igor -p --all-containers=true
 9843  kubectl get pods -n igor
 9844  kubectl logs tfserving-default-0-mnist-model-7767b57c99-8t2b4 -n igor -p --all-containers=true
 9845  stern -n igor . --tail 20 --exclude /ping --template '{{ .PodName }} {{ .Message}}'
 9846  kubectl get pods -n igor
 9847  kubectl logs tfserving-default-0-mnist-model-7767b57c99-8t2b4 -n igor -p --all-containers=true
 9848  kubectl logs tfserving-default-0-mnist-model-7767b57c99-8t2b4 -n igor --all-containers=true
 9849  kubectl get pods -n igor
 9850  kubectl logs tfserving-default-0-mnist-7d6974d8d6-f8gzb -n igor --all-containers=true
 9851  kubectl get pods -n igor
 9852  kubectl logs tfserving-default-0-mnist-5dbd79b748-jrlsq -n igor --all-containers=true
 9853  code -n .
 9854  kubectl get pods -n igor
 9855  kubectl logs tfserving-default-0-mnist-7d6974d8d6-vn5cs -n igor --all-containers=true
 9856  kubectl get pods -n igor
 9857  kubectl logs tfserving-default-0-mnist-866fd47d9b-vx9bn -n igor --all-containers=true -f
 9858  kubectl logs tfserving-default-0-mnist-866fd47d9b-vx9bn -n igor --all-containers=true
 9859  kubectl get pods -n igor
 9860  kubectl logs tfserving-default-0-mnist-68d5cc8d74-w9ts7 -n igor --all-containers=true
 9861  kubectl get pods -n igor
 9862  kubectl logs tfserving-default-0-mnist-68d5cc8d74-w9ts7 -n igor --all-containers=true
 9863  kubectl get pods -n igor
 9864  kubectl logs tfserving-default-0-mnist-5b67568f57-rsd5l -n igor --all-containers=true
 9865  stern -n igor . --tail 20 --exclude /ping --template '{{ .PodName }} {{ .Message}}'
 9866  kubectl get deployments -n igor
 9867  kubectl delete deployment mnist-model -n igor
 9868  kubectl get pods -n igor
 9869  stern -n igor . --tail 20 --exclude /ping --template '{{ .PodName }} {{ .Message}}'
 9870  kubectl get pods -n igor
 9871  kubectl logs tfserving-default-0-mnist-b4b89d9df-jzkh6 -n igor --all-containers=true
 9872  kubectl get pods -n igor
 9873  kubectl logs tfserving-default-0-mnist-b4b89d9df-5g8b9 -n igor --all-containers=true
 9874  kubectl get pods -n igor
 9875  kubectl get pod -n kfserving-system
 9876  kubectl get pod -n igor
 9877  kubectl logs tfserving-default-0-mnist-78df968ff6-f6rw9 -n igor --all-containers=true
 9878  kubectl get pod -n igor
 9879  kubectl logs tfserving-default-0-mnist-78df968ff6-vt7fh -n igor --all-containers=true
 9880  kubectl get pod -n igor
 9881  kubectl logs tfserving-default-0-mnist-7cb8fdbb9b-9rrxl -n igor --all-containers=true
 9882  kubectl get pod -n igor
 9883  kubectl logs tfserving-default-0-mnist-5dbd79b748-tmmpk -n igor --all-containers=true
 9884  kubectl get pod -n igor
 9885  kubectl logs tfserving-default-0-mnist-5dbd79b748-gpkp9 -n igor --all-containers=true
 9886  kubectl get pod -n igor
 9887  kubectl logs tfserving-default-0-mnist-5dbd79b748-jv6mj -n igor --all-containers=true
 9888  kubectl get pod -n igor
 9889  kubectl get pod -n default
 9890  kubectl get pod -n seldon
 9891  kubectl get pod -n igor
 9892  kubectl get services -n igor
 9893  kubectl get pod -n igor
 9894  kubectl get deploy -l seldon-deployment-id=minio-sklearn -o jsonpath='{.items[0].metadata.name}'
 9895  kubectl get deploy
 9896  kubectl get deploy -n igor
 9897  kubectl get deploy -l seldon-deployment-id=minio-sklearn -o jsonpath='{.items[0].metadata.name}' -n igor
 9898  kubectl get deploy -l seldon-deployment-id=minio-sklearn -o jsonpath='{.items[0].metadata.name}' -n igor rollout status deploy/$(kubectl get deploy -l seldon-deployment-id=minio-sklearn -o jsonpath='{.items[0].metadata.name}' -n igor)
 9899  kubectl get pod -n igor
 9900  kubectl get deploy -l seldon-deployment-id=minio-sklearn -o jsonpath='{.items[0].metadata.name}' -n igor
 9901  kubectl rollout status deploy/minio-sklearn-default-0-classifier
 9902  kubectl logs tfserving-default-0-mnist-5dbd79b748-jv6mj -n igor --all-containers=true
 9903  kubectl logs tfserving-default-0-mnist-5dbd79b748-jv6mj -n igor
 9904  kubectl logs tfserving-default-0-mnist-5dbd79b748-jv6mj -n igor -c tfserving-model-initializer
 9905  kubectl get pod -n igor
 9906  stern -n igor . --tail 20 --exclude /ping --template '{{ .PodName }} {{ .Message}}'
 9907  kubectl get pod -n igor
 9908  kubectl logs minio-sklearn-default-0-classifier-788bc874d9-dcgtq -n igor --all-containers=true
 9909  kubectl get pod -n igor
 9910  kubectl get profiles
 9911  cd ~/dev/agilestacks-components/sweeper
 9912  export AWS_PROFILE=poc01
 9913  pwd
 9914  aws eks --region us-west-2 update-kubeconfig --name kf6
 9915  kubectl get nodes -o wide
 9916  hub show
 9917  ls -lrt
 9918  hub configure -r aws --dns-update
 9919  ./main.py sweep --account 608332689354
 9920  ls
 9921  pwd
 9922  ls
 9923  ls -lrt
 9924  ls
 9925  cd ~/dev/stack-ml-eks
 9926  ls
 9927  cat etc/eks-cluster.yaml | sed -e "s/happy-cluster/kf6/g" | eksctl delete cluster -f -
 9928  vi etc/eks-cluster.yaml
 9929  ./main.py sweep --account 608332689354
 9930  ls
 9931  cat etc/eks-cluster.yaml | sed -e "s/happy-cluster/applications/g" | eksctl delete cluster -f -
 9932  aws eks list-clusters --region=us-east-2
 9933  aws eks list-clusters --region=us-west-2
 9934  ./main.py sweep --account 608332689354
 9935  ls
 9936  ls mykf
 9937  ls mykf/components
 9938  ls -lrt
 9939  cd ~/dev/kubeflow-examples
 9940  ls
 9941  export AWS_PROFILE=poc01
 9942  code -n .
 9943  export STACK_NAME="kf6"
 9944  cat etc/eks-cluster.yaml | sed -e "s/happy-cluster/$STACK_NAME/g" | eksctl create cluster -f -
 9945  eksctl utils write-kubeconfig --name=kf6 --kubeconfig=./kf6 --set-kubeconfig-context=true
 9946  eksctl utils write-kubeconfig --name=kf6 --kubeconfig=./kf6 --set-kubeconfig-context=true --region=us-west-2
 9947  ls
 9948  cd mykf
 9949  ls
 9950  eksctl utils write-kubeconfig --name=kf6 --kubeconfig=./kf6 --set-kubeconfig-context=true --region=us-west-2
 9951  code -n .
 9952  ls -lrt
 9953  hub configure -f hub.yaml -f params.yaml
 9954  source .env
 9955  hub stack deploy 2>&1 | tee mystack.log
 9956  pwd
 9957  l s-lrt
 9958  ls -lrt
 9959  pwd
 9960  aws eks list-clusters --region=us-west-2
 9961  cat etc/eks-cluster.yaml | sed -e "s/happy-cluster/$STACK_NAME/g" | eksctl delete cluster -f -
 9962  ls
 9963  cd ..
 9964  cat etc/eks-cluster.yaml | sed -e "s/happy-cluster/$STACK_NAME/g" | eksctl delete cluster -f -
 9965  aws eks list-clusters --region=us-east-2
 9966  aws eks list-clusters --region=us-east-1
 9967  aws eks list-clusters --region=us-west-1
 9968  aws eks list-clusters --all-regions
 9969  aws eks list-clusters --region=eu-central-1
 9970  aws eks --region eu-central-1 update-kubeconfig --name kubeflb
 9971  kubectl get nodes -o wide
 9972  aws iam get-user 
 9973  cd ~/dev/intel-asi
 9974  ls -lrt
 9975  kubectl get nodes -o wide
 9976  aws s3 ls
 9977  aws s3 ls --region=eu-central-1
 9978  eksctl utils write-kubeconfig --name kubeflb --kubeconfig=./kubeflb --set-kubeconfig-context=true --region=eu-central-1
 9979  cat ./kubeflb
 9980  kubectl get nodes -o wide
 9981  vi .env
 9982  source .env
 9983  vi .env
 9984  aws s3 cp s3://608332689354.superhub.io/small-brooksie-417.bubble.superhub.io/hub/intel-asi/hub.state ./hub.state
 9985  vi .env
 9986  aws s3 cp s3://608332689354.superhub.io/small-brooksie-417.bubble.superhub.io/hub/intel-asi/hub.elaborate ./hub.elaborate
 9987  hub configure
 9988  kubectl get nodes -o wide
 9989  hub show
 9990  hub configure -r aws --dns-update
 9991  kubectl get nodes -o wide
 9992  hub configure -r aws --dns-update
 9993  kubectl get pod -n igor
 9994  stern -n igor . --tail 20 --exclude /ping --template '{{ .PodName }} {{ .Message}}'
 9995  hub configure -r aws --dns-update
 9996  kubectl -n kubeflow edit cm centraldashboard-links-config
 9997  /Applications/DJI\ Assistant\ 2\ For\ Mavic.app/Contents/Resources/installdriver.sh ; exit;
 9998  hub configure -r aws --dns-update
 9999  ls
10000  ls -lrt
10001  hub configure -r aws --dns-update
10002  export AWS_PROFILE=poc01
10003  ls -lrt
10004  hub configure -r aws --dns-update
10005  kubectl get nodes -o wide
10006  hub configure -r aws --dns-update
10007  kubectl get nodes -o wide
10008  pwd
10009  export AWS_PROFILE=poc01
10010  ls
10011  ls -lrt
10012  hub configure -r aws --dns-update
10013  cat .ev
10014  cat .env
10015  hub show
10016  pwd
10017  hub configure -r aws --dns-update
10018  pwd
10019  ls -alrt
10020  pwd
10021  export AWS_PROFILE=poc01
10022  hub show
10023  /System/Applications/Photos.app/Contents/MacOS/Photos ; exit;
10024  pwd
10025  cd ~/dev/superhub.io
10026  ls
